[{"/Users/tachiaoi/Semesters/ncee-2020/frontend/src/index.js":"1","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/reportWebVitals.js":"2","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/App.js":"3","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/homepage.js":"4","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/institute.js":"5","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/utils/constants.js":"6","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/utils/svg.js":"7","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/statistics.js":"8","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/pagination.js":"9","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/comments.js":"10","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/navigation-bar.js":"11","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/navbar.js":"12","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/login.js":"13","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/forum.js":"14","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/about.js":"15","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/user.js":"16","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/utils/util.js":"17","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/topic.js":"18","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/post.js":"19","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/post.js":"20","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/user.js":"21","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/institute.js":"22","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/msg.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":3449,"mtime":1621975153545,"results":"27","hashOfConfig":"25"},{"size":7444,"mtime":1621590270885,"results":"28","hashOfConfig":"25"},{"size":39221,"mtime":1622535355402,"results":"29","hashOfConfig":"25"},{"size":29558,"mtime":1621584247987,"results":"30","hashOfConfig":"25"},{"size":25097,"mtime":1621063664936,"results":"31","hashOfConfig":"25"},{"size":1993,"mtime":1615010863615,"results":"32","hashOfConfig":"25"},{"size":2453,"mtime":1615271896422,"results":"33","hashOfConfig":"25"},{"size":643,"mtime":1613728261493,"results":"34","hashOfConfig":"25"},{"size":1548,"mtime":1619101670905,"results":"35","hashOfConfig":"25"},{"size":5104,"mtime":1622452310276,"results":"36","hashOfConfig":"25"},{"size":2061,"mtime":1617046951256,"results":"37","hashOfConfig":"25"},{"size":20734,"mtime":1621067730744,"results":"38","hashOfConfig":"25"},{"size":424,"mtime":1611822138000,"results":"39","hashOfConfig":"25"},{"size":9218,"mtime":1621541493641,"results":"40","hashOfConfig":"25"},{"size":548,"mtime":1617128207237,"results":"41","hashOfConfig":"25"},{"size":22426,"mtime":1621632854483,"results":"42","hashOfConfig":"25"},{"size":24800,"mtime":1621562622767,"results":"43","hashOfConfig":"25"},{"size":4663,"mtime":1619092269515,"results":"44","hashOfConfig":"25"},{"size":36426,"mtime":1621590528730,"results":"45","hashOfConfig":"25"},{"size":22253,"mtime":1621977566097,"results":"46","hashOfConfig":"25"},{"size":1380,"mtime":1620966906389,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"qbzjm6",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"50"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"50"},"/Users/tachiaoi/Semesters/ncee-2020/frontend/src/index.js",[],["112","113"],"/Users/tachiaoi/Semesters/ncee-2020/frontend/src/reportWebVitals.js",[],"/Users/tachiaoi/Semesters/ncee-2020/frontend/src/App.js",["114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport React, { useState, useEffect, useContext } from 'react'\nimport { Alert, Form, FormControl, Button, Nav, Tab, Row, Col, Table, ListGroup } from 'react-bootstrap'\nimport { Navbar, NavDropdown, Breadcrumb, Pagination } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect, useHistory, useLocation } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nimport SVG from './utils/svg'\nimport Homepage from './pages/homepage'\nimport InstitutePage from './pages/institute'\nimport StatsPage from './pages/statistics'\nimport LoginPage from './pages/login'\nimport ForumPage from './pages/forum'\nimport AboutPage from './pages/about'\nimport UserPage from './pages/user'\nimport PostPage from './pages/post'\nimport NavigationBar from './pages/components/navigation-bar'\nimport constants from './utils/constants'\nimport AppNavbar from './pages/components/navbar'\n\n// components\nconst CNavbar = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\">高校录取分数线</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Link to=\"/home\">首页</Link>\n          <Link to=\"/data\">看数据</Link>\n          <Link to=\"/institute\">查学校</Link>\n          <Link to=\"/forum\">讨论区</Link>\n          <Link to=\"/about\">关于</Link>\n        </Nav>\n        <Form inline style={{ marginRight: 8 }}>\n          <FormControl type=\"text\" placeholder=\"...\" className=\"mr-sm-2\" />\n          <Button variant=\"outline-success\">搜索</Button>\n        </Form>\n\n        <Nav.Link href=\"/login\">登入</Nav.Link>\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\n\nconst LogoutPage = (props) => {\n  const history = useHistory()\n  useEffect(() => {\n    window.localStorage.removeItem('user')\n    window.localStorage.removeItem('token')\n    history.push('/') \n    history.go()\n  }, [])\n  return (\n    <div></div>\n  )\n}\n\n\nfunction App() {\n  const [user, setUser] = useState(JSON.parse(window.localStorage.getItem('user')));\n  const history = createBrowserHistory();\n  \n  return (\n      <div>\n        <Router history={history}>\n          {\n            // TODO: change Link into history.push() components\n          }\n          <AppNavbar />\n          <Switch>\n            <div className=\"mt-3\">\n              <Route path=\"/\" exact={true}>\n                <Redirect to=\"/home\" />\n              </Route>\n\n              <Route path=\"/home\">\n                <Homepage />\n              </Route>\n\n              <Route path=\"/stats\">\n                <StatsPage />\n              </Route>\n\n              <Route path=\"/institute\">\n                <InstitutePage />\n              </Route>\n\n              <Route path=\"/forum\">\n                <ForumPage />\n              </Route>\n\n              <Route path=\"/about\">\n                <AboutPage />\n              </Route>\n\n              <Route path=\"/login\">\n                <LoginPage />\n              </Route>\n\n              <Route path=\"/logout\">\n                <LogoutPage />\n              </Route>\n\n              <Route path=\"/user\">\n                <UserPage />\n              </Route>\n\n              <Route path=\"/post\">\n                <PostPage />\n              </Route>\n\n            </div>\n          </Switch>\n        </Router>\n      </div>\n  );\n}\n\nexport default App;\n","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/homepage.js",["133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport '../style.css'\nimport React, { useState, useEffect } from 'react'\nimport { Alert, Form, FormControl, Button, ButtonGroup, Nav, Tab, Row, Col, Table, InputGroup, Dropdown, DropdownButton, ListGroup, Image, Card, CardGroup, CardDeck, Badge, Tabs, FormGroup, Carousel } from 'react-bootstrap'\nimport { Navbar, NavDropdown, Breadcrumb, Pagination } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect, useHistory, useLocation, useParams, useRouteMatch } from 'react-router-dom'\nimport constants from '../utils/constants'\nimport SVG from '../utils/svg'\nimport { makePaginations } from './components/pagination'\nimport { timeStringConverter } from '../utils/util'\nimport { TopicCard, TopicList } from './components/topic'\nimport { PostCard, NewPostForm, PostList } from './components/post'\nimport { LoginForm, UserActivity } from './components/user'\nimport axios from 'axios'\nimport { InstituteCard } from './components/institute'\n\nconst HomePage = (props) => {\n  const today = new Date()\n  const user = JSON.parse(window.localStorage.getItem('user'))\n  const history = useHistory()\n  const [posts, setPosts] = useState()\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n  const [trends, setTrends] = useState([])\n  const [institutes, setInstitutes] = useState()\n\n  useEffect(async () => {\n    const url = `http://${document.domain}:${constants.serverPort}/topic/trends`\n    try {\n      const res = await axios.get(url)\n      console.log(res.data)\n      setTrends(res.data.trends)\n    } catch (err) {\n      console.log(err)\n      setMsg({\n        type: 'danger',\n        text: err.response?.data?.msg\n      })\n    }\n\n  }, [])\n\n  useEffect(async () => {\n    const allInstitutes = JSON.parse(window.localStorage.getItem('allInstitutes'))\n    const url = `http://${document.domain}:${constants.servicePort}/recommend`\n    if (allInstitutes) {\n      let randArr1 = [...(new Set([...Array(100)].map(v => Math.floor(Math.random() * 150))))]\n      let randArr2 = [...(new Set([...Array(100)].map(v => Math.floor(Math.random() * 150 + 50))))]\n      let randArr = [...(new Set([...randArr1, ...randArr2]))].slice(0, 10)\n      console.log(randArr)\n      setInstitutes([...allInstitutes.filter((i, idx) => randArr.includes(idx))])\n    }\n    if (user) {\n      const res = await axios.post(url, { user: user._id }, { header: { 'Content-Type': 'application/json; charset=utf-8' } })\n      console.log(res)\n      if (allInstitutes && res.data.instpred.length) {\n        const randIdx = [...(new Set([...Array(400)].map(v => Math.floor(Math.random() * 20))))].slice(0, 10).sort((a, b) => a - b)\n        console.log(randIdx)\n        let ids = res.data.instpred.slice(0, 20).filter((i, idx) => randIdx.includes(idx)).map(i => i[1])\n        console.log(ids)\n        setInstitutes([...allInstitutes.filter(i => ids.includes(i._id))])\n      }\n    }\n  }, [])\n\n\n  useEffect(() => {\n    document.title = `${constants.title.homepage} - ${constants.appName}`\n  }, [])\n\n\n\n  /*\n  useEffect(async () => {\n    const token = window.localStorage.getItem('token')\n    if (token) {\n      const auth = `bearer ${token}`\n      const url = `http://${document.domain}:${constants.serverPort}/post/fetchfollowedpost`\n\n      try {\n        const res = await axios.post(url, {}, { headers: { auth } })\n        console.log(res)\n        setPosts(res.data.posts.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()))\n      } catch (err) {\n        console.log(err.response)\n        setMsg({\n          type: 'danger',\n          text: (err.response.data) ? err.response.data.req : '未能找到关注中用户的贴文'\n        })\n      }\n    }\n  }, [user])\n  */\n  return (\n    <>\n      <div className=\"container\">\n        <Card.Body>\n          <Row>\n            <Col>\n              <Card.Title as=\"h3\">\n                {\n                  (user) ? (<><a href={`/user/${user.username}`}>{user.name}</a>，</>) : null\n                }\n                欢迎使用\n              </Card.Title>\n            </Col>\n            {\n              (user) ? null : (\n                <Col className=\"d-lg-none\" xs=\"auto\">\n                  <Card.Text>\n                    <Button variant=\"link\" className=\"p-0 text-success\" onClick={() => { history.push('/login'); history.go() }}>\n                      登入\n                    </Button>\n                  </Card.Text>\n                </Col>\n              )\n            }\n          </Row>\n          <Card.Text>\n            <p>\n              <Alert variant=\"info\">\n                今天是 <strong>{today.toLocaleString('zh', constants.shortDateOptions)}</strong>，距离高考还有 <b className=\"text-primary\">{Math.floor((constants.dayOfNCEE.getTime() - today.getTime()) / (1000 * 60 * 60 * 24))}</b> 天\n                </Alert>\n              {\n                (!user) ? (\n                  <>\n                    <Button variant=\"link\" size=\"sm\" className=\"text-success\"\n                      onClick={() => {\n                        history.push('/institute')\n                      }}\n                    >查学校→</Button>\n                    <br />\n                    <Button variant=\"link\" size=\"sm\" className=\"text-success\"\n                      onClick={() => {\n                        history.push('/forum')\n                      }}\n                    >讨论区→</Button>\n                    <br />\n                  </>\n                ) : null\n              }\n            </p>\n          </Card.Text>\n          <Row>\n            {\n              (user) ? (\n                <Col xs={12} lg={6} className=\"\">\n                  <CardGroup>\n\n                    <Card className=\"mb-3\">\n                      <Card.Header>\n                        <strong>\n                          你关注的\n                      </strong>\n                      </Card.Header>\n                      <UserActivity users={[...user.following, user._id]} homepage limit={1000} />\n                    </Card>\n                  </CardGroup>\n                </Col>\n              ) : null\n            }\n            <Col xs={12} lg={(user) ? 6 : 12} className=\"\">\n              <Row>\n                <Col xs={12}>\n                  <Card className=\"mb-3\">\n                    <Card.Header>\n                      <strong>\n                        热门讨论\n                      </strong>\n                    </Card.Header>\n                    <TopicList topics={trends} viewMode={'紧凑'} trends />\n                  </Card>\n                </Col>\n                {\n                  (user) ? (\n                    <Col xs={12} lg={(user) ? 12 : 6}>\n                      <Card className=\"mb-3\">\n                        <Card.Header>\n                          <strong>\n                            推荐院校\n                      </strong>\n                        </Card.Header>\n                        <ListGroup variant=\"flush\">\n                          {\n                            (institutes?.map(i => (\n                              <InstituteCard institute={i} size=\"sm\" />\n                            )))\n                          }\n                        </ListGroup>\n                      </Card>\n                    </Col>\n\n                  ) : null\n                }\n              </Row>\n            </Col>\n          </Row>\n\n        </Card.Body>\n      </div>\n    </>\n  )\n}\n\nexport default HomePage","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/institute.js",["175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212"],"/Users/tachiaoi/Semesters/ncee-2020/frontend/src/utils/constants.js",[],"/Users/tachiaoi/Semesters/ncee-2020/frontend/src/utils/svg.js",[],"/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/statistics.js",["213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport { useState, useEffect } from 'react'\nimport { Card, Alert, Form, FormControl, Button, Nav, Tab, Row, Col, Table, ListGroup } from 'react-bootstrap'\nimport { Navbar, NavDropdown, Breadcrumb, Pagination } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect } from 'react-router-dom'\nimport constants from '../utils/constants'\n\nconst Statistics = (props) => {\n  useEffect(() => {\n    document.title = `${constants.title.stats} - ${constants.appName}`\n  }, [])\n\n  return (\n    <>\n      <div className=\"container\">\n        <Tab.Container defaultActiveKey=\"general\">\n          <Card>\n            <Card.Header>\n              <Nav variant=\"tabs\" defaultActiveKey=\"#first\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"general\">概览</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"data\">数据</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Card.Header>\n            <Tab.Content>\n              <Tab.Pane eventKey=\"general\">\n                <Card.Body>\n                  <Card.Title>Special title treatment</Card.Title>\n                  <Card.Text>\n                    With supporting text below as a natural lead-in to additional content.\n            </Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Tab.Pane>\n\n              <Tab.Pane eventKey=\"data\">\n                <Card.Body>\n                  <Card.Title>DATA</Card.Title>\n                  <Card.Text>\n                    With supporting text below as a natural lead-in to additional content.\n                </Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Tab.Pane>\n            </Tab.Content>\n          </Card>\n        </Tab.Container>\n      </div>\n    </>\n  )\n\n}\n\nexport default Statistics;","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/pagination.js",[],"/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/comments.js",["231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267"],"import { useState, useEffect } from 'react'\nimport { ButtonGroup, ToggleButton, Accordion, Card, Alert, Form, FormControl, Button, Nav, Tab, Row, Col, Table, ListGroup, InputGroup } from 'react-bootstrap'\nimport { Tabs, Image, Badge, Navbar, NavDropdown, Breadcrumb, Pagination } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect, useParams, useRouteMatch, useHistory, useLocation } from 'react-router-dom'\nimport constants from '../../utils/constants'\nimport SVG from '../../utils/svg'\nimport axios from 'axios'\n\n\nconst Comments = (props) => {\n  return (<div></div>)\n}\n\nexport default Comments;\n\n",["268","269"],"/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/navigation-bar.js",["270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301"],"import { useState, useEffect } from 'react'\nimport { ButtonGroup, ToggleButton, Accordion, Card, Alert, Form, FormControl, Button, Nav, Tab, Row, Col, Table, ListGroup, InputGroup } from 'react-bootstrap'\nimport { Tabs, Image, Badge, Navbar, NavDropdown, Breadcrumb, Pagination } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect, useParams, useRouteMatch, useHistory, useLocation } from 'react-router-dom'\nimport constants from '../../utils/constants'\nimport SVG from '../../utils/svg'\nimport axios from 'axios'\n\n\nconst goBack = (path) => {\n  let patharr = path.split('/')\n  let newPath = patharr.slice(0, -1)\n  return (newPath.length <= 1) ? '/' : newPath.join('/')\n}\n\nconst makeBreadcrumb = (path) => {\n  let patharr = path.split('/')\n  return (\n    <Breadcrumb>\n      {patharr.map((p) => {\n        return (\n          <Breadcrumb.Item href=\"#\">\n            {p}\n          </Breadcrumb.Item>\n        )\n      })}\n    </Breadcrumb>\n  )\n}\n\n\nconst NavigationBar = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    console.log(history)\n  }, [location])\n\n  return (\n    <div>\n      <Navbar variant=\"light\" bg=\"light\">\n        <Nav>\n          <Nav.Item>\n            <Nav.Link onClick={() => { history.goBack() }}><SVG variant=\"chevron-left\" /></Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            {makeBreadcrumb(history.location.pathname)}\n          </Nav.Item>\n        </Nav>\n      </Navbar>\n    </div>\n  )\n}\n\nexport default NavigationBar;","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/navbar.js",["302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322"],"/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/login.js",["323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport { useState, useEffect } from 'react'\nimport { Alert, Form, FormControl, Button, Nav, Tab, Row, Col, Card, Table, ListGroup } from 'react-bootstrap'\nimport { Navbar, NavDropdown, Breadcrumb, Pagination } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect, useRouteMatch } from 'react-router-dom'\nimport constants from '../utils/constants'\nimport { ExampleForm, LoginForm, SignupForm, UserLink } from './components/user'\nimport {InstituteCard, InstituteSelector} from './components/institute'\n\nconst LoginPage = (props) => {\n  useEffect(() => {\n    document.title = `${constants.title.login} - ${constants.appName}`\n  }, [])\n\n  const { url, path, params } = useRouteMatch()\n  //const [institute, setInstitute] = useState()\n  return (\n    <div className=\"container\">\n      <div>\n        {\n          /*\n        <div>\n          {JSON.stringify(institute)} \n        </div>\n        <div>\n          <InstituteSelector \n          onSelect={(i) => setInstitute(i)}\n          />\n        </div>\n          */\n        }\n        <Router>\n          <Card>\n            <Card.Header>\n              <Nav variant=\"tabs\">\n                <Nav.Item>\n                  <NavLink to={`${url}`} className=\"nav-link\" activeClassName=\"active\" exact={true}>\n                    登入\n              </NavLink>\n                </Nav.Item>\n                <Nav.Item>\n                  <NavLink to={`${url}/signup`} className=\"nav-link\" activeClassName=\"active\">\n                    注册\n              </NavLink>\n                </Nav.Item>\n              </Nav>\n            </Card.Header>\n\n            <Card.Body>\n              <Switch>\n                <Route path={`${url}`} exact={true}>\n                  <LoginForm />\n                </Route>\n                <Route path={`${url}/signup`}>\n                  <SignupForm />\n                </Route>\n              </Switch>\n            </Card.Body>\n          </Card>\n        </Router>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPage;","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/forum.js",["345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport '../style.css'\nimport React, { useState, useEffect } from 'react'\nimport { Alert, Form, FormControl, Button, ButtonGroup, Nav, Tab, Row, Col, ToggleButton, Modal, Table, InputGroup, Dropdown, DropdownButton, ListGroup, Image, Card, CardGroup, CardDeck, Badge, Tabs, FormGroup, ListGroupItem } from 'react-bootstrap'\nimport { Navbar, NavDropdown, Breadcrumb, Pagination } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect, useHistory, useLocation, useParams, useRouteMatch } from 'react-router-dom'\nimport constants from '../utils/constants'\nimport SVG from '../utils/svg'\nimport { makePaginations } from './components/pagination'\nimport { timeStringConverter } from '../utils/util'\nimport { TopicCard, TopicList, NewTopicForm, TopicCloseButton } from './components/topic'\nimport { InstituteCard, InstituteSelector } from './components/institute'\nimport { PostCard, NewPostForm } from './components/post'\nimport { MsgAlert } from './components/msg'\nimport axios from 'axios'\nimport { UserLink } from './components/user'\n\nconst fetchTopicService = async (id, port = constants.serverPort) => {\n  const url = `http://${document.domain}:${port}/topic/${id}/`\n  const token = window.localStorage.getItem('token')\n  const auth = (token) ? `bearer ${token}` : null\n\n  const res = await axios.get(url, { headers: { auth } })\n  return res\n}\n\nconst ListPage = (props) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    document.title = `${constants.title.forum} - ${constants.appName}`\n  }, [])\n\n  const TopicTabs = (props) => {\n    const [topics, setTopics] = useState([])\n\n    const NewTopicModal = (props) => {\n      return (\n        <Modal\n          {...props}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              发起新讨论\n          </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <NewTopicForm />\n          </Modal.Body>\n          <Modal.Footer>\n            <ButtonGroup>\n              <Button variant=\"secondary\" onClick={props.onHide}>取消</Button>\n            </ButtonGroup>\n          </Modal.Footer>\n        </Modal>\n      )\n    }\n\n    const [newTopicModalShow, setNewTopicModalShow] = useState(false)\n\n    const [queryTags, setQueryTags] = useState([])\n\n    const [keyword, setKeyword] = useState(\"\")\n    const [singleSearchKeyword, setSingleSearchKeyword] = useState(\"\")\n\n    const [msg, setMsg] = useState({\n      type: '',\n      text: ''\n    })\n\n    const handleQuery = async () => {\n      console.log(queryTags)\n      setMsg({ type: 'info', text: '搜索中' })\n      const url = `http://${document.domain}:${constants.serverPort}/topic/fetch`\n      try {\n        const res = await axios.post(url, {\n          queryTags\n        })\n        setTopics(res.data.topics)\n        if (res.data.topics.length == 0) {\n          setMsg({ type: 'warning', text: '未能找到符合条件的讨论' })\n        } else {\n          setMsg({ type: '', text: '' })\n        }\n      } catch (err) {\n        console.log(err.response)\n        setMsg({ type: 'danger', text: (err.response) ? err.response.data.msg : '未能正确处理请求' })\n      }\n    }\n\n    const addTag = (category, label, data) => {\n      if (!queryTags.find(t => (t.category === category) && (t.label === label))) {\n        setQueryTags([\n          ...queryTags,\n          {\n            category,\n            label,\n            data\n          }\n        ])\n      }\n    }\n\n    const addKeyword = (kw) => {\n      if (kw != '') {\n        addTag('keyword', kw, kw)\n      }\n    }\n\n    const removeTag = (tag) => {\n      setQueryTags(queryTags.filter((t) => !((t.category === tag.category) && (t.label === tag.label))))\n    }\n\n    const { url, path, params } = useRouteMatch()\n\n    useEffect(() => {\n      const url = `http://${document.domain}:${constants.serverPort}/topic/fetch`\n      axios.post(url).then((res) => {\n        console.log(res)\n        setTopics(res.data.topics)\n      })\n    }, [])\n\n\n    const [queryImmediately, setQueryImmediately] = useState(false)\n\n    useEffect(() => {\n      if (queryImmediately) {\n        setQueryImmediately(false)\n        handleQuery()\n      }\n    }, [queryImmediately])\n\n    useEffect(() => {\n      handleQuery()\n    }, [queryTags])\n\n    return (\n      <>\n        <MsgAlert msg={msg} />\n        <Row className=\"mb-3\">\n          <Col>\n            <InputGroup>\n              <FormControl\n                placeholder=\"关键字…\"\n                aria-label=\"keyword\"\n                aria-describedby=\"keyword\"\n                value={singleSearchKeyword}\n                required\n                onChange={(e) => { setSingleSearchKeyword(e.target.value) }}\n                onKeyPress={(e) => {\n                  if (e.code === 'Enter') {\n                    if (singleSearchKeyword.length > 0) {\n                      setQueryTags([\n                        {\n                          category: 'keyword',\n                          label: singleSearchKeyword,\n                          data: singleSearchKeyword\n                        }\n                      ])\n                      setQueryImmediately(true)\n                    }\n                  }\n                }}\n              />\n              <InputGroup.Append>\n                <Button\n                  variant=\"outline-primary\"\n                  onClick={() => {\n                    if (singleSearchKeyword.length > 0) {\n                      setQueryTags([\n                        {\n                          category: 'keyword',\n                          label: singleSearchKeyword,\n                          data: singleSearchKeyword\n                        }\n                      ])\n                      setQueryImmediately(true)\n                    }\n                  }}\n                >搜索</Button>\n              </InputGroup.Append>\n            </InputGroup>\n          </Col>\n          <Col xs=\"auto\">\n            <ButtonGroup>\n              <Button\n                variant=\"outline-success\"\n                onClick={() => setNewTopicModalShow(true)}>发起新讨论</Button>\n              <NewTopicModal\n                show={newTopicModalShow}\n                onHide={() => setNewTopicModalShow(false)}\n              />\n              <DropdownButton as={ButtonGroup} variant=\"success\" id=\"bg-nested-dropdown\">\n                <Dropdown.Item\n                  eventKey=\"1\"\n                  onClick={() => {\n                    setQueryImmediately(true)\n                  }}\n                >刷新</Dropdown.Item>\n                <Dropdown.Item\n                  eventKey=\"2\"\n                  onClick={() => {\n                    setQueryTags([])\n                  }}\n                >清空筛选条件</Dropdown.Item>\n              </DropdownButton>\n            </ButtonGroup>\n          </Col>\n        </Row>\n        <Card>\n          <Router>\n            <Card.Header>\n              <Nav variant=\"tabs\">\n                <Nav.Item>\n                  <NavLink to={`${url}`} exact={true} className=\"nav-link\" activeClassName=\"active\">讨论</NavLink>\n                </Nav.Item>\n                <Nav.Item>\n                  <NavLink to={`${url}/filter`} className=\"nav-link\" activeClassName=\"active\">筛选</NavLink>\n                </Nav.Item>\n                {\n                  // TODO: modify this part\n                  /*\n                <Nav.Item>\n                  <NavLink to={`${url}/reply`} className=\"nav-link\" activeClassName=\"active\">互动</NavLink>\n                </Nav.Item>\n                  */\n                }\n              </Nav>\n            </Card.Header>\n            <Switch>\n              <Route path={`${url}`} exact={true}>\n                <TopicList topics={topics} />\n              </Route>\n              <Route path={`${url}/filter`}>\n                <Row>\n                  <Col xs={12} md={6}>\n                    <Card.Body>\n                      <Form.Group>\n                        <InputGroup size=\"sm\">\n                          <FormControl\n                            placeholder=\"关键字…\"\n                            aria-label=\"keyword\"\n                            aria-describedby=\"keyword\"\n                            value={keyword}\n                            onChange={(e) => setKeyword(e.target.value)}\n                            onKeyPress={(e) => {\n                              if (e.code === 'Enter') {\n                                addTag('keyword', keyword, keyword)\n                                setKeyword('')\n                              }\n                            }}\n                          />\n                          <InputGroup.Append>\n                            <Button variant=\"outline-success\" onClick={(e) => {\n                              if (keyword != '') {\n                                addKeyword(keyword)\n                                setKeyword('')\n                              }\n                            }}>添加</Button>\n                          </InputGroup.Append>\n                        </InputGroup>\n                      </Form.Group>\n                      <Form.Group>\n                        <Form.Row>\n                          <Col>\n                            <InputGroup size=\"sm\">\n                              <InputGroup.Prepend>\n                                <InputGroup.Text>类别</InputGroup.Text>\n                              </InputGroup.Prepend>\n                              <Form.Control as=\"select\"\n                                onChange={(e) => {\n                                  if (e.target.value != -1) {\n                                    const value = JSON.parse(e.target.value)\n                                    addTag('category', value.name, value.id)\n                                  }\n                                }}\n                              >\n                                <option value={-1}>...</option>\n                                {\n                                  constants.topicTypes.map(t => (\n                                    <option value={JSON.stringify(t)}>{t.name}</option>\n                                  ))\n                                }\n                              </Form.Control>\n                            </InputGroup>\n                          </Col>\n                          <Col>\n                            <InputGroup size=\"sm\">\n                              <InputGroup.Prepend>\n                                <InputGroup.Text>地区</InputGroup.Text>\n                              </InputGroup.Prepend>\n                              <Form.Control as=\"select\"\n                                onChange={(e) => {\n                                  console.log(e.target.value)\n                                  if (e.target.value != -1) {\n                                    const value = JSON.parse(e.target.value)\n                                    addTag('region', value.region_name, value.region_id)\n                                  }\n                                }\n                                }\n                              >\n                                <option value={-1}>...</option>\n                                {\n                                  constants.regions.map(r => (\n                                    <option value={JSON.stringify(r)}>{r.region_name}</option>\n                                  ))\n                                }\n                              </Form.Control>\n                            </InputGroup>\n                          </Col>\n                        </Form.Row>\n                      </Form.Group>\n                      <InstituteSelector\n                        multiple\n                        size=\"sm\"\n                        onSelect={(i) => {\n                          if (i) {\n                            addTag('institute', `${i.name} [${i.id}]`, i._id)\n                          }\n                        }}\n                        caption=\"关联院校\"\n                      />\n                    </Card.Body>\n                  </Col>\n                  <Col xs={12} md={6}>\n                    <Card.Body className=\"pt-0 pt-md-4 pl-md-0\">\n                      <Form.Row>\n                        <Col>\n                          {\n                            queryTags.map((tag) => {\n                              let badgeVariant = {\n                                'keyword': 'dark',\n                                'category': 'primary',\n                                'region': 'success',\n                                'institute': 'info'\n                              }\n\n                              return (\n                                <Badge\n                                  className=\"mr-2\"\n                                  variant={badgeVariant[tag.category]}\n                                  pill\n                                  onClick={() => removeTag(tag)}\n                                >{tag.label}<SVG variant=\"x\" /></Badge>\n                              )\n                            })\n                          }\n                          <hr className=\"my-3\" />\n                        </Col>\n                      </Form.Row>\n                      {\n                        /*\n                      <Row>\n                        <Col>\n                          <Button variant=\"primary\" size=\"sm\" onClick={() => {\n                            handleQuery()\n                          }}>\n                            查询\n                          </Button>\n                        </Col>\n                      </Row>\n                        */\n                      }\n                    </Card.Body>\n                  </Col>\n                </Row>\n              </Route>\n              <Route path={`${url}/reply`}>\n                replies\n              </Route>\n            </Switch>\n          </Router>\n        </Card>\n        <br />\n      </>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        <TopicTabs />\n      </div>\n    </>\n  )\n}\n\nconst ClosedForm = (props) => {\n  const header = '本讨论已结束，你可以浏览其他用户的发言，或者发起新的讨论' || props.header\n  const user = props.user\n  const message = '' || props.message\n  const timestamp = props.timestamp\n\n  return (\n    <>\n      <Form>\n        <Alert variant=\"danger\">\n          <p>\n            <strong>\n              {header}\n            </strong>\n          </p>\n          <hr />\n          <div>\n            {\n              (user) ? (\n                <UserLink user={user} size=\"md\" />\n              ) : null\n            }\n            留言:\n            <br />\n            <div>\n              {message}\n            </div>\n            <small className=\"text-muted\">\n              {timeStringConverter(timestamp)}\n            </small>\n          </div>\n        </Alert>\n      </Form>\n    </>\n  )\n}\n\nconst TopicPage = (props) => {\n  const history = useHistory()\n  const [id, setId] = useState(useParams().id)\n\n  const postPerPage = props.postPerPage || 12\n\n  // demo\n  const [topic, setTopic] = useState()\n\n  const [currentPage, setCurrentPage] = useState(1)\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n\n  const loginAs = JSON.parse(window.localStorage.getItem('user'))\n\n  useEffect(async () => {\n    try {\n      const res = await fetchTopicService(id)\n      console.log(res)\n      document.title = `${res.data.topic.title} - ${constants.title.forum} - ${constants.appName}`\n      setTopic(res.data.topic)\n    } catch (err) {\n      console.log(err)\n      setMsg({ type: 'danger', text: '未能取得讨论内容' })\n    }\n  }, [id])\n\n  return (\n    <>\n      {(topic) ? (<>\n        <div className=\"container\">\n          <Row className=\"mb-3\">\n            <Col>\n              <Button\n                variant=\"outline-success\"\n                size=\"sm\"\n                onClick={() => {\n                  history.goBack();\n                }}\n              >←返回</Button>\n            </Col>\n            <Col className=\"pl-0\" xs=\"auto\">\n              <ButtonGroup>\n                {\n                  (topic.closed.status) ? null : (\n                    <>\n                      {\n                        (loginAs?._id === topic.host._id) ? (\n                          <TopicCloseButton size=\"sm\" variant=\"danger\" topic={topic} />\n                        ) : null\n                      }\n                      <Button\n                        variant=\"dark\"\n                        size=\"sm\"\n                        href=\"#replytextarea\"\n                      >\n                        回复\n                </Button>\n                    </>\n                  )\n                }\n              </ButtonGroup>\n            </Col>\n          </Row>\n          <Card>\n            <Card.Header>\n              <Row>\n                <Col xs=\"auto\">\n                  <small>{constants.topicTypes.find(t => t.id === topic.category).name}</small>\n                </Col>\n                <Col>\n                  <strong>{topic.title}</strong>\n                </Col>\n                <Col xs=\"auto\">\n                  {\n                    (topic.closed.status) ? (\n                      <Badge variant=\"danger\">\n                        <strong>\n                          已结束\n                        </strong>\n                      </Badge>\n                    ) : (\n                      <Badge variant=\"success\">\n                        <strong>\n                          进行中\n                          </strong>\n                      </Badge>\n                    )\n                  }\n                </Col>\n              </Row>\n            </Card.Header>\n            <ListGroup variant=\"flush\">\n              {\n                (topic.relatedInstitute) ? (\n                  <InstituteCard institute={topic.relatedInstitute} />\n                ) : (<></>)\n              }\n              <ListGroup.Item>\n                <Row>\n                  <Col>\n                    {\n                      (topic.region) ? (\n                        <small>\n                          <SVG variant=\"location\" className=\"mr-1\" />\n                          {constants.regions.find(r => r.region_id === topic.region).region_name}\n                        </small>\n                      ) : (<></>)\n                    }\n                  </Col>\n                  <Col xs={12} sm=\"auto\">\n                    <small>\n                      <span className=\"d-inline-block\">由 <a href={`/user/${topic.host.username}`}><strong>{topic.host.name}</strong></a> 在 {new Date(topic.createdAt).toLocaleDateString('zh')} 发起</span>\n                    ・\n                    <span className=\"d-inline-block\">{topic.posts.length} 条回复</span>\n                    ・\n                    <span className=\"d-inline-block\">{topic.viewCount} 次浏览</span>\n                    </small>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n              {topic.posts.slice((currentPage - 1) * postPerPage, currentPage * postPerPage).map(\n                (post, idx) => {\n                  return (\n                    <PostCard\n                      post={post}\n                      index={(currentPage - 1) * postPerPage + idx + 1}\n                      host={post.author._id === topic.host._id}\n                    />\n                  )\n                }\n              )}\n              <ListGroup.Item>\n                {makePaginations(currentPage, setCurrentPage, Math.ceil(topic.posts.length / postPerPage), 4)}\n              </ListGroup.Item>\n              <ListGroup.Item id=\"replyform\">\n                {\n                  (topic.closed?.status) ? (\n                    <ClosedForm user={topic.host} message={topic.closed?.reason} timestamp={topic.closed?.date} />\n                  ) : (\n                    <NewPostForm relatedTopic={topic._id} />\n                  )\n                }\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </div>\n      </>\n      ) : null}\n    </>\n  )\n}\n\nconst ForumPage = (props) => {\n  useEffect(() => {\n    window.localStorage.removeItem('instituteIndices')\n  }, [])\n\n  return (\n    <>\n      <div className=\"mb-3\">\n        <Router>\n          <Switch>\n            <Route path={`/forum/home`}>\n              <ListPage />\n            </Route>\n            <Route path={`/forum/`} exact={true}>\n              <Redirect to={`/forum/home`} />\n            </Route>\n            <Route path={`/forum/:id`} >\n              <TopicPage />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </>\n  )\n\n}\n\nexport default ForumPage;","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/about.js",["374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport { useState } from 'react'\nimport { Alert, Form, FormControl, Button, Nav, Tab, Row, Col, Table, ListGroup } from 'react-bootstrap'\nimport { Navbar, NavDropdown, Breadcrumb, Pagination } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect } from 'react-router-dom'\n\nconst AboutPage = (props) => {\n\n}\n\nexport default AboutPage;\n\n","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/user.js",["395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport '../style.css'\nimport React, { useState, useEffect } from 'react'\nimport { Alert, Form, FormControl, Button, ButtonGroup, Nav, Tab, Row, Col, Table, InputGroup, Dropdown, DropdownButton, ListGroup, Image, Card, CardGroup, CardDeck, Badge, Tabs, FormGroup, ListGroupItem } from 'react-bootstrap'\nimport { Navbar, NavDropdown, Breadcrumb, Pagination } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect, useHistory, useLocation, useParams, useRouteMatch } from 'react-router-dom'\nimport constants from '../utils/constants'\nimport SVG from '../utils/svg'\nimport { makePaginations } from './components/pagination'\nimport { timeStringConverter } from '../utils/util'\nimport { TopicCard, TopicList } from './components/topic'\nimport { PostCard, NewPostForm, PostList } from './components/post'\nimport { UserListItem, UserList, SignupForm, UserCard, toggleFollowService, UserAvatar, UserActivity, FollowButton, UserInteractInfo, NotificationList } from './components/user'\nimport { InstituteList } from './components/institute'\nimport axios from 'axios'\nimport { MsgAlert } from './components/msg'\n\nconst serverUrl = `http://${document.domain}:${constants.serverPort}`\n\nconst UserHeader = (props) => {\n  const user = props.user\n  const loginAs = JSON.parse(window.localStorage.getItem('user'))\n  const history = useHistory()\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n\n  return (\n    <div className=\"mb-3\">\n      <MsgAlert msg={msg} />\n      <Row>\n        <Col xs=\"auto\">\n          <UserAvatar width={96} height={96} user={user} withModal />\n        </Col>\n        <Col className=\"pl-0\">\n          <Row>\n            <Col>\n              <Row>\n                <Col>\n                  <div>\n                    <strong>\n                      <big>{user.name}</big>\n                    </strong>\n                  </div>\n                  <span className=\"text-info\">@{user.username}</span>\n                </Col>\n              </Row>\n              <Row className=\"text-muted\">\n                <Col xs={12} sm=\"auto\" className=\"pr-0\">\n                  <small>\n                    <SVG variant=\"location\" className=\"mr-1\" />\n                    <span>\n                      {constants.regions.find(r => r.region_id === user.region.province).region_name}, {constants.cities.find(c => c.city_id === user.region.city).city_name}\n                    </span>\n                  </small>\n                </Col>\n                <Col xs={12} sm=\"auto\" className=\"pr-0\">\n                  <small>\n                    <SVG variant=\"calendar\" className=\"mr-1\" />\n                    <span>\n                      {new Date(user.registeredDate).toLocaleDateString('zh', constants.shortDateOptions)} 加入\n                    </span>\n                  </small>\n                </Col>\n              </Row>\n              <UserInteractInfo user={user} className=\"mt-2\" onClick={(e) => { e.stopPropagation() }} />\n            </Col>\n            <Col xs=\"auto\">\n              <FollowButton\n                user={user}\n                variant=\"info\"\n                onFollow={setMsg} />\n            </Col>\n          </Row>\n          {\n            (user.about) ? (\n              <Row className=\"mt-2\">\n                <Col style={{\n                  maxHeight: '4.5rem',\n                  overflowY: 'scroll',\n                }}>\n                  {user.about}\n                </Col>\n              </Row>\n            ) : null\n          }\n        </Col>\n\n      </Row>\n    </div>\n  )\n}\n\nconst fetchUserService = async (username, port = constants.serverPort) => {\n  const url = `http://${document.domain}:${constants.serverPort}/user/${username}/`\n  const res = await axios.get(url)\n  return res\n}\n\nconst UserDetail = (props) => {\n  const [user, setUser] = useState()\n  const { url, path, params } = useRouteMatch()\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n  const username = useParams().username\n  const [loginAs, setLoginAs] = useState()\n  //const [noticeCount, setNoticeCount] = useState(parseInt(window.localStorage.getItem('noticecount')))\n  const [followedInstitutes, setFollowedInstitutes] = useState([])\n\n  useEffect(async () => {\n    setLoginAs(JSON.parse(window.localStorage.getItem('user')))\n\n    try {\n      const res = await fetchUserService(username)\n      // hint: the setState can be proceed by a callback to synchronize the control of prevstate\n      /*\n      setUser((user) => {\n        console.log(user)\n        return res.data.user\n      })\n      */\n      setUser(res.data.user)\n      document.title = `${res.data.user.name} - ${constants.title.user} - ${constants.appName}`\n    } catch (err) {\n      setMsg({ type: 'danger', text: `找不到用户: ${username}` })\n    }\n\n  }, [username])\n\n  useEffect(async () => {\n    if (user) {\n      const url = `http://${document.domain}:${constants.serverPort}/institute/following`\n      const res = await axios.post(url, { user: user._id })\n      console.log(res)\n      setFollowedInstitutes([...res.data.institutes])\n    }\n  }, [user])\n  /*\n  useEffect(async () => {\n    if (loginAs && user) {\n      setInterval(() => {\n        setNoticeCount(parseInt(window.localStorage.getItem('noticecount')))\n      }, 5000)\n    }\n  }, [loginAs, user])\n  */\n\n  return (\n    <>\n      <MsgAlert msg={msg} />\n      {\n        (user) ? (\n          <>\n            <UserHeader user={user} />\n\n            <Router>\n              <Card className=\"mb-3\">\n                <Card.Header>\n                  <Nav variant=\"tabs\">\n                    <Nav.Item>\n                      <NavLink className=\"nav-link p-2\" activeClassName=\"active\" to={`activity`}>\n                        动态\n                      </NavLink>\n                    </Nav.Item>\n                    {\n                      (loginAs && (loginAs._id === user._id)) ? (\n                        <Nav.Item>\n                          <NavLink className=\"nav-link p-2\" activeClassName=\"active\" to={`notifications`}>\n                            消息\n                            {\n                              /*\n                              (noticeCount > 0) ? (\n                                <Badge variant=\"info\" className=\"ml-1\">\n                                  {noticeCount}\n                                </Badge>\n                              ) : null\n                              */\n                            }\n                          </NavLink>\n                        </Nav.Item>\n                      ) : null\n                    }\n                    <Nav.Item>\n                      <NavLink className=\"nav-link p-2\" activeClassName=\"active\" to={`following`}>\n                        关注中\n                      </NavLink>\n                    </Nav.Item>\n                    <Nav.Item>\n                      <NavLink className=\"nav-link p-2\" activeClassName=\"active\" to={`follower`}>\n                        关注者\n                      </NavLink>\n                    </Nav.Item>\n                    {\n                      (loginAs && (loginAs._id === user._id)) ? (\n                        <Nav.Item>\n                          <NavLink className=\"nav-link p-2\" activeClassName=\"active\" to={`profile`}>\n                            个人资料\n                          </NavLink>\n                        </Nav.Item>\n                      ) : null\n                    }\n                  </Nav>\n                </Card.Header>\n                <Switch>\n                  <Route path={`${url}`} exact={true}>\n                    <Redirect to={`${url}/activity`} />\n                  </Route>\n                  <Route path={`${url}/activity`}>\n                    <UserActivity user={user._id} />\n                  </Route>\n                  <Route path={`${url}/following`}>\n                    <UserList users={user.following} />\n                    <InstituteList institutes={followedInstitutes} className=\"mt-3\" />\n                  </Route>\n                  <Route path={`${url}/follower`}>\n                    <UserList users={user.follower} userPerPage={24} />\n                  </Route>\n                  <Route path={`${url}/notifications`}>\n                    <NotificationList />\n                  </Route>\n                  <Route path={`${url}/profile`}>\n                    <Card.Body>\n                      <SignupForm modify />\n                    </Card.Body>\n                  </Route>\n                </Switch>\n              </Card>\n            </Router>\n          </>\n        ) : null\n      }\n    </>\n  )\n}\n\n\n\nconst UserPage = (props) => {\n  const history = useHistory();\n  const username = useParams().username\n  const [user, setUser] = useState()\n\n  const { url, path, params } = useRouteMatch()\n\n  return (\n    <div className=\"container\">\n      {\n        /*\n        JSON.stringify({ url, path, params })\n        */\n      }\n      <Router>\n        <Switch>\n          <Route path={`/user`} exact={true}>\n            <div>\n              hp of /user\n            </div>\n          </Route>\n          <Route path={`/user/:username`}>\n            <UserDetail />\n          </Route>\n        </Switch>\n      </Router>\n\n    </div>\n  )\n}\n\nexport default UserPage","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/utils/util.js",["443"],"const dateStringOptions = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric'\n}\n\nmodule.exports.timeStringConverter = (timestamp) => {\n  const now = Date.now()\n  let lapse = now - new Date(timestamp)\n  if (lapse < 1000 * 60) {\n    return `${Math.round(lapse / 1000)} 秒前`\n  } else if (lapse < 1000 * 60 * 60) {\n    return `${Math.round(lapse / 1000 / 60)} 分前`\n  } else if (lapse < 1000 * 60 * 60 * 24) {\n    return `${Math.round(lapse / 1000 / 60 / 60)} 小时前`\n  } else {\n    return new Date(timestamp).toLocaleDateString(\"zh\")\n  }\n}\n","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/topic.js",["444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474"],"import { useState, useEffect } from 'react'\nimport { ButtonGroup, ToggleButton, Accordion, Card, Alert, Form, FormControl, Button, Nav, Tab, Row, Col, Table, ListGroup, InputGroup, Modal } from 'react-bootstrap'\nimport { Tabs, Image, Badge, Navbar, NavDropdown, Breadcrumb, Pagination } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect, useParams, useRouteMatch, useHistory, useLocation } from 'react-router-dom'\nimport constants from '../../utils/constants'\nimport { timeStringConverter } from '../../utils/util'\nimport SVG from '../../utils/svg'\nimport axios from 'axios'\nimport { makePaginations } from './pagination'\nimport { UserLink } from './user'\nimport { MsgAlert } from './msg'\nimport { InstituteSelector } from './institute'\nimport { PostImage, imageStyle } from './post'\nimport * as Yup from 'yup'\nimport { Formik } from 'formik'\n\nconst TopicCard = (props) => {\n  const history = useHistory()\n\n  const topic = props.topic\n  const viewMode = props.viewMode\n  return (\n    <ListGroup.Item\n      action\n      onClick={(e) => {\n        history.push(`/forum/${topic._id}`);\n        history.go()\n      }}\n    >\n      <Row>\n        <Col xs=\"auto\" style={{ textAlign: \"center\" }}>\n          <small>{constants.topicTypes.find(t => topic.category === t.id).name}</small>\n        </Col>\n        <Col>\n          <Row>\n            <Col className=\"\">\n              <a className=\"\"><strong>{topic.title}</strong></a>\n            </Col>\n            <Col xs=\"auto\">\n              <Row>\n                <Col>\n                  <small>\n                    <SVG variant=\"person\" fill className=\"align-text-bottom\"/>\n                    <span className=\"ml-1\">\n                      <UserLink user={topic.host}>{topic.host.name || `@${topic.host.username}`}</UserLink>\n                    </span>\n                  </small>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Badge variant={(topic.closed?.status) ? 'danger' : 'success'} className=\"mr-1\">\n                {(topic.closed?.status) ? '已结束' : '进行中'}\n              </Badge>\n              {\n                (topic.relatedInstitute) ? (\n                  <>\n                    <Badge\n                      variant=\"primary\"\n                      className=\"mr-1\"\n                    >\n                      {topic.relatedInstitute.data.name}\n                    </Badge>\n                  </>\n                ) : (<></>)\n              }\n              {\n                (topic.region) ? (\n                  <>\n                    <Badge variant=\"info\" className=\"mr-1\">\n                      {constants.regions.find(r => r.region_id === topic.region).region_name}\n                    </Badge>\n                  </>\n                ) : (<></>)\n              }\n            </Col>\n          </Row>\n          <Row className={(viewMode === '紧凑') ? \"d-none\" : \"\"}>\n            <Col>\n              <small className=\"text-muted\">\n                <span className=\"mr-1 d-inline-block\">{topic.viewCount}次浏览・</span>\n                <span className=\"mr-1 d-inline-block\">{topic.posts.length}条回复・</span>\n                <span className=\"mr-1 d-inline-block\">创建于 {timeStringConverter(topic.createdAt)}・</span>\n                <span className=\"mr-1 d-inline-block\">最后回复于 {timeStringConverter(topic.lastUpdated)}</span>\n              </small>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </ListGroup.Item>\n  )\n}\n\nconst TopicList = (props) => {\n  const topics = props.topics\n  const [viewMode, setViewMode] = useState(props.viewMode || '详细')\n  const [showClosed, setShowClosed] = useState(props.showClosed || '全部显示')\n  const topicPerPage = props.topicPerPage || 12\n  const [currentPage, setCurrentPage] = useState(1)\n  const [displayTopics, setDisplayTopics] = useState([])\n\n  useEffect(() => {\n    if (topics) {\n      setDisplayTopics([...topics])\n    }\n  }, [topics])\n\n  return (\n    <>\n      <ListGroup variant=\"flush\">\n        {\n          (props.trends) ? null : (\n            <ListGroup.Item>\n              <Row className=\"ml-auto\">\n                <Col className=\"d-none d-md-block\">\n                  <small className=\"d-inline text-muted\">\n                    {\n                      (displayTopics.length > 0) ? (\n                        <>\n                          共 {displayTopics.length} 条讨论，第 {(currentPage - 1) * topicPerPage + 1}~{(currentPage * topicPerPage) > displayTopics.length ? displayTopics.length : currentPage * topicPerPage} 项\n                    </>\n                      ) : (<>未能找到符合条件的讨论</>)\n                    }\n                  </small>\n                </Col>\n                <Col xs=\"auto\">\n                  <Row>\n                    <SVG variant=\"column-gap\" />\n                    <Col className=\"pl-2\">\n                      <FormControl\n                        as=\"select\"\n                        size=\"sm\"\n                        value={viewMode}\n                        onChange={e => { setViewMode(e.target.value) }}>\n                        <option>详细</option>\n                        <option>紧凑</option>\n                      </FormControl>\n                    </Col>\n                  </Row>\n                </Col>\n                <Col xs=\"auto\">\n                  <Row>\n                    <SVG variant=\"check-square\" />\n                    <Col className=\"pl-2\">\n                      <FormControl\n                        as=\"select\"\n                        size=\"sm\"\n                        onChange={e => {\n                          switch (e.target.value) {\n                            case '进行中':\n                              return setDisplayTopics([...topics.filter((t) => !t.closed?.status)])\n                            case '已结束':\n                              return setDisplayTopics([...topics.filter((t) => t.closed?.status)])\n                            case '全部显示':\n                            default:\n                              return setDisplayTopics([...topics])\n                          }\n                        }}>\n                        <option>全部显示</option>\n                        <option>进行中</option>\n                        <option>已结束</option>\n                      </FormControl>\n                    </Col>\n                  </Row>\n                </Col>\n                <Col xs=\"auto\">\n                  <Row>\n                    <SVG variant=\"sort\" />\n                    <Col className=\"pl-2\">\n                      <FormControl\n                        as=\"select\"\n                        size=\"sm\"\n                        onChange={(e) => {\n                          switch (e.target.value) {\n                            case '0':\n                              setDisplayTopics([...topics.sort((a, b) => new Date(b.lastUpdated) - new Date(a.lastUpdated))])\n                              break;\n                            case '1':\n                              setDisplayTopics([...topics.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))])\n                              break;\n                            case '2':\n                              setDisplayTopics([...topics.sort((a, b) => b.posts.length - a.posts.length)])\n                              break;\n                            case '3':\n                              setDisplayTopics([...topics.sort((a, b) => {\n                                if (a.region) {\n                                  if (b.region) {\n                                    return a.region.localeCompare(b.region)\n                                  } else {\n                                    return -1\n                                  }\n                                } else {\n                                  return 1\n                                }\n                              })])\n                              break;\n                            case '4':\n                              setDisplayTopics([...topics.sort((a, b) => {\n                                if (a.relatedInstitute) {\n                                  if (b.relatedInstitute) {\n                                    return a.relatedInstitute.data.school_id - b.relatedInstitute.data.school_id\n                                  } else {\n                                    return -1\n                                  }\n                                } else {\n                                  return 1\n                                }\n                              })])\n                            default:\n                              return\n                          }\n                        }}\n                      >\n                        <option value={0}>最后回复</option>\n                        <option value={1}>最新发起</option>\n                        <option value={2}>回复数量</option>\n                        <option value={3}>地区</option>\n                        <option value={4}>相关院校</option>\n                      </FormControl>\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n          )\n        }\n        {displayTopics.slice((currentPage - 1) * topicPerPage, (currentPage) * topicPerPage).map((topic) => {\n          return (\n            <TopicCard topic={topic} viewMode={viewMode} />\n          )\n        })}\n        {\n          (props.trends) ? null : (\n            <ListGroup.Item>\n              {makePaginations(currentPage, setCurrentPage, Math.ceil(topics.length / topicPerPage), 4)}\n            </ListGroup.Item>\n          )\n        }\n      </ListGroup>\n\n    </>\n  )\n}\n\n\nconst NewTopicForm = (props) => {\n  const [title, setTitle] = useState()\n  const [category, setCategory] = useState(0)\n  const [relatedInstitute, setRelatedInstitute] = useState(props.relatedInstitute)\n  const [region, setRegion] = useState()\n  const [tags, setTags] = useState()\n  const [content, setContent] = useState()\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n\n  const token = (window.localStorage.getItem('token')) ? `bearer ${window.localStorage.getItem('token')}` : null\n  const history = useHistory()\n\n\n  const [photos, setPhotos] = useState([])\n  const [photoPreviews, setPhotoPreviews] = useState([])\n  const maxPhotoCount = 4\n  const [reachedPhotoCountLimit, setReachedPhotoCountLimit] = useState(false)\n\n  const handlePhotos = async (e) => {\n    e.preventDefault()\n    setMsg({ type: '', text: '' })\n\n    if (photos.length >= maxPhotoCount) {\n      return setMsg({ type: 'warning', text: '已达到图片上传张数限制' })\n    }\n\n    if (e.target.files) {\n      var reader = new FileReader()\n      var photo = e.target.files[0]\n\n      if (photo.type.includes('image')) {\n        reader.onloadend = () => {\n          console.log('result', reader.result)\n          if (photos.length == 3) {\n            setReachedPhotoCountLimit(true)\n          }\n          setPhotoPreviews([...photoPreviews, reader.result])\n          setPhotos([...photos, photo])\n        }\n\n        reader.readAsDataURL(photo)\n      } else {\n        setMsg({ type: 'warning', text: '格式有误，请上传图片' })\n      }\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setMsg({ type: '', text: '' })\n\n    const token = window.localStorage.getItem('token')\n    const auth = (token) ? `bearer ${token}` : null\n    if (!auth) {\n      return setMsg({ type: 'danger', text: '登入信息失效，请重新登入' })\n    }\n\n    var uploadedPhotos = []\n    if (photos.length) {\n      const uploadURL = `http://${document.domain}:${constants.serverPort}/image/upload`\n      let formData = new FormData()\n      photos.forEach((photoFile) => formData.append('images', photoFile))\n\n      try {\n        const res = await axios.post(uploadURL, formData, { headers: { 'Content-Type': 'multipart/form-data' } })\n        console.log(res.data)\n        uploadedPhotos = [...res.data.path]\n      } catch (err) {\n        console.log(err)\n        setMsg({ type: 'danger', text: 'failed to upload photos' })\n      }\n    }\n\n    const url = `http://${document.domain}:${constants.serverPort}/topic/`\n    const body = {\n      title: title,\n      category: category,\n      content: content,\n      relatedInstitute: relatedInstitute,\n      region: region,\n      tags: tags,\n      photos: uploadedPhotos,\n    }\n    try {\n      const res = await axios.post(url, body, { headers: { auth } })\n      console.log(res)\n      setMsg({\n        type: 'success',\n        text: res.data.msg\n      })\n      setTimeout(() => {\n        history.push(`/forum/${res.data.topic._id}`)\n        history.go()\n      }, 1000)\n    } catch (err) {\n      console.log(err.response)\n      setMsg({\n        type: 'danger',\n        text: (err.response.data) ? err.response.data.msg : ''\n      })\n    }\n  }\n\n  return (\n    <>\n      <div className={props.className}>\n        {token ? (\n          <>\n            <MsgAlert msg={msg} />\n            <Form onSubmit={handleSubmit}>\n              <Form.Row>\n                <Col>\n                  <InputGroup className=\"mb-3\" size=\"sm\">\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>标题</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      aria-label=\"title\"\n                      aria-describedby=\"basic-addon1\"\n                      required\n                      value={title}\n                      onChange={(e) => { setTitle(e.target.value) }}\n                    />\n                  </InputGroup>\n                </Col>\n                <Col xs=\"auto\">\n                  <InputGroup className=\"mb-3\" size=\"sm\">\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>类型</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      as=\"select\"\n                      value={category}\n                      onChange={(e) => { setCategory(e.target.value) }}\n                    >\n                      {\n                        constants.topicTypes.map((type) => (\n                          <option value={type.id}>{type.name}</option>\n                        ))\n                      }\n                    </FormControl>\n                  </InputGroup>\n                </Col>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <Form.Control\n                    as=\"textarea\"\n                    placeholder=\"内容\"\n                    rows={3}\n                    required\n                    id=\"topiccontent\"\n                    value={content}\n                    onChange={(e) => { setContent(e.target.value) }}\n                  />\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Col>\n                  <InputGroup size=\"sm\">\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>地区</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      as=\"select\"\n                      value={region}\n                      onChange={(e) => { setRegion(e.target.value) }}\n                    >\n                      <option value={false}>...</option>\n                      {\n                        constants.regions.map((region) => (<option value={region.region_id}>{region.region_name}</option>))\n                      }\n                    </Form.Control>\n                  </InputGroup>\n                </Col>\n                <Col>\n                  {\n                    (props.relatedInstitute) ? null : (\n                      <InstituteSelector\n                        size=\"sm\"\n                        caption=\"相关院校\"\n                        onSelect={(i) => {\n                          if (i) {\n                            setRelatedInstitute(i._id)\n                          } else {\n                            setRelatedInstitute(null)\n                          }\n                        }\n                        }\n                      />\n                    )\n                  }\n                </Col>\n              </Form.Row>\n              <Form.Row controlId=\"replyTo\">\n                <Col>\n                  <Form.File\n                    id=\"photos\"\n                    name=\"photos\"\n                    label={`添加图片(${photos.length})`}\n                    size=\"sm\"\n                    onChange={handlePhotos}\n                    custom\n                    disabled={reachedPhotoCountLimit}\n                  />\n                </Col>\n                <Col xs=\"auto\">\n                  <Button variant=\"success\" type=\"submit\">发布</Button>\n                </Col>\n              </Form.Row>\n              <Form.Row className=\"mt-2\">\n                {\n                  photoPreviews.map((photo, idx) => {\n                    return (\n                      <Col xs={6} lg={3} className=\"p-1\">\n                        <div style={{\n                          backgroundImage: `url(${photo})`,\n                          ...imageStyle\n                        }}\n                          className=\"img-thumbnail d-block\"\n                          onClick={() => {\n                            setPhotos([...photos.filter((p, i) => i != idx)])\n                            setPhotoPreviews([...photoPreviews.filter((p, i) => i != idx)])\n                            setReachedPhotoCountLimit(false)\n                          }}\n                        ></div>\n                      </Col>\n                    )\n                  })\n                }\n              </Form.Row>\n            </Form>\n          </>\n        ) : (\n          <Alert variant=\"info\"><Alert.Link href=\"/login\">登入</Alert.Link>后可以发起新讨论</Alert>\n        )}\n      </div>\n    </>\n  )\n}\n\n\nconst TopicCloseModal = (props) => {\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n  const topic = props.topic\n  const history = useHistory()\n\n  const closeTopicSchema = Yup.object().shape({\n    title: Yup.string()\n      .equals([topic.title], \"标题不一致，请确认输入\"),\n    reason: Yup.string()\n      .max(10000, '请不要超过10000个字符')\n      .required('请输入结束此讨论的原因')\n  })\n\n\n\n  const handleSubmit = async (body) => {\n    console.log(body)\n    const url = `http://${document.domain}:${constants.serverPort}/topic/close`\n    const token = window.localStorage.getItem('token')\n    if (!token) {\n      return setMsg({ type: 'danger', text: '用户未登入' })\n    }\n    const auth = `bearer ${token}`\n    try {\n      const res = await axios.post(url, { ...body, id: topic._id }, { headers: { auth } })\n      console.log(res)\n      setMsg({ type: 'success', text: res.data.msg || '讨论已结束' })\n      setTimeout(() => { history.go() }, 1000)\n    } catch (err) {\n      console.log(err.response)\n      setMsg({ type: 'danger', text: err.response?.data.msg || '未能成功处理请求' })\n    }\n  }\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          结束讨论\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <MsgAlert msg={msg} />\n        <Formik\n          onSubmit={handleSubmit}\n          validationSchema={closeTopicSchema}\n          initialValues={\n            {\n              title: \"\",\n              reason: \"\"\n            }\n          }\n        >\n          {({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            errors,\n            touched,\n            isValid,\n          }) => {\n            return (\n              <Form noValidate onSubmit={handleSubmit}>\n                <Form.Group>\n                  <InputGroup size=\"sm\" hasValidation>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>\n                        确认标题\n                    </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      as=\"input\"\n                      name=\"title\"\n                      placeholder={props.topic.title}\n                      value={values.title}\n                      onChange={handleChange}\n                      isValid={touched.title && !errors.title}\n                      isInvalid={!!errors.title}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.title}\n                    </Form.Control.Feedback>\n                  </InputGroup>\n                </Form.Group>\n                <Form.Group>\n                  <InputGroup size=\"sm\" hasValidation>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>原因</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      as=\"textarea\"\n                      name=\"reason\"\n                      value={values.reason}\n                      onChange={handleChange}\n                      isValid={touched.reason && !errors.reason}\n                      isInvalid={!!errors.reason}\n                    />\n                  </InputGroup>\n                  <Form.Control.Feedback type=\"Invalid\">\n                    <small className=\"text-danger\">\n                      {errors.reason}\n                    </small>\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Row>\n                  <Col>\n                  </Col>\n                  <Col xs=\"auto\">\n                    <Button type=\"submit\" variant=\"danger\">确认</Button>\n                  </Col>\n                </Row>\n              </Form>\n            )\n          }\n          }\n        </Formik>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nconst TopicCloseButton = (props) => {\n\n  const [modalShow, setModalShow] = useState(false)\n\n  return (\n    <>\n      <Button {...props} onClick={\n        () => { setModalShow(true) }\n      }>\n        <strong>\n          {props.children || '结束讨论'}\n        </strong>\n      </Button>\n\n      <TopicCloseModal\n        show={modalShow}\n        onHide={() => { setModalShow(false) }}\n        topic={props.topic}\n      />\n    </>\n  )\n}\n\n\nexport { TopicCard, TopicList, NewTopicForm, TopicCloseModal, TopicCloseButton };\n","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/post.js",["475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport '../../style.css'\nimport React, { useState, useEffect } from 'react'\nimport { Alert, Modal, Form, FormControl, Button, ButtonGroup, Nav, Tab, Row, Col, Table, InputGroup, Dropdown, DropdownButton, ListGroup, Image, Card, CardGroup, CardDeck, Badge, Tabs, FormGroup, ListGroupItem } from 'react-bootstrap'\nimport { Navbar, NavDropdown, Breadcrumb, Pagination } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect, useHistory, useLocation, useParams } from 'react-router-dom'\nimport constants from '../../utils/constants'\nimport SVG from '../../utils/svg'\nimport { makePaginations } from './pagination'\nimport { timeStringConverter } from '../../utils/util'\nimport { TopicCard, TopicList } from './topic'\nimport { UserLink, UserAvatar } from './user'\nimport axios from 'axios'\nimport { InstituteCard } from './institute'\nimport { MsgAlert } from './msg'\nimport default_avatar from '../../resources/default_avatar.png'\n\nconst serverUrl = `http://${document.domain}:${constants.serverPort}`\n\nconst togglePostRemovalService = async (pid, port = constants.serverPort) => {\n  const url = `http://${document.domain}:${port}/post/toggleremoval`\n  const token = window.localStorage.getItem('token')\n  const auth = (token) ? `bearer ${token}` : null\n\n  const body = {\n    id: pid\n  }\n\n  const res = await axios.post(url, body, { headers: { auth } })\n\n  return res\n}\n\nconst ImageModal = (props) => {\n  const { src, onClick, onHide, ...otherProps } = props\n  return (\n    <Modal\n      {...otherProps}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      onClick={(e) => { e.stopPropagation(); onHide() }}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          查看图片\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Image className=\"w-100\" src={src} />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={onHide}>关闭</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nconst PostImage = (props) => {\n  const { src, imgClassName, ...otherProps } = props\n\n  const [modalShow, setModalShow] = useState(false)\n  return (\n    <Col xs={6} lg={3} {...otherProps} onClick={(e) => {\n      e.stopPropagation()\n      if (props.onClick) {\n        return props.onClick(e)\n      }\n      setModalShow(true)\n    }}>\n      <div style={{\n        backgroundImage: `url(${src})`,\n        ...imageStyle,\n      }}\n        className={`img-thumbnail d-block ${imgClassName}`}\n      ></div>\n      <ImageModal\n        size=\"lg\"\n        show={modalShow}\n        onHide={() => { setModalShow(false); }}\n        src={src} />\n    </Col>\n  )\n}\n\nconst imageStyle = {\n  backgroundSize: 'cover',\n  backgroundColor: 'rgba(0,0,0,0)',\n  backgroundPosition: 'center center',\n  borderWidth: '0.3',\n  width: '100%',\n  paddingTop: \"30%\",\n  paddingBottom: \"30%\"\n}\n\nconst PostContent = (props) => {\n\n  const [removed, setRemoved] = useState(props.removed)\n  const [visible, setVisible] = useState(false)\n  const [content, setContent] = useState(props.content)\n  const [photos, setPhotos] = useState(props.photos)\n\n  useEffect(() => {\n    setRemoved(props.removed)\n    setContent(props.content)\n    setPhotos(props.photos)\n  }, [props.removed, props.content, props.photos])\n\n  const user = JSON.parse(window.localStorage.getItem('user'))\n\n  const handleContentRetrieve = () => {\n    const url = `${serverUrl}/post/`\n  }\n\n  /*\n            {\n              (() => {\n                const user = JSON.parse(window.localStorage.getItem('user'))\n\n                const visible = !post.removed.status\n                const permit = ((user) ? (user.isAdmin || user._id === post.author._id) : false)\n                if (visible) {\n                  return (\n                    <>\n                      <PostContent post={post} />\n                      <Row>\n                        {\n                          // TODO: photos\n                        }\n                      </Row>\n                      <Row>\n                        <Col>\n                          {\n                            expanded ? (\n                              <small className=\"text-grey d-none d-sm-block\">\n                                {new Date(post.createdAt).toString()}\n                              </small>\n                            ) : (\n                              <Button variant=\"link\" className=\"p-0 align-baseline\" size=\"sm\" onClick={(e) => {\n                                e.stopPropagation()\n                                history.push(`/post/${post._id}#replytextarea`)\n                                history.go()\n                              }}>\n                                <SVG variant=\"chat\" className=\"mr-2\" />\n                                {post.replies.length}\n                              </Button>\n                            )\n                          }\n                        </Col>\n                        {\n                          (user) ? (\n                            <Col xs=\"auto\">\n                              <Dropdown>\n                                <Dropdown.Toggle as={CustomToggle} className=\"pl-2 pr-2\">\n                                  <SVG variant=\"three-dots\" />\n                                </Dropdown.Toggle>\n                                <Dropdown.Menu as={CustomMenu}>\n                                  {\n                                    (!expanded) && (\n                                      <Dropdown.Item eventKey=\"1\"\n                                        href={`/post/${post._id}`}\n                                        onClick={(e) => { e.stopPropagation(); }}\n                                      >\n                                        回复 ({post.replies.length})\n                                      </Dropdown.Item>\n                                    )\n                                  }\n                                  {\n                                    (permit) ?\n                                      (\n                                        <Dropdown.Item\n                                          eventKey=\"2\"\n                                          onClick={async (e) => {\n                                            e.stopPropagation()\n                                            try {\n                                              const res = await togglePostRemovalService(post._id)\n                                              setMsg({ type: 'info', text: res.data.msg })\n                                              setTimeout(() => {\n                                                window.location.reload()\n                                              }, 1000)\n                                            } catch (err) {\n                                              console.log(err)\n                                              setMsg({\n                                                type: 'danger',\n                                                text: (err.response.data) ? err.response.data.msg : ''\n                                              })\n                                            }\n\n                                          }}\n                                        >\n                                          移除\n                                        </Dropdown.Item>\n                                      ) : null\n                                  }\n                                </Dropdown.Menu>\n                              </Dropdown>\n                            </Col>\n                          ) : null\n                        }\n                      </Row>\n                    </>\n                  )\n                } else {\n                  const visible = !!post.content\n                  const userIsAuthor = (user) ? user._id === post.author._id : false\n                  const userIsAdmin = (user) ? user.isAdmin : false\n                  const postIsRemovedByAuthor = (post.removed.status) ? (post.removed.by._id === post.author._id) : false\n                  const postIsRemovedByAdmin = (post.removed.status) ? (post.removed.by.isAdmin) : false\n\n                  return (\n                    <Row>\n                      <Col>\n                        <Alert variant=\"info\" onClick={(e) => { e.stopPropagation() }}>\n                          <span className=\"mr-1\">该贴文已被{(postIsRemovedByAuthor) ? ((userIsAuthor) ? '你' : '创作者') : ((userIsAdmin && (post.removed.by._id === user._id)) ? '你' : '管理员')}移除</span>\n                          {(visible) ? (<Alert.Link\n                            className=\"mr-1\"\n                            onClick={() => { setRemovedPostVisible(!removedPostVisible) }}\n                          >{(removedPostVisible) ? '[收起]' : '[查看]'}</Alert.Link>) : null}\n                          {((userIsAdmin && postIsRemovedByAdmin) || (userIsAuthor && postIsRemovedByAuthor)) ? (<Alert.Link\n                            className=\"mr-1\"\n                            onClick={async () => {\n                              try {\n                                const res = await togglePostRemovalService(post._id)\n                                setMsg({ type: 'info', text: res.data.msg })\n                                setTimeout(() => {\n                                  window.location.reload()\n                                }, 1000)\n                              } catch (err) {\n                                console.log(err)\n                                setMsg({\n                                  type: 'danger',\n                                  text: (err.response.data) ? err.response.data.msg : ''\n                                })\n                              }\n                            }}\n                          >[恢复]</Alert.Link>) : null}\n                          {\n                            (removedPostVisible) ? (<>\n                              <hr />\n                              <PostContent post={post} />\n                            </>) : null\n                          }\n                        </Alert>\n                      </Col>\n                    </Row>\n                  )\n                }\n              })()\n            }\n            */\n  return (\n    <>\n      {\n        (() => {\n          if (removed) {\n            return (\n              <>\n                <Row>\n                  <Col>\n                    <Alert variant=\"info\" onClick={(e) => { e.stopPropagation() }}>\n                      <span className=\"mr-1\">该贴文已被移除</span>\n                    </Alert>\n                  </Col>\n                </Row>\n              </>\n            )\n          }\n          return (\n            <>\n              <Row>\n                <Col>\n                  {content}\n                </Col>\n              </Row>\n              {\n                (photos?.length) ? (\n                  <Row id={`photos-${Math.random() * 100000}`} className=\"mt-2 mb-1 px-3\">\n                    {\n                      photos.map((path, idx) => <PostImage\n                        src={`${serverUrl}${path}`}\n                        style={{ padding: 2 }}\n                      />)\n                    }\n                  </Row>\n                ) : null\n              }\n            </>\n          )\n        })()\n      }\n    </>\n  )\n}\n\nconst PostCard = (props) => {\n  const expanded = props.expanded || false\n  const detail = props.detail\n  const index = props.index\n  const host = props.host\n  const setReplyTo = props.setReplyTo\n\n  const [removedPostVisible, setRemovedPostVisible] = useState(false)\n\n  const [post, setPost] = useState({ ...props.post })\n  useEffect(() => { setPost({ ...props.post }) }, [props.post])\n\n  const [msg, setMsg] = useState({ type: '', text: '' })\n  const history = useHistory()\n  const loginAs = JSON.parse(window.localStorage.getItem('user'))\n\n  // custom dropdown\n  const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n    <a\n      href=\"\"\n      ref={ref}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClick(e);\n      }}\n    >\n      {children}\n    </a>\n  ));\n\n  const CustomMenu = React.forwardRef(\n    ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n      const [value, setValue] = useState('');\n\n      return (\n        <div\n          ref={ref}\n          style={style}\n          className={className}\n          aria-labelledby={labeledBy}\n        >\n          <ul className=\"list-unstyled\">\n            {React.Children.toArray(children).filter(\n              (child) =>\n                !value || child.props.children.toLowerCase().startsWith(value),\n            )}\n          </ul>\n        </div>\n      );\n    },\n  );\n\n\n  return (\n    <>\n      { /*\n      (expanded && post.replyTo) ? (\n        \n        <ListGroup.Item variant=\"info\">\n          <Row>\n            <Col>\n              回复：<Alert.Link className=\"text-dark\" onClick={() => { history.push(`/post/${post.replyTo._id}`); history.go() }}>{post.replyTo.content}</Alert.Link>\n            </Col>\n          </Row>\n        </ListGroup.Item>\n      ) : null\n      */}\n      {(expanded && post.relatedTopic) ? (\n        <ListGroup.Item variant=\"success\">\n          <Row>\n            <Col>\n              讨论：<Alert.Link className=\"text-dark\" onClick={() => { history.push(`/forum/${post.relatedTopic._id}`); history.go() }}>{post.relatedTopic.title}</Alert.Link>\n            </Col>\n          </Row>\n        </ListGroup.Item>\n      ) : null}\n\n      <ListGroup.Item action={!expanded} onClick={(expanded) ? null : () => { history.push(`/post/${post._id}`); history.go() }}>\n        <Row>\n          <Col>\n            <MsgAlert msg={msg} />\n          </Col>\n        </Row>\n        {(detail) ? (\n          <Row className=\"mb-2 text-muted\">\n            <Col onClick={(e) => { e.stopPropagation() }} xs=\"auto\">\n              {(() => {\n                if (post.replyTo) {\n                  return (<small>回复：<strong><a className=\"text-dark\" href={`/post/${post.replyTo._id}`}>{post.replyTo.content}</a></strong></small>)\n                } else if (post.relatedInstitute) {\n                  return (<small>院校评价：<strong><a className=\"text-dark\" href={`/institute/${post.relatedInstitute.data?.school_id||post.relatedInstitute.id}/discuss`}>{post.relatedInstitute.name || post.relatedInstitute.data?.name}</a></strong></small>)\n                } else if (post.relatedTopic) {\n                  return (<small>参与讨论：<strong><a className=\"text-dark\" href={`/forum/${post.relatedTopic._id}`}>{post.relatedTopic.title}</a></strong></small>)\n                }\n              })()}\n            </Col>\n          </Row>\n        ) : null}\n        <Row>\n          <Col xs=\"auto\" className=\"pr-0\">\n            <UserAvatar width={48} height={48} user={post.author} />\n          </Col>\n          <Col>\n            <Row>\n              <Col>\n                <small>\n                  <UserLink user={post.author}>{post.author.name || `@${post.author.username}`}</UserLink>\n                  {(host) ? (<SVG variant=\"person\" fill className=\"align-text-bottom ml-1\"/>) : (<></>)}\n                  {\n                    (expanded) ? null : (\n                      <span className=\"d-inline-block\">\n                        ・{timeStringConverter(post.createdAt)}\n                      </span>\n                    )\n                  }\n                </small>\n              </Col>\n              <Col xs=\"auto\">\n                {\n                  (index) ? (\n                    <code>\n                      #{index}\n                    </code>\n                  ) : null\n                }\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                {\n                  (post.content || post.photos) ? (\n                    <PostContent\n                      content={post.content}\n                      photos={post.photos}\n                      removed={props.removed}\n                    />\n                  ) : null\n                }\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <Row>\n          {\n            (expanded) ? (\n              <Col xs=\"auto\">\n                <small className=\"text-grey\">\n                  {new Date(post.createdAt).toString()}\n                </small>\n              </Col>\n            ) : null\n          }\n          <Col></Col>\n          <Col xs=\"auto\">\n            <Dropdown>\n              <Dropdown.Toggle as={CustomToggle} className=\"pl-2 pr-2\">\n                <SVG variant=\"three-dots\" />\n              </Dropdown.Toggle>\n              <Dropdown.Menu as={CustomMenu}>\n                <Dropdown.Item eventKey=\"1\"\n                  href={`/post/${post?._id}`}\n                  onClick={(e) => { e.stopPropagation(); }}\n                >\n                  回复 ({post.replies.length})\n                </Dropdown.Item>\n\n                {\n                  (loginAs?._id === post.author._id) ?\n                    (\n                      <Dropdown.Item\n                        eventKey=\"2\"\n                        onClick={async (e) => {\n                          e.stopPropagation()\n                          try {\n                            const res = await togglePostRemovalService(post._id)\n                            setMsg({ type: 'info', text: res.data.msg })\n                            setTimeout(() => {\n                              window.location.reload()\n                            }, 1000)\n                          } catch (err) {\n                            console.log(err)\n                            setMsg({\n                              type: 'danger',\n                              text: (err.response.data) ? err.response.data.msg : ''\n                            })\n                          }\n\n                        }}\n                      >\n                        {(post.removed.status) ? '恢复' : '移除'}\n                      </Dropdown.Item>\n                    ) : null\n                }\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n        </Row>\n      </ListGroup.Item>\n    </>\n  )\n}\n\nconst PostList = (props) => {\n  const posts = props.posts\n  const postPerPage = props.postPerPage || 12\n  const [currentPage, setCurrentPage] = useState(1)\n  const paginationNum = props.paginationNum || 3\n  const noIndex = props.noIndex\n\n  return (\n    <>\n      <ListGroup variant=\"flush\">\n        {posts.slice((currentPage - 1) * postPerPage, (currentPage) * postPerPage).map((post, idx) => {\n          return (\n            <PostCard\n              post={post}\n              index={(!noIndex) ? (currentPage - 1) * postPerPage + idx + 1 : null}\n              expanded={false}\n            />\n          )\n        })}\n        <ListGroupItem>\n          {makePaginations(currentPage, setCurrentPage, Math.ceil(posts.length / postPerPage), paginationNum)}\n        </ListGroupItem>\n      </ListGroup>\n    </>\n  )\n}\n\nconst NewPostForm = (props) => {\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n  const id = useParams().id\n  const token = (window.localStorage.getItem('token')) ? `bearer ${window.localStorage.getItem('token')}` : null\n  // states\n  const [content, setContent] = useState()\n  const [relatedInstitute, setRelatedInstitute] = useState(props.relatedInstitute)\n  const [relatedTopic, setRelatedTopic] = useState((props.topic) ? props.topic._id : props.relatedTopic)\n  const [replyTo, setReplyTo] = useState((props.reply) ? id : null)\n  const [region, setRegion] = useState()\n  const [tags, setTags] = useState()\n\n  const [photos, setPhotos] = useState([])\n  const [photoPreviews, setPhotoPreviews] = useState([])\n  const maxPhotoCount = 4\n  const [reachedPhotoCountLimit, setReachedPhotoCountLimit] = useState(false)\n\n  const history = useHistory()\n\n  const handlePhotos = async (e) => {\n    e.preventDefault()\n    setMsg({ type: '', text: '' })\n\n    if (photos.length >= maxPhotoCount) {\n      return setMsg({ type: 'warning', text: '已达到图片上传张数限制' })\n    }\n\n    if (e.target.files?.length) {\n      var reader = new FileReader()\n      var photo = e.target.files[0]\n      if (photo.type.includes('image')) {\n        reader.onloadend = () => {\n          console.log('result', reader.result)\n          if (photos.length == 3) {\n            setReachedPhotoCountLimit(true)\n          }\n          setPhotoPreviews([...photoPreviews, reader.result])\n          setPhotos([...photos, photo])\n        }\n\n        reader.readAsDataURL(photo)\n      } else {\n        setMsg({ type: 'warning', text: '格式有误，请上传图片' })\n      }\n    }\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    // add here to prevent logout activity\n    setMsg({\n      type: '',\n      text: ''\n    })\n    const auth = (window.localStorage.getItem('token')) ? `bearer ${window.localStorage.getItem('token')}` : null\n    if (!auth) {\n      return setMsg({ type: 'danger', text: '登入信息失效，请重新登入' })\n    }\n\n    // handling photo upload\n    var uploadedPhotos = []\n    if (photos.length) {\n      const uploadURL = `http://${document.domain}:${constants.serverPort}/image/upload`\n      let formData = new FormData()\n      photos.forEach((photoFile) => formData.append('images', photoFile))\n\n      try {\n        const res = await axios.post(uploadURL, formData, { headers: { 'Content-Type': 'multipart/form-data' } })\n        console.log(res.data)\n        uploadedPhotos = [...res.data.path]\n      } catch (err) {\n        console.log(err)\n        setMsg({ type: 'danger', text: 'failed to upload photos' })\n      }\n    }\n\n\n    const url = `http://${document.domain}:${constants.serverPort}/post/new`\n    const body = {\n      content: content,\n      relatedInstitute: relatedInstitute,\n      relatedTopic: relatedTopic,\n      region: region,\n      replyTo: replyTo,\n      tags: tags,\n      photos: uploadedPhotos\n    }\n    try {\n      const res = await axios.post(url, body, { headers: { auth } })\n      setMsg({\n        type: 'success',\n        text: res.data.msg\n      })\n\n      setTimeout(() => {\n        history.go()\n      }, 1000)\n    } catch (err) {\n      console.log(err.response)\n      setMsg({\n        type: 'danger',\n        text: err.response?.data?.msg || '贴文发布失败'\n      })\n    }\n  }\n\n\n  useEffect(() => {\n    if (!props.relatedInstitute && !props.relatedTopic) {\n      setReplyTo(id)\n    }\n  }, [id])\n\n  return (\n    <div className={props.className}>\n      {token ? (\n        <>\n          <MsgAlert msg={msg} />\n          <Form onSubmit={handleSubmit}>\n            <Form.Row>\n              <Form.Group as={Col} >\n                <Form.Label>添加回复</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  placeholder=\"...\"\n                  rows={3}\n                  id=\"replytextarea\"\n                  value={content}\n                  onChange={(e) => { setContent(e.target.value) }} />\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Group as={Row} controlId=\"replyTo\">\n              <Col>\n                <Form.File\n                  id=\"photos\"\n                  name=\"photos\"\n                  label={`添加图片(${photos.length})`}\n                  size=\"sm\"\n                  onChange={handlePhotos}\n                  custom\n                  disabled={reachedPhotoCountLimit}\n                />\n              </Col>\n              <Col xs=\"auto\">\n                <ButtonGroup aria-label=\"reply\">\n                  <Button variant=\"primary\" type=\"submit\">\n                    发布\n                  </Button>\n                </ButtonGroup>\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"preview\" className=\"px-3\">\n              {\n                photoPreviews.map((photo, idx) => {\n                  return (\n                    <Col xs={6} lg={3} className=\"p-1\">\n                      <div style={{\n                        backgroundImage: `url(${photo})`,\n                        ...imageStyle\n                      }}\n                        className=\"img-thumbnail d-block\"\n                        onClick={() => {\n                          setPhotos([...photos.filter((p, i) => i != idx)])\n                          setPhotoPreviews([...photoPreviews.filter((p, i) => i != idx)])\n                          setReachedPhotoCountLimit(false)\n                        }}\n                      ></div>\n                    </Col>\n                  )\n                })\n              }\n            </Form.Group>\n          </Form>\n        </>\n      ) : (\n        <Alert variant=\"info\"><Alert.Link href=\"/login\">登入</Alert.Link>后可以进行回复</Alert>\n      )}\n    </div>\n  )\n}\n\n\nexport { PostCard, PostList, NewPostForm, PostImage, imageStyle, ImageModal };","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/post.js",["520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport '../style.css'\nimport React, { useState, useEffect } from 'react'\nimport { Alert, Form, FormControl, Button, ButtonGroup, Nav, Tab, Row, Col, Table, InputGroup, Dropdown, DropdownButton, ListGroup, Image, Card, CardGroup, CardDeck, Badge, Tabs, FormGroup } from 'react-bootstrap'\nimport { Navbar, NavDropdown, Breadcrumb, Pagination } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect, useHistory, useLocation, useParams, useRouteMatch } from 'react-router-dom'\nimport constants from '../utils/constants'\nimport SVG from '../utils/svg'\nimport { makePaginations } from './components/pagination'\nimport { timeStringConverter } from '../utils/util'\nimport { TopicCard, TopicList } from './components/topic'\nimport { PostCard, NewPostForm } from './components/post'\nimport axios from 'axios'\nimport { InstituteCard } from './components/institute'\n\nconst fetchPostService = async (id, port = constants.serverPort) => {\n  const url = `http://${document.domain}:${port}/post/${id}/`\n  const token = window.localStorage.getItem('token')\n  const auth = (token) ? `bearer ${token}` : null\n\n  const res = await axios.get(url, { headers: { auth } })\n  return res\n}\n\nconst PostView = (props) => {\n  const { path, url, params } = useRouteMatch()\n  const location = useLocation();\n  const history = useHistory();\n  const id = useParams().id\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n\n  const [post, setPost] = useState()\n\n\n  useEffect(async () => {\n    try {\n      const res = await fetchPostService(id)\n      console.log(res)\n      document.title = `${res.data.post.content} - ${constants.title.post} - ${constants.appName}`\n      setPost(res.data.post)\n    } catch (err) {\n      console.log(err.response)\n      setMsg({ type: 'danger', text: '未能取得贴文内容' })\n    }\n  }, [id])\n\n  /*\n  useEffect(() => {\n    const url = `http://${document.domain}:${constants.serverPort}/post/${id}/fetch`\n    axios.post(url).then(res => {\n      console.log(res)\n      document.title = `${res.data.post.content} - ${constants.title.post} - ${constants.appName}`\n      setPost(res.data.post)\n    })\n  }, [id])\n  */\n\n  return (\n    <>\n      {(post) ? (\n        <>\n          <div>\n            <Row className=\"mb-3\">\n              <Col xs=\"auto\">\n                <Button\n                  variant=\"outline-success\"\n                  size=\"sm\"\n                  onClick={() => {\n                    history.goBack()\n                  }}\n                >←返回</Button>\n              </Col>\n              {(post.relatedInstitute) ? (\n                <Col>\n                  <h4>院校评价</h4>\n                </Col>\n              ) : null}\n            </Row>\n            <Card>\n              <ListGroup variant=\"flush\">\n                {(post.relatedInstitute) ? (\n                  <InstituteCard institute={post.relatedInstitute} />\n                ) : null}\n                {(post.replyTo) ? (\n                  <PostCard post={post.replyTo} />\n                ) : null}\n                <PostCard\n                  post={post}\n                  expanded\n                  detail\n                />\n                <ListGroup.Item>\n                  {\n                    <NewPostForm reply />\n                  }\n                </ListGroup.Item>\n                {\n                  (post.replies.length > 0) ? (\n                    <>\n                      <ListGroup.Item variant=\"light\">\n                        <Row>\n                          <Col>\n                            回复（{post.replies.length}）\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                      {\n                        post.replies.map((reply, idx) => {\n                          return (\n                            <PostCard\n                              post={reply}\n                              index={idx + 1}\n                              expanded={false}\n                              host={reply.author._id === post.author._id}\n                            />\n                          )\n                        })\n                      }\n                    </>) : null\n                }\n              </ListGroup>\n            </Card>\n          </div>\n        </>\n      ) : null}\n    </>\n  )\n}\n\n\nconst PostPage = (props) => {\n  return (\n    <>\n      <Router>\n        <div className=\"container mb-3\">\n          <Switch>\n            <Route path={`/post/:id`}>\n              <PostView />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  )\n}\n\n\nexport default PostPage;","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/user.js",["554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport { useState, useEffect } from 'react'\nimport { Modal, Badge, Alert, Form, FormControl, Button, Card, Nav, Tab, Row, Col, Table, Spinner, ListGroup, ModalBody, Popover, OverlayTrigger, Image, InputGroup } from 'react-bootstrap'\nimport { Navbar, NavDropdown, Breadcrumb, Pagination } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect, useHistory } from 'react-router-dom'\nimport constants from '../../utils/constants'\nimport { timeStringConverter } from '../../utils/util'\nimport axios from 'axios'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\nimport SVG from '../../utils/svg'\nimport { MsgAlert, MsgListItem } from './msg'\nimport { makePaginations } from './pagination'\nimport defaultAvatar from '../../resources/default_avatar.png'\nimport { PostCard } from './post'\nimport { TopicCard } from './topic'\n\nconst serverUrl = `http://${document.domain}:${constants.serverPort}`\n\nconst loginService = async credentials => {\n  const url = `http://${document.domain}:${constants.serverPort}/user/login`\n  return await axios.post(url, credentials)\n}\n\nconst signupService = async profile => {\n  const url = `http://${document.domain}:${constants.serverPort}/user/signup`\n  return await axios.post(url, profile)\n}\n\nconst modifyUserService = async profile => {\n  const url = `http://${document.domain}:${constants.serverPort}/user/modify`\n  const token = window.localStorage.getItem('token')\n  const auth = (token) ? `bearer ${token}` : null\n\n  return await axios.post(url, profile, { headers: { auth } })\n}\n\nconst toggleFollowService = async user => {\n  const url = `http://${document.domain}:${constants.serverPort}/user/togglefollow`\n  const token = window.localStorage.getItem('token')\n  const auth = (token) ? `bearer ${token}` : null\n\n  return await axios.post(url, { user }, { headers: { auth } })\n}\n\nconst loginSchema = Yup.object().shape({\n  username: Yup.string().required('请输入用户名'),\n  password: Yup.string().required('请输入密码')\n})\n\nconst usernameRegex = /^([0-9]|[a-z]|[A-Z]|_){4,16}$/\n\nconst signupValidator = Yup.object().shape({\n  username: Yup.string()\n    .matches(usernameRegex, '用户名应只由数字、字母和下划线组成，最少4位，最多16位')\n    .required('请输入用户名'),\n  password: Yup.string()\n    .min(6, '需要至少6位字符')\n    .max(32, '密码过长，最多32个字符')\n    .required('请输入密码'),\n  name: Yup.string().max(20, '姓名过长，最多20个字符'),\n  hint: Yup.string()\n    .max(100, '提示过长'),\n  year: Yup.string().matches(/^20[0-9][0-9]$/).required('需要选择考生的届次'),\n  province: Yup.string().required('需要选择考生的省份'),\n  city: Yup.string().required('需要选择考生的城市'),\n  about: Yup.string().max(1000, '个人简介过长，请控制在1000字内'),\n})\n\nconst modifyValidator = Yup.object().shape({\n  username: Yup.string()\n    .matches(usernameRegex, '用户名应只由数字、字母和下划线组成，最少4位，最多16位')\n    .nullable(true),\n  password: Yup.string()\n    .min(6, '需要至少6位字符')\n    .max(32, '密码过长，最多32个字符')\n    .nullable(true),\n  name: Yup.string().max(20, '姓名过长，最多20个字符').nullable(true),\n  hint: Yup.string().max(100, '提示过长').nullable(true),\n  year: Yup.string().matches(/^20[0-9][0-9]$/).required('需要选择考生的届次').nullable(true),\n  province: Yup.string().required('需要选择考生的省份').nullable(true),\n  city: Yup.string().required('需要选择考生的城市').nullable(true),\n  about: Yup.string().max(1000, '个人简介过长，请控制在1000字内').nullable(true),\n})\n\nconst SignupForm = (props) => {\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n\n  const [loginAs, setLoginAs] = useState(JSON.parse(window.localStorage.getItem('user')))\n\n  const resetMsg = () => setMsg({ type: '', text: '' })\n  const history = useHistory()\n\n  const [imagePreviewUrl, setImagePreviewUrl] = useState()\n  const [imageReady, setImageReady] = useState(false)\n  const [imageFile, setImageFile] = useState()\n\n  useEffect(() => { if (loginAs?.avatar) { setImagePreviewUrl(`http://${document.domain}:${constants.serverPort}${loginAs.avatar}`) } }, [loginAs])\n\n  const handleSubmit = async (body) => {\n    resetMsg()\n    var avatarPath\n    if (imageReady && imageFile) {\n      let formData = new FormData()\n\n      formData.append('image', imageFile) //, `avatar_${loginAs?._id || body.username}.${filename[filename.length - 1]}`)\n      try {\n        const url = `http://${document.domain}:${constants.serverPort}/image/uploadsingle`\n        const res = await axios.post(url, formData, { headers: { 'Content-Type': 'multipart/form-data' } })\n        avatarPath = res.data.path\n        console.log(res)\n      } catch (err) {\n        console.log(err)\n        setMsg({ type: 'danger', text: \"头像上传失败\" })\n      }\n    }\n\n    try {\n      console.log(body)\n      const res = (props.modify) ? await modifyUserService({ ...body, avatarPath }) : await signupService({ ...body, avatarPath })\n      setMsg({ type: 'success', text: `${res.data.msg}\\n${JSON.stringify(body)}` })\n      if (props.modify) {\n        window.localStorage.setItem('user', JSON.stringify(res.data.user))\n      }\n      setTimeout(() => { history.push(`/login`); history.go() }, 1000)\n    } catch (err) {\n      setMsg({ type: 'danger', text: `${err.response.data.msg}\\n${JSON.stringify(body)}` })\n      console.log(err)\n    }\n  }\n\n\n  const handleImage = (e) => {\n    e.preventDefault()\n\n    if (e.target.files[0]) {\n      var reader = new FileReader()\n      var file = e.target.files[0]\n\n      if (file.type.includes('image')) {\n        reader.onloadend = () => {\n          console.log('file:', file)\n          console.log('result:', reader.result)\n          setImagePreviewUrl(reader.result)\n          setImageFile(file)\n          setImageReady(true)\n        }\n\n        reader.readAsDataURL(file)\n      } else {\n        console.log('err: not image')\n        alert('格式错误，请上传图片')\n      }\n    }\n  }\n\n  return (\n    <div>\n      <MsgAlert msg={msg} />\n      <Form.Row className=\"mb-3\">\n        <Col xs=\"auto\">\n          <Image width={96} height={96} src={imagePreviewUrl} />\n        </Col>\n        <Col>\n          <Form.Group>\n            <Form.File\n              id=\"avatar\"\n              name=\"avatar\"\n              label=\"头像\"\n              onChange={handleImage}\n              custom\n            />\n          </Form.Group>\n          <Button className=\"mr-2\" variant=\"warning\" disabled={!imageReady} onClick={() => { setImageReady(false); setImageFile(null); setImagePreviewUrl(loginAs.avatar) }}>\n            重置\n          </Button>\n          <Button variant=\"dark\" disabled={!imagePreviewUrl} onClick={() => { setImagePreviewUrl(null); setImageFile(null) }}>\n            不使用头像\n          </Button>\n        </Col>\n      </Form.Row>\n      <hr />\n      <Formik\n        onSubmit={handleSubmit}\n        initialValues={\n          (props.modify) ? {\n            username: loginAs.username,\n            password: '',\n            name: loginAs.name,\n            hint: loginAs.hint,\n            year: loginAs.year,\n            province: loginAs.region.province,\n            city: loginAs.region.city,\n            about: loginAs.about\n          } : {\n            username: '',\n            password: '',\n            name: '',\n            hint: '',\n            year: '',\n            province: '',\n            city: '',\n            about: ''\n          }\n        }\n        validationSchema={(props.modify) ? modifyValidator : signupValidator}\n      >\n        {\n          ({\n            handleSubmit,\n            handleChange,\n            handleBlur,\n            values,\n            errors,\n            touched,\n            isValid,\n            resetForm\n          }) => (\n            <Form noValidate onSubmit={handleSubmit}>\n              <Form.Row>\n                <Col xs={12}>\n                  <Form.Group>\n                    <InputGroup hasValidation>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>姓名</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"name\"\n                        value={values.name}\n                        onChange={handleChange}\n                        isValid={touched.name && !errors.name}\n                        isInvalid={!!errors.name}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.name}\n                      </Form.Control.Feedback>\n                    </InputGroup>\n                  </Form.Group>\n                </Col>\n                <Col xs={12} sm={6}>\n                  <Form.Group>\n                    <InputGroup hasValidation>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>@</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"用户名\"\n                        name=\"username\"\n                        value={values.username}\n                        onChange={handleChange}\n                        isValid={touched.username && !errors.username}\n                        isInvalid={!!errors.username}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.username}\n                      </Form.Control.Feedback>\n                    </InputGroup>\n                  </Form.Group>\n                </Col>\n                <Col xs={12} sm={6}>\n                  <Form.Group>\n                    <InputGroup hasValidation>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>密码</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        type=\"password\"\n                        name=\"password\"\n                        value={values.password}\n                        onChange={handleChange}\n                        isValid={touched.password && !errors.password}\n                        isInvalid={!!errors.password}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.password}\n                      </Form.Control.Feedback>\n                    </InputGroup>\n                  </Form.Group>\n                </Col>\n              </Form.Row>\n              <Form.Row>\n                <Col xs={12} sm={8}>\n                  <Form.Group>\n                    <InputGroup hasValidation>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>密码提示</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        type=\"text\"\n                        name=\"hint\"\n                        value={values.hint}\n                        onChange={handleChange}\n                      />\n                    </InputGroup>\n                  </Form.Group>\n                </Col>\n                <Col xs={12} sm={4}>\n                  <Form.Group>\n                    <InputGroup hasValidation>\n                      <Form.Control\n                        as=\"select\"\n                        name=\"year\"\n                        value={values.year}\n                        onChange={handleChange}\n                        isValid={touched.year && !errors.year}\n                        isInvalid={!!errors.year}\n                      >\n                        <option value={null}>...</option>\n                        {\n                          [\n                            '2021',\n                            '2020',\n                            '2019',\n                            '2018',\n                            '2017',\n                            '2016'\n                          ].map((year) => (<option>{year}</option>))\n                        }\n                      </Form.Control>\n                      <InputGroup.Append>\n                        <InputGroup.Text>届</InputGroup.Text>\n                      </InputGroup.Append>\n                    </InputGroup>\n                  </Form.Group>\n                </Col>\n              </Form.Row>\n              <Form.Row>\n                <Col xs={12} sm={6}>\n                  <Form.Group>\n                    <InputGroup hasValidation>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>省份</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        as=\"select\"\n                        name=\"province\"\n                        value={values.province}\n                        onChange={handleChange}\n                        isValid={touched.province && !errors.province}\n                        isInvalid={!!errors.province}\n                      >\n                        <option value=''>...</option>\n                        {\n                          constants.regions.map((r) => (<option value={r.region_id}>{r.region_name}</option>))\n                        }\n                      </Form.Control>\n                    </InputGroup>\n                  </Form.Group>\n                </Col>\n                <Col xs={12} sm={6}>\n                  <Form.Group>\n                    <InputGroup hasValidation>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>城市</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        as=\"select\"\n                        name=\"city\"\n                        value={values.city}\n                        onChange={handleChange}\n                        isValid={touched.city && !errors.city}\n                        isInvalid={!!errors.city}\n                      >\n                        <option value=''>...</option>\n                        {\n                          constants.cities\n                            .filter(city => city.city_id.slice(0, 2) === values.province)\n                            .sort((a, b) => a.city_id.localeCompare(b.city_id))\n                            .map((c) => (<option value={c.city_id}>{c.city_name}</option>))\n                        }\n                      </Form.Control>\n                    </InputGroup>\n                  </Form.Group>\n                </Col>\n              </Form.Row>\n              <Form.Row>\n                <Col>\n                  <Form.Group>\n                    <InputGroup hasValidation>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>介绍</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        as=\"textarea\"\n                        name=\"about\"\n                        value={values.about}\n                        onChange={handleChange}\n                        isValid={touched.about && !errors.about}\n                        isInvalid={!!errors.about}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.about}\n                      </Form.Control.Feedback>\n                    </InputGroup>\n                  </Form.Group>\n                </Col>\n              </Form.Row>\n              <Form.Row>\n                <Col xs=\"auto\">\n                  <Button type=\"submit\" variant=\"info\">\n                    {(props.modify) ? '修改个人信息' : '注册'}\n                  </Button>\n                </Col>\n                <Col xs=\"auto\">\n                  <Button\n                    variant=\"warning\"\n                    onClick={() => { resetForm() }}\n                  >\n                    重置\n                  </Button>\n                </Col>\n              </Form.Row>\n            </Form>\n          )\n        }\n      </Formik>\n    </div>\n  )\n}\n\n\nconst LoginForm = (props) => {\n  const history = useHistory()\n  const [msg, setMsg] = useState({ type: '', text: '' })\n\n  const resetMsg = () => setMsg({ type: '', text: '' })\n\n  const handleSubmit = async (body) => {\n    resetMsg()\n    console.log(body)\n    try {\n      const res = await loginService(body)\n      console.log(res)\n      setMsg({ type: 'success', text: '登入成功' })\n\n      window.localStorage.setItem('user', JSON.stringify(res.data.user))\n      window.localStorage.setItem('token', res.data.token)\n\n      const url = `http://${document.domain}:${constants.serverPort}/institute/getallinfo`\n      const allInstitutes = await axios.get(url)\n      window.localStorage.setItem('allInstitutes', JSON.stringify(allInstitutes.data.institutes))\n\n      setTimeout(() => {\n        history.push('/home')\n        history.go()\n      }, 1000)\n\n    } catch (err) {\n      console.log(err.response)\n      setMsg({ type: 'danger', text: err.response.data.msg })\n    }\n  }\n\n  return (\n    <Formik\n      onSubmit={handleSubmit}\n      initialValues={{ username: '', password: '' }}\n      validationSchema={loginSchema}\n    >\n      {({\n        handleSubmit,\n        handleChange,\n        handleBlur,\n        values,\n        errors,\n        touched,\n        isValid,\n      }) => (\n        <div>\n          <MsgAlert msg={msg} />\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Row>\n              <Col xs={12} sm={6}>\n                <Form.Group>\n                  <InputGroup hasValidation>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>@</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"用户名...\"\n                      name=\"username\"\n                      value={values.username}\n                      onChange={handleChange}\n                      isValid={touched.username && !errors.username}\n                      isInvalid={!!errors.username}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.username}\n                    </Form.Control.Feedback>\n                  </InputGroup>\n                </Form.Group>\n              </Col>\n              <Col xs={12} sm={6}>\n                <Form.Group>\n                  <InputGroup hasValidation>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>密码</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <Form.Control\n                      type=\"password\"\n                      name=\"password\"\n                      value={values.password}\n                      onChange={handleChange}\n                      isValid={touched.password && !errors.password}\n                      isInvalid={!!errors.password}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.password}\n                    </Form.Control.Feedback>\n                  </InputGroup>\n                </Form.Group>\n              </Col>\n            </Form.Row>\n            <Form.Row>\n              <Col xs=\"auto\">\n                <Button type=\"submit\" variant=\"success\">\n                  登入\n              </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </div>\n      )}\n    </Formik>\n  )\n\n}\n\nconst FollowButton = (props) => {\n  const { user, onFollow, onClick, variant, ...otherProps } = props\n  const loginAs = JSON.parse(window.localStorage.getItem('user'))\n  const history = useHistory()\n\n  const handleFollow = async (e) => {\n    e.stopPropagation()\n    try {\n      const res = await toggleFollowService(user._id)\n      if (onFollow) {\n        onFollow({ type: 'success', text: res.data.msg })\n      }\n      window.localStorage.setItem('user', JSON.stringify(res.data.user))\n      setTimeout(() => { onFollow({ type: '', text: '' }) }, 1000)\n    } catch (err) {\n      console.log(err.response)\n      if (onFollow) {\n        onFollow({ type: 'danger', text: err.response.data.msg })\n      }\n    }\n  }\n\n\n  return (loginAs && (loginAs._id != user._id)) ? ((loginAs.following.find(f => (f === user._id) || (f._id === user._id))) ?\n    (<Button {...otherProps} variant={`${variant}`} onClick={handleFollow}>已关注</Button>)\n    :\n    (<Button {...otherProps} variant={`outline-${variant}`} onClick={handleFollow}>关注</Button>)\n  ) : null\n}\n\nconst UserCard = (props) => {\n  const user = props.user\n  const history = useHistory()\n  const loginAs = JSON.parse(window.localStorage.getItem('user'))\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n\n  return (\n    (user) ? (\n      <>\n        <MsgAlert msg={msg} />\n        <Row>\n          <Col xs=\"auto\" className=\"pr-0\">\n            <UserAvatar width={48} height={48} user={user} />\n          </Col>\n          <Col>\n            <Row>\n              <Col>\n                <Row>\n                  <Col>\n                    <a href={`/user/${user.username}`}>\n                      <strong>{user.name}</strong>\n                    </a>\n                    <br />\n                    <small className=\"text-info\">@{user.username}</small>\n                  </Col>\n                </Row>\n              </Col>\n              <Col xs=\"auto\">\n                <FollowButton\n                  user={user}\n                  size=\"sm\"\n                  variant=\"info\"\n                  onFollow={setMsg} />\n              </Col>\n            </Row>\n            <UserInteractInfo size=\"sm\" user={user} className=\"mt-2\" onClick={(e) => { e.stopPropagation() }} />\n            <Row className=\"mt-1\">\n              <Col style={{\n                maxHeight: '3rem',\n                overflowY: 'scroll',\n              }}\n              >\n                {user.about}\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </>\n    ) : null\n  )\n\n}\n\nconst UserListItem = (props) => {\n  const user = props.user\n  const history = useHistory()\n  const loginAs = JSON.parse(window.localStorage.getItem('user'))\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n\n  return (\n    <>\n      <ListGroup.Item action onClick={(e) => { e.stopPropagation(); history.push(`/user/${user.username}`); history.go() }}>\n        <Row>\n          <Col>\n            <MsgAlert msg={msg} />\n          </Col>\n        </Row>\n        {(user) ? (\n          <>\n            <Row>\n              <Col xs=\"auto\" className=\"pr-0\">\n                <UserAvatar width={48} height={48} user={user} />\n              </Col>\n              <Col>\n                <Row>\n                  <Col>\n                    <Row>\n                      <Col>\n                        <a href={`/user/${user.username}`}>\n                          <strong>{user.name}</strong>\n                        </a>\n                        <br />\n                        <small className=\"text-info\">@{user.username}</small>\n                      </Col>\n                    </Row>\n                  </Col>\n                  <Col xs=\"auto\">\n                    <FollowButton\n                      user={user}\n                      size=\"sm\"\n                      variant=\"info\"\n                      onFollow={setMsg} />\n                  </Col>\n                </Row>\n                {\n                  (user.about) ? (\n                    <Row className=\"\">\n                      <Col style={{\n                        maxHeight: '3rem',\n                        overflowY: 'scroll',\n                      }}\n                      >\n                        {user.about}\n                      </Col>\n                    </Row>\n                  ) : null\n                }\n              </Col>\n            </Row>\n          </>\n        ) : null}\n      </ListGroup.Item>\n    </>\n  )\n}\n\n\nconst UserLink = (props) => {\n\n  const UserPopover = (\n    <Popover onClick={(e) => { e.stopPropagation() }} >\n      <Popover.Content>\n        <UserCard user={props.user} />\n      </Popover.Content>\n    </Popover>\n  )\n\n  return (\n    <>\n      <OverlayTrigger rootClose trigger=\"click\" placement=\"auto\" overlay={UserPopover}>\n        <Button size={(props.size) ? props.size : 'sm'} variant=\"link\" className={`${props.className} p-0 align-baseline`} onClick={\n          (e) => {\n            e.stopPropagation()\n          }\n        }><strong>{props.children || (props.user.name || props.user.username)}</strong></Button>\n      </OverlayTrigger>\n    </>\n  )\n}\n\nconst UserList = (props) => {\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n  const users = props.users\n  const [currentPage, setCurrentPage] = useState(1)\n  const userPerPage = props.userPerPage || 12\n\n\n  return (\n    <>\n      <ListGroup variant=\"flush\">\n        <ListGroup.Item>\n          <Row>\n            <Col>\n              <span className=\"annotation\">\n                共 {users.length} 名用户\n              </span>\n            </Col>\n          </Row>\n        </ListGroup.Item>\n        {\n          (users.length) ? (\n            <>\n              {\n                ([...users.slice((currentPage - 1) * userPerPage, (currentPage) * userPerPage)].map((user) => {\n                  return (<UserListItem user={user} />)\n                }))\n              }\n              <ListGroup.Item>\n                {makePaginations(currentPage, setCurrentPage, Math.ceil(users.length / userPerPage), 4)}\n              </ListGroup.Item>\n            </>\n          ) : null\n        }\n      </ListGroup>\n    </>\n  )\n\n}\n\nconst UserInteractInfo = (props) => {\n  const { user, size, ...otherProps } = props\n  const history = useHistory()\n  return (\n    <Row {...otherProps}>\n      <Col xs=\"auto\">\n        <Button\n          onClick={() => { history.push(`/user/${user.username}/following`); history.go() }}\n          variant=\"link\"\n          size={size}\n          className=\"p-0 text-dark align-baseline\"\n        >\n          <strong>{user.following.length}</strong> <span className=\"text-muted\">关注中</span>\n        </Button>\n      </Col>\n      <Col xs=\"auto\">\n        <Button\n          onClick={() => { history.push(`/user/${user.username}/follower`); history.go() }}\n          variant=\"link\"\n          size={size}\n          className=\"p-0 text-dark align-baseline\"\n        >\n          <strong>{user.follower.length}</strong> <span className=\"text-muted\">关注者</span>\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nconst UserActivity = (props) => {\n  const [contents, setContents] = useState([])\n  const activityPerPage = 12 || props.activityPerPage\n  const isHomepage = !!props.homepage\n  const [currentPage, setCurrentPage] = useState(1)\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n  const loginAs = JSON.parse(window.localStorage.getItem('user'))\n\n  const [refresh, setRefresh] = useState(false)\n\n  useEffect(async () => {\n    const users = (props.users || ((props.user) ? [props.user] : null))\n    if (users) {\n      const postUrl = `http://${document.domain}:${constants.serverPort}/post/fetch`\n      const topicUrl = `http://${document.domain}:${constants.serverPort}/topic/fetch`\n      const instituteUrl = `http://${document.domain}:${constants.serverPort}/institute/activity`\n\n      try {\n        setMsg({ type: 'info', text: '获取动态中' })\n        const postRes = await axios.post(postUrl, { users, limit: props.limit })\n        const topicRes = await axios.post(topicUrl, { users, limit: props.limit })\n        var instituteActivities = { posts: [], topics: [] }\n        if (isHomepage) {\n          const instRes = await axios.post(instituteUrl, { users: [loginAs], limit: props.limit })\n          instituteActivities = instRes.data\n        }\n        const posts = postRes.data.posts\n        const topics = topicRes.data.topics\n        let contents = [...posts, ...topics, ...instituteActivities?.posts, ...instituteActivities?.topics].sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\n        setContents(contents)\n        setMsg({ type: '', text: '' })\n      } catch (err) {\n        console.log(err)\n        setMsg({ type: 'danger', text: '获取动态失败' })\n      }\n    }\n  }, [props.user, props.users, refresh])\n\n  return (\n    <>\n      <ListGroup variant=\"flush\">\n        <MsgListItem msg={msg} />\n        <ListGroup.Item>\n          <Row>\n            <Col>\n              {(contents.length && !props.limit) ? (\n                <div>\n                  <div className=\"\">共 {contents.length} 条动态</div>\n                  <div className=\"annotation\">{`第 ${(currentPage - 1) * activityPerPage + 1}~${Math.min(currentPage * activityPerPage, contents.length)} 条`}</div>\n                </div>\n              ) : null}\n            </Col>\n            <Col xs=\"auto\">\n              <Button variant=\"success\" size=\"sm\" onClick={() => { setRefresh(!refresh) }}>\n                刷新\n              </Button>\n            </Col>\n          </Row>\n        </ListGroup.Item>\n        {\n          (contents.length) ? (\n            contents.slice((currentPage - 1) * activityPerPage, (currentPage) * activityPerPage).map((content) => {\n              if (content.author) {\n                return (<PostCard post={content} detail />)\n              } else if (content.host) {\n                return (<TopicCard topic={content} />)\n              } else {\n                return (<ListGroup.Item></ListGroup.Item>)\n              }\n            })\n          ) : (\n            <ListGroup.Item>\n              <span className=\"annotation\">没有新动态</span>\n            </ListGroup.Item>\n          )\n        }\n        <ListGroup.Item>\n          {makePaginations(currentPage, setCurrentPage, Math.ceil(contents.length / activityPerPage), 3)}\n        </ListGroup.Item>\n      </ListGroup>\n    </>\n  )\n}\n\nconst avatarStyle = {\n  borderRadius: '.2rem',\n}\n\n\nconst AvatarModal = (props) => {\n  const { user, src, onClick, onHide, ...otherProps } = props // src is to filter out \n\n  const handleAvatarSubmit = () => {\n\n  }\n\n  return (\n    <Modal\n      {...otherProps}\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n      onClick={(e) => { e.stopPropagation(); onHide() }}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          用户头像\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Row>\n          <Col>\n          </Col>\n          <Col xs=\"auto\"></Col>\n        </Row>\n        <Image\n          className=\"w-100\"\n          src={(user.avatar) ? `${serverUrl}${user.avatar}` : defaultAvatar}\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={onHide}>关闭</Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nconst UserAvatar = (props) => {\n  let { user, src, style, withModal, ...otherprops } = props\n  const history = useHistory()\n  const [modalShow, setModalShow] = useState(false)\n\n  return (\n    <>\n      <Image {...otherprops}\n        style={{\n          ...style,\n          ...avatarStyle\n        }}\n        src={(user.avatar) ? `${serverUrl}${user.avatar}` : defaultAvatar}\n        onClick={(e) => {\n          e.stopPropagation()\n          if (withModal) {\n            setModalShow(true)\n          } else {\n            history.push(`/user/${user.username}`)\n            history.go()\n          }\n        }}\n      />\n      {\n        withModal && (\n          <AvatarModal\n            size=\"md\"\n            user={user}\n            show={modalShow}\n            onHide={() => { setModalShow(false); }}\n          />\n        )\n      }\n    </>\n  )\n}\n\nconst NotificationCard = (props) => {\n  const [notification, setNotification] = useState(props.notification)\n  useEffect(() => {\n    setNotification(props.notification)\n  }, [props.notification])\n\n  const [relatedPost, setRelatedPost] = useState()\n\n  useEffect(async () => {\n    if (notification.relatedPost) {\n      const url = `http://${document.domain}:${constants.serverPort}/post/${notification.relatedPost}`\n      const res = await axios.get(url)\n      console.log(res)\n      setRelatedPost(res.data.post)\n    }\n  }, [props.notification, notification])\n\n  const info = {\n    'reply': '回复了你的贴文',\n    'topic': '参与了你发起的讨论',\n    'follow': '关注了你',\n    'unfollow': '不再关注你了'\n  }\n\n  return (\n    <>\n      <ListGroup.Item>\n        <Row className=\"mb-2\">\n          <Col>\n            <UserLink user={notification.from} size=\"md\" className=\"mr-1\">\n              {notification.from.name || notification.from.username}\n            </UserLink>\n            {\n              info[notification.msg]\n            }\n          </Col>\n          <Col xs=\"auto\">\n            {\n              (notification.status.checked) ? null : (\n                <Badge variant=\"info\" className=\"mr-1\">\n                  新消息\n                </Badge>\n              )\n            }\n            <small className=\"text-black-50\">{timeStringConverter(notification.time)}</small>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {\n              (notification.relatedPost && relatedPost) ? (\n                <ListGroup className=\"card\" variant=\"flush\">\n                  <PostCard post={relatedPost} />\n                </ListGroup>\n              ) : null\n            }\n            {\n              (notification.msg == 'follow' || notification.msg == 'unfollow') ? (\n                <ListGroup className=\"card\" variant=\"flush\">\n                  <UserListItem user={notification.from} />\n                </ListGroup>\n              ) : null\n            }\n          </Col>\n        </Row>\n      </ListGroup.Item>\n    </>\n  )\n}\n\nconst NotificationList = (props) => {\n  const [notifications, setNotifications] = useState([])\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n  const notificationPerPage = 12 || props.notificationPerPage\n  const [currentPage, setCurrentPage] = useState(1)\n  const [refresh, setRefresh] = useState(false)\n\n  useEffect(async () => {\n    setMsg({\n      type: 'info',\n      text: '消息获取中...'\n    })\n    const url = `http://${document.domain}:${constants.serverPort}/user/notifications`\n    const token = window.localStorage.getItem('token')\n\n    if (token) {\n      const auth = `bearer ${token}`\n      try {\n        const res = await axios.get(url, { headers: { auth } })\n        console.log(res)\n        setNotifications([...res.data.notifications])\n        if (res.data.notifications?.length) {\n          setMsg({\n            type: '',\n            text: ''\n          })\n        } else {\n          setMsg({\n            type: 'secondary',\n            text: '你还没有收到消息'\n          })\n        }\n      } catch (err) {\n        setMsg({\n          type: 'danger',\n          text: '获取用户消息失败'\n        })\n        console.log(err)\n      }\n    } else {\n      setMsg({\n        type: 'danger',\n        text: '请登入'\n      })\n    }\n\n  }, [refresh])\n\n  return (\n    <>\n      <ListGroup variant=\"flush\">\n        <MsgListItem msg={msg} />\n        <ListGroup.Item>\n          <Row>\n            <Col>\n              {\n                (notifications?.length) ? (\n                  <div>\n                    <div className=\"\">共 {notifications.length} 条消息</div>\n                    <div className=\"annotation\">{`第 ${(currentPage - 1) * notificationPerPage + 1}~${Math.min(currentPage * notificationPerPage, notifications.length)} 条`}</div>\n                  </div>\n                ) : null\n              }\n            </Col>\n            <Col xs=\"auto\">\n              <Button variant=\"success\" size=\"sm\" onClick={() => { setRefresh(!refresh) }}>\n                刷新\n              </Button>\n            </Col>\n          </Row>\n        </ListGroup.Item>\n        {\n          (notifications\n            .slice((currentPage - 1) * notificationPerPage, (currentPage) * notificationPerPage)\n            .map((notification, idx) => {\n              return (\n                <NotificationCard notification={notification} />\n              )\n            }))\n        }\n        <ListGroup.Item>\n          {makePaginations(currentPage, setCurrentPage, Math.ceil(notifications.length / notificationPerPage), 4)}\n        </ListGroup.Item>\n      </ListGroup>\n    </>\n  )\n}\n\n\nexport { SignupForm, LoginForm, UserCard, UserLink, UserListItem, UserList, toggleFollowService, UserAvatar, UserActivity, FollowButton, UserInteractInfo, NotificationCard, NotificationList }","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/institute.js",["588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport { useState, useEffect } from 'react'\nimport { Alert, Form, FormControl, Button, Nav, Tab, Row, Col, Table, ListGroup, ModalBody, Popover, Badge, OverlayTrigger, Image, InputGroup, ListGroupItem, Card } from 'react-bootstrap'\nimport { Navbar, NavDropdown, Breadcrumb, Pagination } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect, useRouteMatch, useHistory } from 'react-router-dom'\nimport constants from '../../utils/constants'\nimport { makePaginations } from './pagination'\nimport axios from 'axios'\nimport SVG from '../../utils/svg'\nimport { Formik } from 'formik'\nimport * as Yup from 'yup'\nimport { MsgAlert, MsgListItem } from './msg'\n\nconst Labels = (props) => {\n  const { path, url, params } = useRouteMatch()\n  const history = useHistory()\n  const labels = props.labels\n\n  return (\n    <div className=\"d-inline-block\" onClick={(e) => { e.stopPropagation() }}>\n      {\n        (labels) ?\n          labels.map(\n            (l, idx) => ((l) ? (\n              <Button variant={[\"primary\", \"secondary\", \"success\", \"info\"][idx % 4]}\n                className=\"mr-1 py-0 px-1\"\n                size=\"sm\"\n                style={{\n                  borderRadius: '0.25rem',\n                  fontWeight: '600',\n                  fontSize: '80%'\n                }}\n                onClick={(e) => {\n                  history.push({\n                    pathname: '/institute',\n                    state: {\n                      queryParams: [l]\n                    }\n                  })\n                  history.go()\n                }}\n              >\n                {l.label}\n              </Button>\n            ) : (<></>))\n          ) : []\n      }\n    </div>\n  )\n}\n\n\nconst InstituteCard = (props) => {\n  const { path, url, params } = useRouteMatch()\n  const [i, setI] = useState(props.institute)\n  const history = useHistory()\n  const token = window.localStorage.getItem('token')\n  const loginAs = JSON.parse(window.localStorage.getItem('user'))\n\n  useEffect(() => { setI(props.institute) }, [props.institute])\n\n  return (\n    <ListGroup.Item action onClick={() => { history.push(`/institute/${i.id}`); history.go() }}>\n      <Row>\n        {\n          (props.size === \"sm\") ? (<></>) : (\n            <Col xs=\"auto\" className=\"d-none d-sm-block\">\n              <Image fluid height={80} width={80} src={i.icon} />\n            </Col>\n          )\n        }\n        <Col sm>\n          <Row className=\"mb-2\">\n            <Col xs>\n              {\n                (props.size === \"sm\") ? (\n                  <Image className=\"mr-2\" fluid height={24} width={24} src={i.icon} />\n                ) : (\n                  <Image className=\"d-xs-block d-sm-none mr-2\" fluid height={24} width={24} src={i.icon} />\n                )\n              }\n              <b className=\"mr-1\">{i.name}</b>\n              {(props.score) ? (<Badge variant=\"info\">{props.score}分</Badge>) : (<></>)}\n            </Col>\n            <Col style={{ textAlign: \"right\" }} xs=\"auto\">\n              <span className=\"annotation\">\n                <SVG variant=\"location\" />\n                {i.location}\n              </span>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Labels labels={i.labels} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Nav fill onClick={(e) => { e.stopPropagation(); }}>\n                <Nav.Item>\n                  <Button\n                    variant=\"link\"\n                    className=\"align-text-top\"\n                    onClick={(e) => { history.push(`/institute/${i.id}/discuss`); history.go() }}\n                  >\n                    <SVG variant=\"chat\" />\n                  </Button>\n                </Nav.Item>\n                {\n                  (loginAs && token) ? (\n                    <Nav.Item>\n                      {/*i._id*/}\n                      <InstituteFollowButton\n                        className=\"align-text-top\"\n                        variant=\"link\"\n                        instituteId={i._id} />\n                    </Nav.Item>\n                  ) : null\n                }\n                <Nav.Item>\n                  <Button\n                    variant=\"link\"\n                    className=\"align-text-top\"\n                    onClick={(e) => { history.push(`/forum/`); history.go() }}>\n                    <SVG variant=\"share\" />\n                  </Button>\n                </Nav.Item>\n              </Nav>\n            </Col>\n          </Row>\n        </Col>\n        {\n          (props.size === 'sm') ? (<></>) : (\n            <Col className=\"d-none d-lg-block\">\n              <Row>\n                <span className=\"annotation\">\n                  {i.brief}...\n                      </span>\n              </Row>\n              <Row>\n              </Row>\n            </Col>)\n        }\n      </Row>\n    </ListGroup.Item>\n  )\n}\n\n\nconst InstituteFollowButton = (props) => {\n  const [followed, setFollowed] = useState(false)\n  const instituteId = props.instituteId\n  const [loginAs, setLoginAs] = useState(JSON.parse(window.localStorage.getItem('user')))\n\n  useEffect(async () => {\n    if (loginAs) {\n      const url = `http://${document.domain}:${constants.serverPort}/institute/isfollowed`\n      const res = await axios.post(url, {\n        user: loginAs._id,\n        institute: props.instituteId\n      })\n      setFollowed(!!res.data.followed)\n    }\n  }, [props.instituteId])\n\n  const handleToggleFollow = async (e) => {\n    e.stopPropagation()\n    const token = window.localStorage.getItem('token')\n    const auth = (token) ? `bearer ${token}` : null\n    if (auth) {\n      const url = `http://${document.domain}:${constants.serverPort}/institute/togglefollow`\n      try {\n        const res = await axios.post(url, { id: instituteId }, { headers: { auth } })\n        console.log(res)\n        setFollowed(!followed)\n      } catch (err) {\n        console.log(err.response)\n      }\n    }\n  }\n\n  return (\n    <>\n      <Button\n        {...props}\n        onClick={handleToggleFollow}\n      >\n        {\n          (props.children) || (\n            <SVG variant=\"star\" fill={followed} />\n          )\n        }\n      </Button>\n    </>\n  )\n\n}\n\nconst InstituteList = (props) => {\n  const [currentPage, setCurrentPage] = useState(1)\n  const institutes = props.institutes\n  const instPerPage = props.instPerPage || 12\n\n\n  return (\n    <ListGroup {...props} variant=\"flush\">\n      <ListGroup.Item>\n        <Row>\n          <Col>\n            <span className=\"annotation\">\n              关注了 {institutes.length} 所院校\n              </span>\n          </Col>\n        </Row>\n      </ListGroup.Item>\n      {\n        /*\n      institutes.map(i=>{\n        return <InstituteCard institute={i} />\n      })\n      */\n      }\n\n      {\n        [...institutes.slice((currentPage - 1) * instPerPage, currentPage * instPerPage)].map((institute) => {\n          return (<InstituteCard institute={institute} />)\n        })\n      }\n      <ListGroup.Item>\n        {makePaginations(currentPage, setCurrentPage, Math.ceil(institutes.length / instPerPage), 4)}\n      </ListGroup.Item>\n    </ListGroup>\n  )\n}\n\n\n/*\n  props:\n  @size: size of selector - 'sm' | 'lg'\n  @onSelect: function of handling the selected institute -- function: (i: instituteObject) => {}\n  @caption: caption of selector - String\n  @nohide: don't hide the input area when institute is selected\n  @multiple: decide whether this selector displays in a multiple selection fashion or not\n*/\n\nconst InstituteSelector = (props) => {\n  const [indices, setIndices] = useState([])\n  const [keyword, setKeyword] = useState('')\n  const [selected, setSelected] = useState()\n\n  useEffect(() => {\n    const url = `http://${document.domain}:${constants.serverPort}/institute/indexlist`\n    const localStorage = window.localStorage.getItem('instituteIndices')\n    if (localStorage) {\n      console.log('fetching instituteIndices from localStorage')\n      setIndices(JSON.parse(localStorage))\n    } else {\n      axios.get(url).then((res) => {\n        console.log(res.data)\n        console.log('instituteIndices fetched, setting into localStorage')\n        window.localStorage.setItem('instituteIndices', JSON.stringify(res.data.institutes))\n        setIndices(res.data.institutes)\n      })\n    }\n  }, [])\n\n  return (\n    <>\n      <Form.Group>\n        <InputGroup size={props.size}>\n          <InputGroup.Prepend>\n            <InputGroup.Text>{props.caption ? props.caption : '院校'}</InputGroup.Text>\n          </InputGroup.Prepend>\n          {\n            (selected && !props.multiple) ? (\n              <InputGroup.Prepend>\n                <InputGroup.Text>\n                  <Alert.Link className=\"text-info\" size=\"sm\" onClick={() => {\n                    setSelected(null)\n                    if (props.onSelect) {\n                      props.onSelect(null)\n                    }\n                  }}>\n                    {selected.name} [{selected.id}]\n                  </Alert.Link>\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n            ) : null\n          }\n          {\n            (!props.multiple && !props.nohide && selected) ? null : (\n              <FormControl\n                value={keyword}\n                onChange={(e) => { setKeyword(e.target.value) }} />\n            )\n          }\n        </InputGroup>\n        <ListGroup variant=\"flush\">\n          {\n            (keyword) ?\n              indices\n                .filter(i => i.name.includes(keyword) || keyword === `${i.id}`)\n                .map((i, idx) => (\n                  <ListGroup.Item\n                    className=\"py-1 px-2\"\n                    action\n                    onClick={() => {\n                      setKeyword('')\n                      setSelected(i)\n                      if (props.onSelect) {\n                        props.onSelect(i)\n                      }\n                    }}\n                  >\n                    <small>\n                      {idx + 1}. <strong>{i.name}</strong> [{i.id}]\n                  </small>\n                  </ListGroup.Item>\n                ))\n              : null\n          }\n        </ListGroup>\n      </Form.Group>\n    </>\n  )\n}\n\nconst InstitutePredictionForm = (props) => {\n  const institute = props.institute\n  const [indices, setIndices] = useState()\n\n  const [msg, setMsg] = useState({\n    type: '',\n    text: ''\n  })\n\n  const [predictVal, setPredictVal] = useState({})\n\n  useEffect(async () => {\n    const url = `http://${document.domain}:${constants.servicePort}/fetch_indices`\n    const res = await axios.get(url, {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      },\n    })\n    console.log(res)\n    setIndices(res.data)\n  }, [])\n\n  const schema = Yup.object().shape({\n    last_min: Yup.number().min(0, '最低分为0分').max(750, '最高分为750分').required(),\n    last_min_rank: Yup.number().min(0, '最低排名为0').required(),\n    last_avg: Yup.number().min(0, '最低分为0分').max(750, '最高分为750分').required(),\n    last_avg_rank: Yup.number().min(0, '最低排名为0').required(),\n    last_province_line: Yup.number().min(0, '最低分为0分').max(750, '最高分为750分').required(),\n    id: Yup.number().required(),\n    province_line: Yup.number().min(0, '最低分为0分').max(750, '最高分为750分').required(),\n    major_name: Yup.string().required('请选择专业名称'),\n    major_category: Yup.string().required('请选择专业类别'),\n    major_field: Yup.string().required('请选择专业领域'),\n  })\n\n  const handleSubmit = async (body) => {\n    console.log(body)\n    const url = `http://${document.domain}:${constants.servicePort}/predict`\n    const res = await axios.post(url, body, {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      },\n    })\n    console.log(res)\n    setPredictVal(res.data)\n  }\n\n  return (\n    <>\n      <MsgAlert msg={msg} />\n      <Row>\n        <Col xs={12} md={6} className=\"mb-3\">\n          <Formik\n            onSubmit={handleSubmit}\n            initialValues={\n              {\n                id: institute.id,\n                year: 2021,\n                subject: 0,\n                province_line: 500,\n                major_name: '0',\n                major_category: '0',\n                major_field: '0',\n                last_min: 0,\n                last_min_rank: 0,\n                last_avg: 0,\n                last_avg_rank: 0,\n                last_province_line: 500,\n              }\n            }\n            validationSchema={schema}\n          >\n            {\n              ({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                errors,\n                touched,\n                isValid\n              }) => {\n                return (\n                  <Form noValidate onSubmit={handleSubmit}>\n                    <InputGroup size=\"sm\" className=\"mb-1\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>校名</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control type=\"text\" placeholder={institute?.name} readOnly />\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"mb-1\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>年份</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control type=\"text\" placeholder=\"2021\" readOnly/>\n                    </InputGroup>\n                    {\n                      /*\n                    <InputGroup size=\"sm\" className=\"mb-1\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>省份</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control as=\"select\">\n                      </Form.Control>\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"mb-1\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>批次</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control as=\"select\">\n                      </Form.Control>\n                    </InputGroup>\n                       */\n                    }\n                    <InputGroup size=\"sm\" className=\"mb-1\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>科类</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        as=\"select\"\n                        name=\"subject\"\n                        value={values.subject}\n                        onChange={handleChange}\n                      >\n                        {\n                          ['文科', '理科'].map((i, idx) => (\n                            <option value={idx}>{i}</option>\n                          ))\n                        }\n                      </Form.Control>\n                      <InputGroup.Append>\n                        <InputGroup.Text className=\"text-danger\">\n                          {errors.subject}\n                        </InputGroup.Text>\n                      </InputGroup.Append>\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"mb-1\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>省控线</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        type=\"number\"\n                        name=\"province_line\"\n                        value={values.province_line}\n                        onChange={handleChange}\n                      />\n                      <InputGroup.Append>\n                        <InputGroup.Text className=\"text-danger\">\n                          {errors.province_line}\n                        </InputGroup.Text>\n                      </InputGroup.Append>\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"mb-1\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>专业名</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        as=\"select\"\n                        name=\"major_name\"\n                        value={values.major_name}\n                        onChange={handleChange}\n                      >\n                        {\n                          (indices) ? indices.major_name.map(i => (\n                            <option value={i[0]}>{i[1]}</option>\n                          )) : null\n                        }\n                      </Form.Control>\n                      <InputGroup.Append>\n                        <InputGroup.Text className=\"text-danger\">\n                          {errors.major_name}\n                        </InputGroup.Text>\n                      </InputGroup.Append>\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"mb-1\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>专业类别</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        as=\"select\"\n                        name=\"major_category\"\n                        value={values.major_category}\n                        onChange={handleChange}\n                      >\n                        {\n                          (indices) ? indices.major_category.map(i => (\n                            <option value={i[0]}>{i[1]}</option>\n                          )) : null\n                        }\n                      </Form.Control>\n                      <InputGroup.Append>\n                        <InputGroup.Text className=\"text-danger\">\n                          {errors.major_category}\n                        </InputGroup.Text>\n                      </InputGroup.Append>\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"mb-1\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>专业领域</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        as=\"select\"\n                        name=\"major_field\"\n                        value={values.major_field}\n                        onChange={handleChange}\n                      >\n                        {\n                          (indices) ? indices.major_field.map(i => (\n                            <option value={i[0]}>{i[1]}</option>\n                          )) : null\n                        }\n                      </Form.Control>\n                      <InputGroup.Append>\n                        <InputGroup.Text className=\"text-danger\">\n                          {errors.major_field}\n                        </InputGroup.Text>\n                      </InputGroup.Append>\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"mb-1\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>去年投档线</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control type=\"number\"\n                        name=\"last_min\"\n                        value={values.last_min}\n                        onChange={handleChange}\n                        placeholder=\"分数\" />\n                      <Form.Control type=\"number\"\n                        name=\"last_min_rank\"\n                        value={values.last_min_rank}\n                        onChange={handleChange}\n                        placeholder=\"位次\" />\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"mb-1\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>去年平均分</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control type=\"number\"\n                        name=\"last_avg\"\n                        value={values.last_avg}\n                        onChange={handleChange}\n                        placeholder=\"分数\" />\n                      <Form.Control type=\"number\"\n                        name=\"last_avg_rank\"\n                        value={values.last_avg_rank}\n                        onChange={handleChange}\n                        placeholder=\"位次\" />\n                    </InputGroup>\n                    <InputGroup size=\"sm\" className=\"\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Text>去年省控线</InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control type=\"number\"\n                        name=\"last_province_line\"\n                        value={values.last_province_line}\n                        onChange={handleChange}\n                      />\n                    </InputGroup>\n                    <p className=\"text-danger\">\n                      <small>\n                        {errors.last_min}\n                        {errors.last_min_rank}\n                        {errors.last_avg}\n                        {errors.last_avg_rank}\n                        {errors.last_province_line}\n                      </small>\n                    </p>\n                    <Button type=\"submit\" variant=\"info\" size=\"sm\">预测</Button>\n                  </Form>\n                )\n              }\n            }\n\n          </Formik >\n        </Col>\n        <Col xs={12} md={6}>\n          <Card>\n            <Card.Header>\n              <strong>投档线预测</strong>\n            </Card.Header>\n            <Card.Body style={{ textAlign: 'center' }}>\n              <h4>{predictVal.min && Math.abs(predictVal?.min)}</h4>\n            </Card.Body>\n            {\n              /*\n            <Card.Header>\n              <strong>最低排名</strong>\n            </Card.Header>\n            <Card.Body style={{textAlign: 'center'}}>\n              <h4>{Math.abs(predictVal?.min_rank)}</h4>\n            </Card.Body>\n              */\n            }\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport { InstituteCard, InstituteList, Labels, InstituteSelector, InstituteFollowButton, InstitutePredictionForm }","/Users/tachiaoi/Semesters/ncee-2020/frontend/src/pages/components/msg.js",["616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport '../../style.css'\nimport { Alert, Form, FormControl, Button, ButtonGroup, Nav, Tab, Row, Col, Table, Spinner, InputGroup, Dropdown, DropdownButton, ListGroup, Image, Card, CardGroup, CardDeck, Badge, Tabs, FormGroup, ListGroupItem } from 'react-bootstrap'\n\n\nconst MsgAlert = (props) => {\n  const msg = props.msg || { type: '', text: '' }\n\n  return (\n    <>\n      {\n        (msg.type && msg.text && msg.text.length > 0) ? (\n          <Alert {...props} variant={msg.type}>{msg.text}</Alert>\n        ) : null\n      }\n    </>\n  )\n}\n\n\nconst MsgListItem = (props) => {\n  const msg = props.msg || { type: '', text: '' }\n  const type = props.msg\n\n  return (\n    <>\n      {\n        (msg.type && msg.text && msg.text.length > 0) ? (\n          <ListGroup.Item>\n            <Alert {...props} variant={msg.type} className={`${props.className} m-0 align-baseline`}>\n              {(msg.type === 'info') ?\n                <Spinner\n                  animation=\"border\"\n                  role=\"status\"\n                  className=\"mr-2\"\n                  size=\"sm\"\n                >\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n                : null}\n              {msg.text}\n            </Alert>\n          </ListGroup.Item>\n        ) : null\n      }\n    </>\n  )\n\n}\n\n\nexport { MsgAlert, MsgListItem }",{"ruleId":"637","replacedBy":"638"},{"ruleId":"639","replacedBy":"640"},{"ruleId":"641","severity":1,"message":"642","line":2,"column":38,"nodeType":"643","messageId":"644","endLine":2,"endColumn":48},{"ruleId":"641","severity":1,"message":"645","line":3,"column":10,"nodeType":"643","messageId":"644","endLine":3,"endColumn":15},{"ruleId":"641","severity":1,"message":"646","line":3,"column":49,"nodeType":"643","messageId":"644","endLine":3,"endColumn":52},{"ruleId":"641","severity":1,"message":"647","line":3,"column":54,"nodeType":"643","messageId":"644","endLine":3,"endColumn":57},{"ruleId":"641","severity":1,"message":"648","line":3,"column":59,"nodeType":"643","messageId":"644","endLine":3,"endColumn":62},{"ruleId":"641","severity":1,"message":"649","line":3,"column":64,"nodeType":"643","messageId":"644","endLine":3,"endColumn":69},{"ruleId":"641","severity":1,"message":"650","line":3,"column":71,"nodeType":"643","messageId":"644","endLine":3,"endColumn":80},{"ruleId":"641","severity":1,"message":"651","line":4,"column":18,"nodeType":"643","messageId":"644","endLine":4,"endColumn":29},{"ruleId":"641","severity":1,"message":"652","line":4,"column":31,"nodeType":"643","messageId":"644","endLine":4,"endColumn":41},{"ruleId":"641","severity":1,"message":"653","line":4,"column":43,"nodeType":"643","messageId":"644","endLine":4,"endColumn":53},{"ruleId":"641","severity":1,"message":"654","line":5,"column":56,"nodeType":"643","messageId":"644","endLine":5,"endColumn":63},{"ruleId":"641","severity":1,"message":"655","line":5,"column":87,"nodeType":"643","messageId":"644","endLine":5,"endColumn":98},{"ruleId":"641","severity":1,"message":"656","line":7,"column":8,"nodeType":"643","messageId":"644","endLine":7,"endColumn":11},{"ruleId":"641","severity":1,"message":"657","line":16,"column":8,"nodeType":"643","messageId":"644","endLine":16,"endColumn":21},{"ruleId":"641","severity":1,"message":"658","line":17,"column":8,"nodeType":"643","messageId":"644","endLine":17,"endColumn":17},{"ruleId":"641","severity":1,"message":"659","line":21,"column":7,"nodeType":"643","messageId":"644","endLine":21,"endColumn":14},{"ruleId":"660","severity":1,"message":"661","line":53,"column":6,"nodeType":"662","endLine":53,"endColumn":8,"suggestions":"663"},{"ruleId":"641","severity":1,"message":"664","line":61,"column":10,"nodeType":"643","messageId":"644","endLine":61,"endColumn":14},{"ruleId":"641","severity":1,"message":"665","line":61,"column":16,"nodeType":"643","messageId":"644","endLine":61,"endColumn":23},{"ruleId":"641","severity":1,"message":"666","line":4,"column":17,"nodeType":"643","messageId":"644","endLine":4,"endColumn":21},{"ruleId":"641","severity":1,"message":"667","line":4,"column":23,"nodeType":"643","messageId":"644","endLine":4,"endColumn":34},{"ruleId":"641","severity":1,"message":"668","line":4,"column":44,"nodeType":"643","messageId":"644","endLine":4,"endColumn":55},{"ruleId":"641","severity":1,"message":"669","line":4,"column":57,"nodeType":"643","messageId":"644","endLine":4,"endColumn":60},{"ruleId":"641","severity":1,"message":"646","line":4,"column":62,"nodeType":"643","messageId":"644","endLine":4,"endColumn":65},{"ruleId":"641","severity":1,"message":"649","line":4,"column":77,"nodeType":"643","messageId":"644","endLine":4,"endColumn":82},{"ruleId":"641","severity":1,"message":"670","line":4,"column":84,"nodeType":"643","messageId":"644","endLine":4,"endColumn":94},{"ruleId":"641","severity":1,"message":"671","line":4,"column":96,"nodeType":"643","messageId":"644","endLine":4,"endColumn":104},{"ruleId":"641","severity":1,"message":"672","line":4,"column":106,"nodeType":"643","messageId":"644","endLine":4,"endColumn":120},{"ruleId":"641","severity":1,"message":"673","line":4,"column":133,"nodeType":"643","messageId":"644","endLine":4,"endColumn":138},{"ruleId":"641","severity":1,"message":"674","line":4,"column":157,"nodeType":"643","messageId":"644","endLine":4,"endColumn":165},{"ruleId":"641","severity":1,"message":"675","line":4,"column":167,"nodeType":"643","messageId":"644","endLine":4,"endColumn":172},{"ruleId":"641","severity":1,"message":"676","line":4,"column":174,"nodeType":"643","messageId":"644","endLine":4,"endColumn":178},{"ruleId":"641","severity":1,"message":"677","line":4,"column":180,"nodeType":"643","messageId":"644","endLine":4,"endColumn":189},{"ruleId":"641","severity":1,"message":"678","line":4,"column":191,"nodeType":"643","messageId":"644","endLine":4,"endColumn":199},{"ruleId":"641","severity":1,"message":"679","line":5,"column":10,"nodeType":"643","messageId":"644","endLine":5,"endColumn":16},{"ruleId":"641","severity":1,"message":"651","line":5,"column":18,"nodeType":"643","messageId":"644","endLine":5,"endColumn":29},{"ruleId":"641","severity":1,"message":"652","line":5,"column":31,"nodeType":"643","messageId":"644","endLine":5,"endColumn":41},{"ruleId":"641","severity":1,"message":"653","line":5,"column":43,"nodeType":"643","messageId":"644","endLine":5,"endColumn":53},{"ruleId":"641","severity":1,"message":"680","line":6,"column":27,"nodeType":"643","messageId":"644","endLine":6,"endColumn":33},{"ruleId":"641","severity":1,"message":"681","line":6,"column":35,"nodeType":"643","messageId":"644","endLine":6,"endColumn":41},{"ruleId":"641","severity":1,"message":"682","line":6,"column":43,"nodeType":"643","messageId":"644","endLine":6,"endColumn":48},{"ruleId":"641","severity":1,"message":"683","line":6,"column":50,"nodeType":"643","messageId":"644","endLine":6,"endColumn":54},{"ruleId":"641","severity":1,"message":"654","line":6,"column":56,"nodeType":"643","messageId":"644","endLine":6,"endColumn":63},{"ruleId":"641","severity":1,"message":"684","line":6,"column":65,"nodeType":"643","messageId":"644","endLine":6,"endColumn":73},{"ruleId":"641","severity":1,"message":"655","line":6,"column":87,"nodeType":"643","messageId":"644","endLine":6,"endColumn":98},{"ruleId":"641","severity":1,"message":"685","line":6,"column":100,"nodeType":"643","messageId":"644","endLine":6,"endColumn":109},{"ruleId":"641","severity":1,"message":"686","line":6,"column":111,"nodeType":"643","messageId":"644","endLine":6,"endColumn":124},{"ruleId":"641","severity":1,"message":"656","line":8,"column":8,"nodeType":"643","messageId":"644","endLine":8,"endColumn":11},{"ruleId":"641","severity":1,"message":"687","line":9,"column":10,"nodeType":"643","messageId":"644","endLine":9,"endColumn":25},{"ruleId":"641","severity":1,"message":"688","line":10,"column":10,"nodeType":"643","messageId":"644","endLine":10,"endColumn":29},{"ruleId":"641","severity":1,"message":"689","line":11,"column":10,"nodeType":"643","messageId":"644","endLine":11,"endColumn":19},{"ruleId":"641","severity":1,"message":"690","line":12,"column":10,"nodeType":"643","messageId":"644","endLine":12,"endColumn":18},{"ruleId":"641","severity":1,"message":"691","line":12,"column":20,"nodeType":"643","messageId":"644","endLine":12,"endColumn":31},{"ruleId":"641","severity":1,"message":"692","line":12,"column":33,"nodeType":"643","messageId":"644","endLine":12,"endColumn":41},{"ruleId":"641","severity":1,"message":"693","line":13,"column":10,"nodeType":"643","messageId":"644","endLine":13,"endColumn":19},{"ruleId":"641","severity":1,"message":"694","line":21,"column":10,"nodeType":"643","messageId":"644","endLine":21,"endColumn":15},{"ruleId":"641","severity":1,"message":"695","line":21,"column":17,"nodeType":"643","messageId":"644","endLine":21,"endColumn":25},{"ruleId":"641","severity":1,"message":"696","line":22,"column":10,"nodeType":"643","messageId":"644","endLine":22,"endColumn":13},{"ruleId":"660","severity":1,"message":"697","line":29,"column":13,"nodeType":"698","endLine":43,"endColumn":4},{"ruleId":"660","severity":1,"message":"697","line":45,"column":13,"nodeType":"698","endLine":66,"endColumn":4},{"ruleId":"660","severity":1,"message":"699","line":66,"column":6,"nodeType":"662","endLine":66,"endColumn":8,"suggestions":"700"},{"ruleId":"641","severity":1,"message":"645","line":4,"column":54,"nodeType":"643","messageId":"644","endLine":4,"endColumn":59},{"ruleId":"641","severity":1,"message":"676","line":5,"column":10,"nodeType":"643","messageId":"644","endLine":5,"endColumn":14},{"ruleId":"641","severity":1,"message":"679","line":5,"column":30,"nodeType":"643","messageId":"644","endLine":5,"endColumn":36},{"ruleId":"641","severity":1,"message":"651","line":5,"column":38,"nodeType":"643","messageId":"644","endLine":5,"endColumn":49},{"ruleId":"641","severity":1,"message":"652","line":5,"column":51,"nodeType":"643","messageId":"644","endLine":5,"endColumn":61},{"ruleId":"641","severity":1,"message":"653","line":5,"column":63,"nodeType":"643","messageId":"644","endLine":5,"endColumn":73},{"ruleId":"641","severity":1,"message":"683","line":6,"column":50,"nodeType":"643","messageId":"644","endLine":6,"endColumn":54},{"ruleId":"660","severity":1,"message":"701","line":181,"column":6,"nodeType":"662","endLine":181,"endColumn":8,"suggestions":"702"},{"ruleId":"660","severity":1,"message":"703","line":187,"column":6,"nodeType":"662","endLine":187,"endColumn":20,"suggestions":"704"},{"ruleId":"660","severity":1,"message":"705","line":191,"column":6,"nodeType":"662","endLine":191,"endColumn":26,"suggestions":"706"},{"ruleId":"660","severity":1,"message":"707","line":200,"column":6,"nodeType":"662","endLine":200,"endColumn":20,"suggestions":"708"},{"ruleId":"709","severity":1,"message":"710","line":418,"column":52,"nodeType":"711","messageId":"712","endLine":418,"endColumn":54},{"ruleId":"641","severity":1,"message":"713","line":444,"column":11,"nodeType":"643","messageId":"644","endLine":444,"endColumn":15},{"ruleId":"641","severity":1,"message":"714","line":444,"column":22,"nodeType":"643","messageId":"644","endLine":444,"endColumn":28},{"ruleId":"660","severity":1,"message":"715","line":455,"column":6,"nodeType":"662","endLine":455,"endColumn":8,"suggestions":"716"},{"ruleId":"641","severity":1,"message":"717","line":463,"column":11,"nodeType":"643","messageId":"644","endLine":463,"endColumn":16},{"ruleId":"709","severity":1,"message":"710","line":470,"column":74,"nodeType":"711","messageId":"712","endLine":470,"endColumn":76},{"ruleId":"660","severity":1,"message":"718","line":577,"column":6,"nodeType":"662","endLine":577,"endColumn":8,"suggestions":"719"},{"ruleId":"660","severity":1,"message":"718","line":590,"column":6,"nodeType":"662","endLine":590,"endColumn":8,"suggestions":"720"},{"ruleId":"641","severity":1,"message":"713","line":701,"column":11,"nodeType":"643","messageId":"644","endLine":701,"endColumn":15},{"ruleId":"641","severity":1,"message":"721","line":701,"column":17,"nodeType":"643","messageId":"644","endLine":701,"endColumn":20},{"ruleId":"641","severity":1,"message":"714","line":701,"column":22,"nodeType":"643","messageId":"644","endLine":701,"endColumn":28},{"ruleId":"641","severity":1,"message":"722","line":702,"column":9,"nodeType":"643","messageId":"644","endLine":702,"endColumn":16},{"ruleId":"660","severity":1,"message":"715","line":718,"column":6,"nodeType":"662","endLine":718,"endColumn":22,"suggestions":"723"},{"ruleId":"660","severity":1,"message":"724","line":718,"column":7,"nodeType":"725","endLine":718,"endColumn":21},{"ruleId":"641","severity":1,"message":"713","line":814,"column":11,"nodeType":"643","messageId":"644","endLine":814,"endColumn":15},{"ruleId":"641","severity":1,"message":"721","line":814,"column":17,"nodeType":"643","messageId":"644","endLine":814,"endColumn":20},{"ruleId":"641","severity":1,"message":"714","line":814,"column":22,"nodeType":"643","messageId":"644","endLine":814,"endColumn":28},{"ruleId":"641","severity":1,"message":"722","line":815,"column":9,"nodeType":"643","messageId":"644","endLine":815,"endColumn":16},{"ruleId":"709","severity":1,"message":"726","line":835,"column":26,"nodeType":"711","messageId":"712","endLine":835,"endColumn":28},{"ruleId":"709","severity":1,"message":"710","line":875,"column":12,"nodeType":"711","messageId":"712","endLine":875,"endColumn":14},{"ruleId":"660","severity":1,"message":"727","line":892,"column":6,"nodeType":"662","endLine":892,"endColumn":17,"suggestions":"728"},{"ruleId":"709","severity":1,"message":"726","line":1088,"column":91,"nodeType":"711","messageId":"712","endLine":1088,"endColumn":93},{"ruleId":"641","severity":1,"message":"713","line":1144,"column":11,"nodeType":"643","messageId":"644","endLine":1144,"endColumn":15},{"ruleId":"641","severity":1,"message":"721","line":1144,"column":17,"nodeType":"643","messageId":"644","endLine":1144,"endColumn":20},{"ruleId":"641","severity":1,"message":"714","line":1144,"column":22,"nodeType":"643","messageId":"644","endLine":1144,"endColumn":28},{"ruleId":"641","severity":1,"message":"729","line":1145,"column":9,"nodeType":"643","messageId":"644","endLine":1145,"endColumn":17},{"ruleId":"641","severity":1,"message":"730","line":1146,"column":23,"nodeType":"643","messageId":"644","endLine":1146,"endColumn":37},{"ruleId":"641","severity":1,"message":"731","line":2,"column":10,"nodeType":"643","messageId":"644","endLine":2,"endColumn":18},{"ruleId":"641","severity":1,"message":"645","line":3,"column":16,"nodeType":"643","messageId":"644","endLine":3,"endColumn":21},{"ruleId":"641","severity":1,"message":"666","line":3,"column":23,"nodeType":"643","messageId":"644","endLine":3,"endColumn":27},{"ruleId":"641","severity":1,"message":"667","line":3,"column":29,"nodeType":"643","messageId":"644","endLine":3,"endColumn":40},{"ruleId":"641","severity":1,"message":"647","line":3,"column":60,"nodeType":"643","messageId":"644","endLine":3,"endColumn":63},{"ruleId":"641","severity":1,"message":"648","line":3,"column":65,"nodeType":"643","messageId":"644","endLine":3,"endColumn":68},{"ruleId":"641","severity":1,"message":"649","line":3,"column":70,"nodeType":"643","messageId":"644","endLine":3,"endColumn":75},{"ruleId":"641","severity":1,"message":"650","line":3,"column":77,"nodeType":"643","messageId":"644","endLine":3,"endColumn":86},{"ruleId":"641","severity":1,"message":"679","line":4,"column":10,"nodeType":"643","messageId":"644","endLine":4,"endColumn":16},{"ruleId":"641","severity":1,"message":"651","line":4,"column":18,"nodeType":"643","messageId":"644","endLine":4,"endColumn":29},{"ruleId":"641","severity":1,"message":"652","line":4,"column":31,"nodeType":"643","messageId":"644","endLine":4,"endColumn":41},{"ruleId":"641","severity":1,"message":"653","line":4,"column":43,"nodeType":"643","messageId":"644","endLine":4,"endColumn":53},{"ruleId":"641","severity":1,"message":"680","line":5,"column":27,"nodeType":"643","messageId":"644","endLine":5,"endColumn":33},{"ruleId":"641","severity":1,"message":"681","line":5,"column":35,"nodeType":"643","messageId":"644","endLine":5,"endColumn":41},{"ruleId":"641","severity":1,"message":"682","line":5,"column":43,"nodeType":"643","messageId":"644","endLine":5,"endColumn":48},{"ruleId":"641","severity":1,"message":"683","line":5,"column":50,"nodeType":"643","messageId":"644","endLine":5,"endColumn":54},{"ruleId":"641","severity":1,"message":"654","line":5,"column":56,"nodeType":"643","messageId":"644","endLine":5,"endColumn":63},{"ruleId":"641","severity":1,"message":"684","line":5,"column":65,"nodeType":"643","messageId":"644","endLine":5,"endColumn":73},{"ruleId":"641","severity":1,"message":"731","line":1,"column":10,"nodeType":"643","messageId":"644","endLine":1,"endColumn":18},{"ruleId":"641","severity":1,"message":"732","line":1,"column":20,"nodeType":"643","messageId":"644","endLine":1,"endColumn":29},{"ruleId":"641","severity":1,"message":"668","line":2,"column":10,"nodeType":"643","messageId":"644","endLine":2,"endColumn":21},{"ruleId":"641","severity":1,"message":"733","line":2,"column":23,"nodeType":"643","messageId":"644","endLine":2,"endColumn":35},{"ruleId":"641","severity":1,"message":"734","line":2,"column":37,"nodeType":"643","messageId":"644","endLine":2,"endColumn":46},{"ruleId":"641","severity":1,"message":"735","line":2,"column":48,"nodeType":"643","messageId":"644","endLine":2,"endColumn":52},{"ruleId":"641","severity":1,"message":"645","line":2,"column":54,"nodeType":"643","messageId":"644","endLine":2,"endColumn":59},{"ruleId":"641","severity":1,"message":"666","line":2,"column":61,"nodeType":"643","messageId":"644","endLine":2,"endColumn":65},{"ruleId":"641","severity":1,"message":"667","line":2,"column":67,"nodeType":"643","messageId":"644","endLine":2,"endColumn":78},{"ruleId":"641","severity":1,"message":"736","line":2,"column":80,"nodeType":"643","messageId":"644","endLine":2,"endColumn":86},{"ruleId":"641","severity":1,"message":"669","line":2,"column":88,"nodeType":"643","messageId":"644","endLine":2,"endColumn":91},{"ruleId":"641","severity":1,"message":"646","line":2,"column":93,"nodeType":"643","messageId":"644","endLine":2,"endColumn":96},{"ruleId":"641","severity":1,"message":"647","line":2,"column":98,"nodeType":"643","messageId":"644","endLine":2,"endColumn":101},{"ruleId":"641","severity":1,"message":"648","line":2,"column":103,"nodeType":"643","messageId":"644","endLine":2,"endColumn":106},{"ruleId":"641","severity":1,"message":"649","line":2,"column":108,"nodeType":"643","messageId":"644","endLine":2,"endColumn":113},{"ruleId":"641","severity":1,"message":"650","line":2,"column":115,"nodeType":"643","messageId":"644","endLine":2,"endColumn":124},{"ruleId":"641","severity":1,"message":"670","line":2,"column":126,"nodeType":"643","messageId":"644","endLine":2,"endColumn":136},{"ruleId":"641","severity":1,"message":"676","line":3,"column":10,"nodeType":"643","messageId":"644","endLine":3,"endColumn":14},{"ruleId":"641","severity":1,"message":"673","line":3,"column":16,"nodeType":"643","messageId":"644","endLine":3,"endColumn":21},{"ruleId":"641","severity":1,"message":"675","line":3,"column":23,"nodeType":"643","messageId":"644","endLine":3,"endColumn":28},{"ruleId":"641","severity":1,"message":"679","line":3,"column":30,"nodeType":"643","messageId":"644","endLine":3,"endColumn":36},{"ruleId":"641","severity":1,"message":"651","line":3,"column":38,"nodeType":"643","messageId":"644","endLine":3,"endColumn":49},{"ruleId":"641","severity":1,"message":"652","line":3,"column":51,"nodeType":"643","messageId":"644","endLine":3,"endColumn":61},{"ruleId":"641","severity":1,"message":"653","line":3,"column":63,"nodeType":"643","messageId":"644","endLine":3,"endColumn":73},{"ruleId":"641","severity":1,"message":"680","line":4,"column":27,"nodeType":"643","messageId":"644","endLine":4,"endColumn":33},{"ruleId":"641","severity":1,"message":"681","line":4,"column":35,"nodeType":"643","messageId":"644","endLine":4,"endColumn":41},{"ruleId":"641","severity":1,"message":"682","line":4,"column":43,"nodeType":"643","messageId":"644","endLine":4,"endColumn":48},{"ruleId":"641","severity":1,"message":"683","line":4,"column":50,"nodeType":"643","messageId":"644","endLine":4,"endColumn":54},{"ruleId":"641","severity":1,"message":"654","line":4,"column":56,"nodeType":"643","messageId":"644","endLine":4,"endColumn":63},{"ruleId":"641","severity":1,"message":"684","line":4,"column":65,"nodeType":"643","messageId":"644","endLine":4,"endColumn":73},{"ruleId":"641","severity":1,"message":"685","line":4,"column":75,"nodeType":"643","messageId":"644","endLine":4,"endColumn":84},{"ruleId":"641","severity":1,"message":"686","line":4,"column":86,"nodeType":"643","messageId":"644","endLine":4,"endColumn":99},{"ruleId":"641","severity":1,"message":"737","line":4,"column":101,"nodeType":"643","messageId":"644","endLine":4,"endColumn":111},{"ruleId":"641","severity":1,"message":"655","line":4,"column":113,"nodeType":"643","messageId":"644","endLine":4,"endColumn":124},{"ruleId":"641","severity":1,"message":"658","line":5,"column":8,"nodeType":"643","messageId":"644","endLine":5,"endColumn":17},{"ruleId":"641","severity":1,"message":"656","line":6,"column":8,"nodeType":"643","messageId":"644","endLine":6,"endColumn":11},{"ruleId":"641","severity":1,"message":"738","line":7,"column":8,"nodeType":"643","messageId":"644","endLine":7,"endColumn":13},{"ruleId":"637","replacedBy":"739"},{"ruleId":"639","replacedBy":"740"},{"ruleId":"641","severity":1,"message":"731","line":1,"column":10,"nodeType":"643","messageId":"644","endLine":1,"endColumn":18},{"ruleId":"641","severity":1,"message":"668","line":2,"column":10,"nodeType":"643","messageId":"644","endLine":2,"endColumn":21},{"ruleId":"641","severity":1,"message":"733","line":2,"column":23,"nodeType":"643","messageId":"644","endLine":2,"endColumn":35},{"ruleId":"641","severity":1,"message":"734","line":2,"column":37,"nodeType":"643","messageId":"644","endLine":2,"endColumn":46},{"ruleId":"641","severity":1,"message":"735","line":2,"column":48,"nodeType":"643","messageId":"644","endLine":2,"endColumn":52},{"ruleId":"641","severity":1,"message":"645","line":2,"column":54,"nodeType":"643","messageId":"644","endLine":2,"endColumn":59},{"ruleId":"641","severity":1,"message":"666","line":2,"column":61,"nodeType":"643","messageId":"644","endLine":2,"endColumn":65},{"ruleId":"641","severity":1,"message":"667","line":2,"column":67,"nodeType":"643","messageId":"644","endLine":2,"endColumn":78},{"ruleId":"641","severity":1,"message":"736","line":2,"column":80,"nodeType":"643","messageId":"644","endLine":2,"endColumn":86},{"ruleId":"641","severity":1,"message":"646","line":2,"column":93,"nodeType":"643","messageId":"644","endLine":2,"endColumn":96},{"ruleId":"641","severity":1,"message":"647","line":2,"column":98,"nodeType":"643","messageId":"644","endLine":2,"endColumn":101},{"ruleId":"641","severity":1,"message":"648","line":2,"column":103,"nodeType":"643","messageId":"644","endLine":2,"endColumn":106},{"ruleId":"641","severity":1,"message":"649","line":2,"column":108,"nodeType":"643","messageId":"644","endLine":2,"endColumn":113},{"ruleId":"641","severity":1,"message":"650","line":2,"column":115,"nodeType":"643","messageId":"644","endLine":2,"endColumn":124},{"ruleId":"641","severity":1,"message":"670","line":2,"column":126,"nodeType":"643","messageId":"644","endLine":2,"endColumn":136},{"ruleId":"641","severity":1,"message":"676","line":3,"column":10,"nodeType":"643","messageId":"644","endLine":3,"endColumn":14},{"ruleId":"641","severity":1,"message":"673","line":3,"column":16,"nodeType":"643","messageId":"644","endLine":3,"endColumn":21},{"ruleId":"641","severity":1,"message":"675","line":3,"column":23,"nodeType":"643","messageId":"644","endLine":3,"endColumn":28},{"ruleId":"641","severity":1,"message":"651","line":3,"column":38,"nodeType":"643","messageId":"644","endLine":3,"endColumn":49},{"ruleId":"641","severity":1,"message":"653","line":3,"column":63,"nodeType":"643","messageId":"644","endLine":3,"endColumn":73},{"ruleId":"641","severity":1,"message":"680","line":4,"column":27,"nodeType":"643","messageId":"644","endLine":4,"endColumn":33},{"ruleId":"641","severity":1,"message":"681","line":4,"column":35,"nodeType":"643","messageId":"644","endLine":4,"endColumn":41},{"ruleId":"641","severity":1,"message":"682","line":4,"column":43,"nodeType":"643","messageId":"644","endLine":4,"endColumn":48},{"ruleId":"641","severity":1,"message":"683","line":4,"column":50,"nodeType":"643","messageId":"644","endLine":4,"endColumn":54},{"ruleId":"641","severity":1,"message":"654","line":4,"column":56,"nodeType":"643","messageId":"644","endLine":4,"endColumn":63},{"ruleId":"641","severity":1,"message":"684","line":4,"column":65,"nodeType":"643","messageId":"644","endLine":4,"endColumn":73},{"ruleId":"641","severity":1,"message":"685","line":4,"column":75,"nodeType":"643","messageId":"644","endLine":4,"endColumn":84},{"ruleId":"641","severity":1,"message":"686","line":4,"column":86,"nodeType":"643","messageId":"644","endLine":4,"endColumn":99},{"ruleId":"641","severity":1,"message":"658","line":5,"column":8,"nodeType":"643","messageId":"644","endLine":5,"endColumn":17},{"ruleId":"641","severity":1,"message":"738","line":7,"column":8,"nodeType":"643","messageId":"644","endLine":7,"endColumn":13},{"ruleId":"641","severity":1,"message":"741","line":10,"column":7,"nodeType":"643","messageId":"644","endLine":10,"endColumn":13},{"ruleId":"660","severity":1,"message":"661","line":38,"column":6,"nodeType":"662","endLine":38,"endColumn":16,"suggestions":"742"},{"ruleId":"641","severity":1,"message":"642","line":2,"column":31,"nodeType":"643","messageId":"644","endLine":2,"endColumn":41},{"ruleId":"641","severity":1,"message":"645","line":3,"column":10,"nodeType":"643","messageId":"644","endLine":3,"endColumn":15},{"ruleId":"641","severity":1,"message":"646","line":3,"column":49,"nodeType":"643","messageId":"644","endLine":3,"endColumn":52},{"ruleId":"641","severity":1,"message":"647","line":3,"column":54,"nodeType":"643","messageId":"644","endLine":3,"endColumn":57},{"ruleId":"641","severity":1,"message":"648","line":3,"column":59,"nodeType":"643","messageId":"644","endLine":3,"endColumn":62},{"ruleId":"641","severity":1,"message":"649","line":3,"column":64,"nodeType":"643","messageId":"644","endLine":3,"endColumn":69},{"ruleId":"641","severity":1,"message":"650","line":3,"column":71,"nodeType":"643","messageId":"644","endLine":3,"endColumn":80},{"ruleId":"641","severity":1,"message":"673","line":3,"column":89,"nodeType":"643","messageId":"644","endLine":3,"endColumn":94},{"ruleId":"641","severity":1,"message":"651","line":4,"column":18,"nodeType":"643","messageId":"644","endLine":4,"endColumn":29},{"ruleId":"641","severity":1,"message":"652","line":4,"column":31,"nodeType":"643","messageId":"644","endLine":4,"endColumn":41},{"ruleId":"641","severity":1,"message":"653","line":4,"column":43,"nodeType":"643","messageId":"644","endLine":4,"endColumn":53},{"ruleId":"641","severity":1,"message":"681","line":5,"column":35,"nodeType":"643","messageId":"644","endLine":5,"endColumn":41},{"ruleId":"641","severity":1,"message":"682","line":5,"column":43,"nodeType":"643","messageId":"644","endLine":5,"endColumn":48},{"ruleId":"641","severity":1,"message":"683","line":5,"column":50,"nodeType":"643","messageId":"644","endLine":5,"endColumn":54},{"ruleId":"641","severity":1,"message":"654","line":5,"column":56,"nodeType":"643","messageId":"644","endLine":5,"endColumn":63},{"ruleId":"641","severity":1,"message":"684","line":5,"column":65,"nodeType":"643","messageId":"644","endLine":5,"endColumn":73},{"ruleId":"641","severity":1,"message":"655","line":5,"column":87,"nodeType":"643","messageId":"644","endLine":5,"endColumn":98},{"ruleId":"641","severity":1,"message":"656","line":6,"column":8,"nodeType":"643","messageId":"644","endLine":6,"endColumn":11},{"ruleId":"641","severity":1,"message":"743","line":8,"column":8,"nodeType":"643","messageId":"644","endLine":8,"endColumn":11},{"ruleId":"660","severity":1,"message":"724","line":21,"column":7,"nodeType":"744","endLine":21,"endColumn":42},{"ruleId":"660","severity":1,"message":"697","line":23,"column":13,"nodeType":"698","endLine":38,"endColumn":4},{"ruleId":"641","severity":1,"message":"731","line":2,"column":10,"nodeType":"643","messageId":"644","endLine":2,"endColumn":18},{"ruleId":"641","severity":1,"message":"645","line":3,"column":10,"nodeType":"643","messageId":"644","endLine":3,"endColumn":15},{"ruleId":"641","severity":1,"message":"666","line":3,"column":17,"nodeType":"643","messageId":"644","endLine":3,"endColumn":21},{"ruleId":"641","severity":1,"message":"667","line":3,"column":23,"nodeType":"643","messageId":"644","endLine":3,"endColumn":34},{"ruleId":"641","severity":1,"message":"736","line":3,"column":36,"nodeType":"643","messageId":"644","endLine":3,"endColumn":42},{"ruleId":"641","severity":1,"message":"646","line":3,"column":49,"nodeType":"643","messageId":"644","endLine":3,"endColumn":52},{"ruleId":"641","severity":1,"message":"647","line":3,"column":54,"nodeType":"643","messageId":"644","endLine":3,"endColumn":57},{"ruleId":"641","severity":1,"message":"648","line":3,"column":59,"nodeType":"643","messageId":"644","endLine":3,"endColumn":62},{"ruleId":"641","severity":1,"message":"649","line":3,"column":70,"nodeType":"643","messageId":"644","endLine":3,"endColumn":75},{"ruleId":"641","severity":1,"message":"650","line":3,"column":77,"nodeType":"643","messageId":"644","endLine":3,"endColumn":86},{"ruleId":"641","severity":1,"message":"679","line":4,"column":10,"nodeType":"643","messageId":"644","endLine":4,"endColumn":16},{"ruleId":"641","severity":1,"message":"651","line":4,"column":18,"nodeType":"643","messageId":"644","endLine":4,"endColumn":29},{"ruleId":"641","severity":1,"message":"652","line":4,"column":31,"nodeType":"643","messageId":"644","endLine":4,"endColumn":41},{"ruleId":"641","severity":1,"message":"653","line":4,"column":43,"nodeType":"643","messageId":"644","endLine":4,"endColumn":53},{"ruleId":"641","severity":1,"message":"683","line":5,"column":50,"nodeType":"643","messageId":"644","endLine":5,"endColumn":54},{"ruleId":"641","severity":1,"message":"684","line":5,"column":65,"nodeType":"643","messageId":"644","endLine":5,"endColumn":73},{"ruleId":"641","severity":1,"message":"745","line":7,"column":10,"nodeType":"643","messageId":"644","endLine":7,"endColumn":21},{"ruleId":"641","severity":1,"message":"746","line":7,"column":46,"nodeType":"643","messageId":"644","endLine":7,"endColumn":54},{"ruleId":"641","severity":1,"message":"747","line":8,"column":9,"nodeType":"643","messageId":"644","endLine":8,"endColumn":22},{"ruleId":"641","severity":1,"message":"748","line":8,"column":24,"nodeType":"643","messageId":"644","endLine":8,"endColumn":41},{"ruleId":"641","severity":1,"message":"713","line":15,"column":16,"nodeType":"643","messageId":"644","endLine":15,"endColumn":20},{"ruleId":"641","severity":1,"message":"714","line":15,"column":22,"nodeType":"643","messageId":"644","endLine":15,"endColumn":28},{"ruleId":"641","severity":1,"message":"646","line":4,"column":62,"nodeType":"643","messageId":"644","endLine":4,"endColumn":65},{"ruleId":"641","severity":1,"message":"733","line":4,"column":77,"nodeType":"643","messageId":"644","endLine":4,"endColumn":89},{"ruleId":"641","severity":1,"message":"649","line":4,"column":98,"nodeType":"643","messageId":"644","endLine":4,"endColumn":103},{"ruleId":"641","severity":1,"message":"673","line":4,"column":154,"nodeType":"643","messageId":"644","endLine":4,"endColumn":159},{"ruleId":"641","severity":1,"message":"749","line":4,"column":167,"nodeType":"643","messageId":"644","endLine":4,"endColumn":176},{"ruleId":"641","severity":1,"message":"674","line":4,"column":178,"nodeType":"643","messageId":"644","endLine":4,"endColumn":186},{"ruleId":"641","severity":1,"message":"676","line":4,"column":195,"nodeType":"643","messageId":"644","endLine":4,"endColumn":199},{"ruleId":"641","severity":1,"message":"677","line":4,"column":201,"nodeType":"643","messageId":"644","endLine":4,"endColumn":210},{"ruleId":"641","severity":1,"message":"750","line":4,"column":212,"nodeType":"643","messageId":"644","endLine":4,"endColumn":225},{"ruleId":"641","severity":1,"message":"679","line":5,"column":10,"nodeType":"643","messageId":"644","endLine":5,"endColumn":16},{"ruleId":"641","severity":1,"message":"651","line":5,"column":18,"nodeType":"643","messageId":"644","endLine":5,"endColumn":29},{"ruleId":"641","severity":1,"message":"652","line":5,"column":31,"nodeType":"643","messageId":"644","endLine":5,"endColumn":41},{"ruleId":"641","severity":1,"message":"653","line":5,"column":43,"nodeType":"643","messageId":"644","endLine":5,"endColumn":53},{"ruleId":"641","severity":1,"message":"683","line":6,"column":50,"nodeType":"643","messageId":"644","endLine":6,"endColumn":54},{"ruleId":"641","severity":1,"message":"655","line":6,"column":87,"nodeType":"643","messageId":"644","endLine":6,"endColumn":98},{"ruleId":"641","severity":1,"message":"689","line":11,"column":10,"nodeType":"643","messageId":"644","endLine":11,"endColumn":19},{"ruleId":"641","severity":1,"message":"722","line":28,"column":9,"nodeType":"643","messageId":"644","endLine":28,"endColumn":16},{"ruleId":"709","severity":1,"message":"726","line":83,"column":36,"nodeType":"711","messageId":"712","endLine":83,"endColumn":38},{"ruleId":"709","severity":1,"message":"710","line":108,"column":14,"nodeType":"711","messageId":"712","endLine":108,"endColumn":16},{"ruleId":"641","severity":1,"message":"713","line":117,"column":18,"nodeType":"643","messageId":"644","endLine":117,"endColumn":22},{"ruleId":"641","severity":1,"message":"714","line":117,"column":24,"nodeType":"643","messageId":"644","endLine":117,"endColumn":30},{"ruleId":"660","severity":1,"message":"727","line":135,"column":8,"nodeType":"662","endLine":135,"endColumn":26,"suggestions":"751"},{"ruleId":"660","severity":1,"message":"727","line":139,"column":8,"nodeType":"662","endLine":139,"endColumn":19,"suggestions":"752"},{"ruleId":"709","severity":1,"message":"710","line":259,"column":43,"nodeType":"711","messageId":"712","endLine":259,"endColumn":45},{"ruleId":"709","severity":1,"message":"710","line":276,"column":54,"nodeType":"711","messageId":"712","endLine":276,"endColumn":56},{"ruleId":"709","severity":1,"message":"710","line":299,"column":54,"nodeType":"711","messageId":"712","endLine":299,"endColumn":56},{"ruleId":"641","severity":1,"message":"753","line":431,"column":14,"nodeType":"643","messageId":"644","endLine":431,"endColumn":19},{"ruleId":"641","severity":1,"message":"696","line":439,"column":10,"nodeType":"643","messageId":"644","endLine":439,"endColumn":13},{"ruleId":"660","severity":1,"message":"697","line":446,"column":13,"nodeType":"698","endLine":456,"endColumn":4},{"ruleId":"641","severity":1,"message":"731","line":2,"column":10,"nodeType":"643","messageId":"644","endLine":2,"endColumn":18},{"ruleId":"641","severity":1,"message":"645","line":3,"column":10,"nodeType":"643","messageId":"644","endLine":3,"endColumn":15},{"ruleId":"641","severity":1,"message":"666","line":3,"column":17,"nodeType":"643","messageId":"644","endLine":3,"endColumn":21},{"ruleId":"641","severity":1,"message":"667","line":3,"column":23,"nodeType":"643","messageId":"644","endLine":3,"endColumn":34},{"ruleId":"641","severity":1,"message":"736","line":3,"column":36,"nodeType":"643","messageId":"644","endLine":3,"endColumn":42},{"ruleId":"641","severity":1,"message":"669","line":3,"column":44,"nodeType":"643","messageId":"644","endLine":3,"endColumn":47},{"ruleId":"641","severity":1,"message":"646","line":3,"column":49,"nodeType":"643","messageId":"644","endLine":3,"endColumn":52},{"ruleId":"641","severity":1,"message":"647","line":3,"column":54,"nodeType":"643","messageId":"644","endLine":3,"endColumn":57},{"ruleId":"641","severity":1,"message":"648","line":3,"column":59,"nodeType":"643","messageId":"644","endLine":3,"endColumn":62},{"ruleId":"641","severity":1,"message":"649","line":3,"column":64,"nodeType":"643","messageId":"644","endLine":3,"endColumn":69},{"ruleId":"641","severity":1,"message":"650","line":3,"column":71,"nodeType":"643","messageId":"644","endLine":3,"endColumn":80},{"ruleId":"641","severity":1,"message":"679","line":4,"column":10,"nodeType":"643","messageId":"644","endLine":4,"endColumn":16},{"ruleId":"641","severity":1,"message":"651","line":4,"column":18,"nodeType":"643","messageId":"644","endLine":4,"endColumn":29},{"ruleId":"641","severity":1,"message":"652","line":4,"column":31,"nodeType":"643","messageId":"644","endLine":4,"endColumn":41},{"ruleId":"641","severity":1,"message":"653","line":4,"column":43,"nodeType":"643","messageId":"644","endLine":4,"endColumn":53},{"ruleId":"641","severity":1,"message":"680","line":5,"column":27,"nodeType":"643","messageId":"644","endLine":5,"endColumn":33},{"ruleId":"641","severity":1,"message":"681","line":5,"column":35,"nodeType":"643","messageId":"644","endLine":5,"endColumn":41},{"ruleId":"641","severity":1,"message":"682","line":5,"column":43,"nodeType":"643","messageId":"644","endLine":5,"endColumn":48},{"ruleId":"641","severity":1,"message":"683","line":5,"column":50,"nodeType":"643","messageId":"644","endLine":5,"endColumn":54},{"ruleId":"641","severity":1,"message":"654","line":5,"column":56,"nodeType":"643","messageId":"644","endLine":5,"endColumn":63},{"ruleId":"641","severity":1,"message":"684","line":5,"column":65,"nodeType":"643","messageId":"644","endLine":5,"endColumn":73},{"ruleId":"641","severity":1,"message":"645","line":4,"column":10,"nodeType":"643","messageId":"644","endLine":4,"endColumn":15},{"ruleId":"641","severity":1,"message":"666","line":4,"column":17,"nodeType":"643","messageId":"644","endLine":4,"endColumn":21},{"ruleId":"641","severity":1,"message":"667","line":4,"column":23,"nodeType":"643","messageId":"644","endLine":4,"endColumn":34},{"ruleId":"641","severity":1,"message":"736","line":4,"column":36,"nodeType":"643","messageId":"644","endLine":4,"endColumn":42},{"ruleId":"641","severity":1,"message":"668","line":4,"column":44,"nodeType":"643","messageId":"644","endLine":4,"endColumn":55},{"ruleId":"641","severity":1,"message":"646","line":4,"column":62,"nodeType":"643","messageId":"644","endLine":4,"endColumn":65},{"ruleId":"641","severity":1,"message":"649","line":4,"column":77,"nodeType":"643","messageId":"644","endLine":4,"endColumn":82},{"ruleId":"641","severity":1,"message":"670","line":4,"column":84,"nodeType":"643","messageId":"644","endLine":4,"endColumn":94},{"ruleId":"641","severity":1,"message":"671","line":4,"column":96,"nodeType":"643","messageId":"644","endLine":4,"endColumn":104},{"ruleId":"641","severity":1,"message":"672","line":4,"column":106,"nodeType":"643","messageId":"644","endLine":4,"endColumn":120},{"ruleId":"641","severity":1,"message":"650","line":4,"column":122,"nodeType":"643","messageId":"644","endLine":4,"endColumn":131},{"ruleId":"641","severity":1,"message":"673","line":4,"column":133,"nodeType":"643","messageId":"644","endLine":4,"endColumn":138},{"ruleId":"641","severity":1,"message":"749","line":4,"column":146,"nodeType":"643","messageId":"644","endLine":4,"endColumn":155},{"ruleId":"641","severity":1,"message":"674","line":4,"column":157,"nodeType":"643","messageId":"644","endLine":4,"endColumn":165},{"ruleId":"641","severity":1,"message":"675","line":4,"column":167,"nodeType":"643","messageId":"644","endLine":4,"endColumn":172},{"ruleId":"641","severity":1,"message":"676","line":4,"column":174,"nodeType":"643","messageId":"644","endLine":4,"endColumn":178},{"ruleId":"641","severity":1,"message":"677","line":4,"column":180,"nodeType":"643","messageId":"644","endLine":4,"endColumn":189},{"ruleId":"641","severity":1,"message":"750","line":4,"column":191,"nodeType":"643","messageId":"644","endLine":4,"endColumn":204},{"ruleId":"641","severity":1,"message":"679","line":5,"column":10,"nodeType":"643","messageId":"644","endLine":5,"endColumn":16},{"ruleId":"641","severity":1,"message":"651","line":5,"column":18,"nodeType":"643","messageId":"644","endLine":5,"endColumn":29},{"ruleId":"641","severity":1,"message":"652","line":5,"column":31,"nodeType":"643","messageId":"644","endLine":5,"endColumn":41},{"ruleId":"641","severity":1,"message":"653","line":5,"column":43,"nodeType":"643","messageId":"644","endLine":5,"endColumn":53},{"ruleId":"641","severity":1,"message":"683","line":6,"column":50,"nodeType":"643","messageId":"644","endLine":6,"endColumn":54},{"ruleId":"641","severity":1,"message":"655","line":6,"column":87,"nodeType":"643","messageId":"644","endLine":6,"endColumn":98},{"ruleId":"641","severity":1,"message":"687","line":9,"column":10,"nodeType":"643","messageId":"644","endLine":9,"endColumn":25},{"ruleId":"641","severity":1,"message":"688","line":10,"column":10,"nodeType":"643","messageId":"644","endLine":10,"endColumn":29},{"ruleId":"641","severity":1,"message":"689","line":11,"column":10,"nodeType":"643","messageId":"644","endLine":11,"endColumn":19},{"ruleId":"641","severity":1,"message":"754","line":11,"column":21,"nodeType":"643","messageId":"644","endLine":11,"endColumn":30},{"ruleId":"641","severity":1,"message":"690","line":12,"column":10,"nodeType":"643","messageId":"644","endLine":12,"endColumn":18},{"ruleId":"641","severity":1,"message":"691","line":12,"column":20,"nodeType":"643","messageId":"644","endLine":12,"endColumn":31},{"ruleId":"641","severity":1,"message":"692","line":12,"column":33,"nodeType":"643","messageId":"644","endLine":12,"endColumn":41},{"ruleId":"641","severity":1,"message":"755","line":13,"column":10,"nodeType":"643","messageId":"644","endLine":13,"endColumn":22},{"ruleId":"641","severity":1,"message":"756","line":13,"column":46,"nodeType":"643","messageId":"644","endLine":13,"endColumn":54},{"ruleId":"641","severity":1,"message":"757","line":13,"column":56,"nodeType":"643","messageId":"644","endLine":13,"endColumn":75},{"ruleId":"641","severity":1,"message":"758","line":18,"column":7,"nodeType":"643","messageId":"644","endLine":18,"endColumn":16},{"ruleId":"641","severity":1,"message":"759","line":22,"column":9,"nodeType":"643","messageId":"644","endLine":22,"endColumn":16},{"ruleId":"641","severity":1,"message":"722","line":23,"column":9,"nodeType":"643","messageId":"644","endLine":23,"endColumn":16},{"ruleId":"641","severity":1,"message":"713","line":103,"column":16,"nodeType":"643","messageId":"644","endLine":103,"endColumn":20},{"ruleId":"641","severity":1,"message":"714","line":103,"column":22,"nodeType":"643","messageId":"644","endLine":103,"endColumn":28},{"ruleId":"660","severity":1,"message":"697","line":113,"column":13,"nodeType":"698","endLine":131,"endColumn":4},{"ruleId":"660","severity":1,"message":"697","line":133,"column":13,"nodeType":"698","endLine":140,"endColumn":4},{"ruleId":"641","severity":1,"message":"722","line":242,"column":9,"nodeType":"643","messageId":"644","endLine":242,"endColumn":16},{"ruleId":"641","severity":1,"message":"760","line":243,"column":9,"nodeType":"643","messageId":"644","endLine":243,"endColumn":17},{"ruleId":"641","severity":1,"message":"664","line":244,"column":10,"nodeType":"643","messageId":"644","endLine":244,"endColumn":14},{"ruleId":"641","severity":1,"message":"665","line":244,"column":16,"nodeType":"643","messageId":"644","endLine":244,"endColumn":23},{"ruleId":"641","severity":1,"message":"721","line":246,"column":11,"nodeType":"643","messageId":"644","endLine":246,"endColumn":14},{"ruleId":"641","severity":1,"message":"713","line":246,"column":16,"nodeType":"643","messageId":"644","endLine":246,"endColumn":20},{"ruleId":"641","severity":1,"message":"714","line":246,"column":22,"nodeType":"643","messageId":"644","endLine":246,"endColumn":28},{"ruleId":"641","severity":1,"message":"761","line":1,"column":7,"nodeType":"643","messageId":"644","endLine":1,"endColumn":24},{"ruleId":"641","severity":1,"message":"668","line":2,"column":10,"nodeType":"643","messageId":"644","endLine":2,"endColumn":21},{"ruleId":"641","severity":1,"message":"733","line":2,"column":23,"nodeType":"643","messageId":"644","endLine":2,"endColumn":35},{"ruleId":"641","severity":1,"message":"734","line":2,"column":37,"nodeType":"643","messageId":"644","endLine":2,"endColumn":46},{"ruleId":"641","severity":1,"message":"735","line":2,"column":48,"nodeType":"643","messageId":"644","endLine":2,"endColumn":52},{"ruleId":"641","severity":1,"message":"669","line":2,"column":88,"nodeType":"643","messageId":"644","endLine":2,"endColumn":91},{"ruleId":"641","severity":1,"message":"646","line":2,"column":93,"nodeType":"643","messageId":"644","endLine":2,"endColumn":96},{"ruleId":"641","severity":1,"message":"649","line":2,"column":108,"nodeType":"643","messageId":"644","endLine":2,"endColumn":113},{"ruleId":"641","severity":1,"message":"676","line":3,"column":10,"nodeType":"643","messageId":"644","endLine":3,"endColumn":14},{"ruleId":"641","severity":1,"message":"673","line":3,"column":16,"nodeType":"643","messageId":"644","endLine":3,"endColumn":21},{"ruleId":"641","severity":1,"message":"679","line":3,"column":30,"nodeType":"643","messageId":"644","endLine":3,"endColumn":36},{"ruleId":"641","severity":1,"message":"651","line":3,"column":38,"nodeType":"643","messageId":"644","endLine":3,"endColumn":49},{"ruleId":"641","severity":1,"message":"652","line":3,"column":51,"nodeType":"643","messageId":"644","endLine":3,"endColumn":61},{"ruleId":"641","severity":1,"message":"653","line":3,"column":63,"nodeType":"643","messageId":"644","endLine":3,"endColumn":73},{"ruleId":"641","severity":1,"message":"680","line":4,"column":27,"nodeType":"643","messageId":"644","endLine":4,"endColumn":33},{"ruleId":"641","severity":1,"message":"681","line":4,"column":35,"nodeType":"643","messageId":"644","endLine":4,"endColumn":41},{"ruleId":"641","severity":1,"message":"682","line":4,"column":43,"nodeType":"643","messageId":"644","endLine":4,"endColumn":48},{"ruleId":"641","severity":1,"message":"683","line":4,"column":50,"nodeType":"643","messageId":"644","endLine":4,"endColumn":54},{"ruleId":"641","severity":1,"message":"654","line":4,"column":56,"nodeType":"643","messageId":"644","endLine":4,"endColumn":63},{"ruleId":"641","severity":1,"message":"684","line":4,"column":65,"nodeType":"643","messageId":"644","endLine":4,"endColumn":73},{"ruleId":"641","severity":1,"message":"685","line":4,"column":75,"nodeType":"643","messageId":"644","endLine":4,"endColumn":84},{"ruleId":"641","severity":1,"message":"686","line":4,"column":86,"nodeType":"643","messageId":"644","endLine":4,"endColumn":99},{"ruleId":"641","severity":1,"message":"655","line":4,"column":113,"nodeType":"643","messageId":"644","endLine":4,"endColumn":124},{"ruleId":"641","severity":1,"message":"762","line":13,"column":10,"nodeType":"643","messageId":"644","endLine":13,"endColumn":19},{"ruleId":"763","severity":1,"message":"764","line":37,"column":15,"nodeType":"765","endLine":37,"endColumn":31},{"ruleId":"641","severity":1,"message":"766","line":99,"column":10,"nodeType":"643","messageId":"644","endLine":99,"endColumn":20},{"ruleId":"641","severity":1,"message":"767","line":99,"column":22,"nodeType":"643","messageId":"644","endLine":99,"endColumn":35},{"ruleId":"768","severity":1,"message":"769","line":211,"column":29,"nodeType":"770","messageId":"771","endLine":212,"endColumn":37},{"ruleId":"641","severity":1,"message":"772","line":253,"column":16,"nodeType":"643","messageId":"644","endLine":253,"endColumn":23},{"ruleId":"709","severity":1,"message":"726","line":284,"column":29,"nodeType":"711","messageId":"712","endLine":284,"endColumn":31},{"ruleId":"709","severity":1,"message":"710","line":472,"column":69,"nodeType":"711","messageId":"712","endLine":472,"endColumn":71},{"ruleId":"709","severity":1,"message":"710","line":473,"column":83,"nodeType":"711","messageId":"712","endLine":473,"endColumn":85},{"ruleId":"641","severity":1,"message":"667","line":4,"column":30,"nodeType":"643","messageId":"644","endLine":4,"endColumn":41},{"ruleId":"641","severity":1,"message":"669","line":4,"column":64,"nodeType":"643","messageId":"644","endLine":4,"endColumn":67},{"ruleId":"641","severity":1,"message":"646","line":4,"column":69,"nodeType":"643","messageId":"644","endLine":4,"endColumn":72},{"ruleId":"641","severity":1,"message":"649","line":4,"column":84,"nodeType":"643","messageId":"644","endLine":4,"endColumn":89},{"ruleId":"641","severity":1,"message":"670","line":4,"column":91,"nodeType":"643","messageId":"644","endLine":4,"endColumn":101},{"ruleId":"641","severity":1,"message":"672","line":4,"column":113,"nodeType":"643","messageId":"644","endLine":4,"endColumn":127},{"ruleId":"641","severity":1,"message":"735","line":4,"column":147,"nodeType":"643","messageId":"644","endLine":4,"endColumn":151},{"ruleId":"641","severity":1,"message":"749","line":4,"column":153,"nodeType":"643","messageId":"644","endLine":4,"endColumn":162},{"ruleId":"641","severity":1,"message":"674","line":4,"column":164,"nodeType":"643","messageId":"644","endLine":4,"endColumn":172},{"ruleId":"641","severity":1,"message":"675","line":4,"column":174,"nodeType":"643","messageId":"644","endLine":4,"endColumn":179},{"ruleId":"641","severity":1,"message":"676","line":4,"column":181,"nodeType":"643","messageId":"644","endLine":4,"endColumn":185},{"ruleId":"641","severity":1,"message":"677","line":4,"column":187,"nodeType":"643","messageId":"644","endLine":4,"endColumn":196},{"ruleId":"641","severity":1,"message":"679","line":5,"column":10,"nodeType":"643","messageId":"644","endLine":5,"endColumn":16},{"ruleId":"641","severity":1,"message":"651","line":5,"column":18,"nodeType":"643","messageId":"644","endLine":5,"endColumn":29},{"ruleId":"641","severity":1,"message":"652","line":5,"column":31,"nodeType":"643","messageId":"644","endLine":5,"endColumn":41},{"ruleId":"641","severity":1,"message":"653","line":5,"column":43,"nodeType":"643","messageId":"644","endLine":5,"endColumn":53},{"ruleId":"641","severity":1,"message":"680","line":6,"column":27,"nodeType":"643","messageId":"644","endLine":6,"endColumn":33},{"ruleId":"641","severity":1,"message":"681","line":6,"column":35,"nodeType":"643","messageId":"644","endLine":6,"endColumn":41},{"ruleId":"641","severity":1,"message":"682","line":6,"column":43,"nodeType":"643","messageId":"644","endLine":6,"endColumn":48},{"ruleId":"641","severity":1,"message":"683","line":6,"column":50,"nodeType":"643","messageId":"644","endLine":6,"endColumn":54},{"ruleId":"641","severity":1,"message":"654","line":6,"column":56,"nodeType":"643","messageId":"644","endLine":6,"endColumn":63},{"ruleId":"641","severity":1,"message":"684","line":6,"column":65,"nodeType":"643","messageId":"644","endLine":6,"endColumn":73},{"ruleId":"641","severity":1,"message":"655","line":6,"column":87,"nodeType":"643","messageId":"644","endLine":6,"endColumn":98},{"ruleId":"641","severity":1,"message":"689","line":11,"column":10,"nodeType":"643","messageId":"644","endLine":11,"endColumn":19},{"ruleId":"641","severity":1,"message":"754","line":11,"column":21,"nodeType":"643","messageId":"644","endLine":11,"endColumn":30},{"ruleId":"641","severity":1,"message":"747","line":14,"column":10,"nodeType":"643","messageId":"644","endLine":14,"endColumn":23},{"ruleId":"641","severity":1,"message":"773","line":16,"column":8,"nodeType":"643","messageId":"644","endLine":16,"endColumn":22},{"ruleId":"641","severity":1,"message":"774","line":98,"column":10,"nodeType":"643","messageId":"644","endLine":98,"endColumn":17},{"ruleId":"641","severity":1,"message":"775","line":98,"column":19,"nodeType":"643","messageId":"644","endLine":98,"endColumn":29},{"ruleId":"641","severity":1,"message":"664","line":108,"column":9,"nodeType":"643","messageId":"644","endLine":108,"endColumn":13},{"ruleId":"641","severity":1,"message":"776","line":110,"column":9,"nodeType":"643","messageId":"644","endLine":110,"endColumn":30},{"ruleId":"641","severity":1,"message":"721","line":111,"column":11,"nodeType":"643","messageId":"644","endLine":111,"endColumn":14},{"ruleId":"641","severity":1,"message":"777","line":299,"column":9,"nodeType":"643","messageId":"644","endLine":299,"endColumn":19},{"ruleId":"641","severity":1,"message":"778","line":301,"column":10,"nodeType":"643","messageId":"644","endLine":301,"endColumn":28},{"ruleId":"641","severity":1,"message":"779","line":301,"column":30,"nodeType":"643","messageId":"644","endLine":301,"endColumn":51},{"ruleId":"763","severity":1,"message":"780","line":312,"column":5,"nodeType":"765","endLine":320,"endColumn":6},{"ruleId":"641","severity":1,"message":"781","line":327,"column":21,"nodeType":"643","messageId":"644","endLine":327,"endColumn":29},{"ruleId":"641","severity":1,"message":"782","line":533,"column":28,"nodeType":"643","messageId":"644","endLine":533,"endColumn":47},{"ruleId":"641","severity":1,"message":"783","line":534,"column":24,"nodeType":"643","messageId":"644","endLine":534,"endColumn":39},{"ruleId":"641","severity":1,"message":"784","line":536,"column":18,"nodeType":"643","messageId":"644","endLine":536,"endColumn":27},{"ruleId":"641","severity":1,"message":"772","line":537,"column":16,"nodeType":"643","messageId":"644","endLine":537,"endColumn":23},{"ruleId":"709","severity":1,"message":"726","line":560,"column":29,"nodeType":"711","messageId":"712","endLine":560,"endColumn":31},{"ruleId":"660","severity":1,"message":"785","line":638,"column":6,"nodeType":"662","endLine":638,"endColumn":10,"suggestions":"786"},{"ruleId":"709","severity":1,"message":"710","line":690,"column":67,"nodeType":"711","messageId":"712","endLine":690,"endColumn":69},{"ruleId":"709","severity":1,"message":"710","line":691,"column":81,"nodeType":"711","messageId":"712","endLine":691,"endColumn":83},{"ruleId":"641","severity":1,"message":"645","line":4,"column":10,"nodeType":"643","messageId":"644","endLine":4,"endColumn":15},{"ruleId":"641","severity":1,"message":"666","line":4,"column":17,"nodeType":"643","messageId":"644","endLine":4,"endColumn":21},{"ruleId":"641","severity":1,"message":"667","line":4,"column":23,"nodeType":"643","messageId":"644","endLine":4,"endColumn":34},{"ruleId":"641","severity":1,"message":"668","line":4,"column":44,"nodeType":"643","messageId":"644","endLine":4,"endColumn":55},{"ruleId":"641","severity":1,"message":"669","line":4,"column":57,"nodeType":"643","messageId":"644","endLine":4,"endColumn":60},{"ruleId":"641","severity":1,"message":"646","line":4,"column":62,"nodeType":"643","messageId":"644","endLine":4,"endColumn":65},{"ruleId":"641","severity":1,"message":"649","line":4,"column":77,"nodeType":"643","messageId":"644","endLine":4,"endColumn":82},{"ruleId":"641","severity":1,"message":"670","line":4,"column":84,"nodeType":"643","messageId":"644","endLine":4,"endColumn":94},{"ruleId":"641","severity":1,"message":"671","line":4,"column":96,"nodeType":"643","messageId":"644","endLine":4,"endColumn":104},{"ruleId":"641","severity":1,"message":"672","line":4,"column":106,"nodeType":"643","messageId":"644","endLine":4,"endColumn":120},{"ruleId":"641","severity":1,"message":"673","line":4,"column":133,"nodeType":"643","messageId":"644","endLine":4,"endColumn":138},{"ruleId":"641","severity":1,"message":"749","line":4,"column":146,"nodeType":"643","messageId":"644","endLine":4,"endColumn":155},{"ruleId":"641","severity":1,"message":"674","line":4,"column":157,"nodeType":"643","messageId":"644","endLine":4,"endColumn":165},{"ruleId":"641","severity":1,"message":"675","line":4,"column":167,"nodeType":"643","messageId":"644","endLine":4,"endColumn":172},{"ruleId":"641","severity":1,"message":"676","line":4,"column":174,"nodeType":"643","messageId":"644","endLine":4,"endColumn":178},{"ruleId":"641","severity":1,"message":"677","line":4,"column":180,"nodeType":"643","messageId":"644","endLine":4,"endColumn":189},{"ruleId":"641","severity":1,"message":"679","line":5,"column":10,"nodeType":"643","messageId":"644","endLine":5,"endColumn":16},{"ruleId":"641","severity":1,"message":"651","line":5,"column":18,"nodeType":"643","messageId":"644","endLine":5,"endColumn":29},{"ruleId":"641","severity":1,"message":"652","line":5,"column":31,"nodeType":"643","messageId":"644","endLine":5,"endColumn":41},{"ruleId":"641","severity":1,"message":"653","line":5,"column":43,"nodeType":"643","messageId":"644","endLine":5,"endColumn":53},{"ruleId":"641","severity":1,"message":"683","line":6,"column":50,"nodeType":"643","messageId":"644","endLine":6,"endColumn":54},{"ruleId":"641","severity":1,"message":"654","line":6,"column":56,"nodeType":"643","messageId":"644","endLine":6,"endColumn":63},{"ruleId":"641","severity":1,"message":"684","line":6,"column":65,"nodeType":"643","messageId":"644","endLine":6,"endColumn":73},{"ruleId":"641","severity":1,"message":"656","line":8,"column":8,"nodeType":"643","messageId":"644","endLine":8,"endColumn":11},{"ruleId":"641","severity":1,"message":"687","line":9,"column":10,"nodeType":"643","messageId":"644","endLine":9,"endColumn":25},{"ruleId":"641","severity":1,"message":"688","line":10,"column":10,"nodeType":"643","messageId":"644","endLine":10,"endColumn":29},{"ruleId":"641","severity":1,"message":"689","line":11,"column":10,"nodeType":"643","messageId":"644","endLine":11,"endColumn":19},{"ruleId":"641","severity":1,"message":"754","line":11,"column":21,"nodeType":"643","messageId":"644","endLine":11,"endColumn":30},{"ruleId":"641","severity":1,"message":"713","line":26,"column":11,"nodeType":"643","messageId":"644","endLine":26,"endColumn":15},{"ruleId":"641","severity":1,"message":"721","line":26,"column":17,"nodeType":"643","messageId":"644","endLine":26,"endColumn":20},{"ruleId":"641","severity":1,"message":"714","line":26,"column":22,"nodeType":"643","messageId":"644","endLine":26,"endColumn":28},{"ruleId":"641","severity":1,"message":"729","line":27,"column":9,"nodeType":"643","messageId":"644","endLine":27,"endColumn":17},{"ruleId":"641","severity":1,"message":"696","line":30,"column":10,"nodeType":"643","messageId":"644","endLine":30,"endColumn":13},{"ruleId":"660","severity":1,"message":"697","line":38,"column":13,"nodeType":"698","endLine":48,"endColumn":4},{"ruleId":"641","severity":1,"message":"645","line":3,"column":24,"nodeType":"643","messageId":"644","endLine":3,"endColumn":29},{"ruleId":"641","severity":1,"message":"667","line":3,"column":37,"nodeType":"643","messageId":"644","endLine":3,"endColumn":48},{"ruleId":"641","severity":1,"message":"735","line":3,"column":58,"nodeType":"643","messageId":"644","endLine":3,"endColumn":62},{"ruleId":"641","severity":1,"message":"669","line":3,"column":64,"nodeType":"643","messageId":"644","endLine":3,"endColumn":67},{"ruleId":"641","severity":1,"message":"646","line":3,"column":69,"nodeType":"643","messageId":"644","endLine":3,"endColumn":72},{"ruleId":"641","severity":1,"message":"649","line":3,"column":84,"nodeType":"643","messageId":"644","endLine":3,"endColumn":89},{"ruleId":"641","severity":1,"message":"787","line":3,"column":91,"nodeType":"643","messageId":"644","endLine":3,"endColumn":98},{"ruleId":"641","severity":1,"message":"788","line":3,"column":111,"nodeType":"643","messageId":"644","endLine":3,"endColumn":120},{"ruleId":"641","severity":1,"message":"679","line":4,"column":10,"nodeType":"643","messageId":"644","endLine":4,"endColumn":16},{"ruleId":"641","severity":1,"message":"651","line":4,"column":18,"nodeType":"643","messageId":"644","endLine":4,"endColumn":29},{"ruleId":"641","severity":1,"message":"652","line":4,"column":31,"nodeType":"643","messageId":"644","endLine":4,"endColumn":41},{"ruleId":"641","severity":1,"message":"653","line":4,"column":43,"nodeType":"643","messageId":"644","endLine":4,"endColumn":53},{"ruleId":"641","severity":1,"message":"680","line":5,"column":27,"nodeType":"643","messageId":"644","endLine":5,"endColumn":33},{"ruleId":"641","severity":1,"message":"681","line":5,"column":35,"nodeType":"643","messageId":"644","endLine":5,"endColumn":41},{"ruleId":"641","severity":1,"message":"682","line":5,"column":43,"nodeType":"643","messageId":"644","endLine":5,"endColumn":48},{"ruleId":"641","severity":1,"message":"683","line":5,"column":50,"nodeType":"643","messageId":"644","endLine":5,"endColumn":54},{"ruleId":"641","severity":1,"message":"654","line":5,"column":56,"nodeType":"643","messageId":"644","endLine":5,"endColumn":63},{"ruleId":"641","severity":1,"message":"684","line":5,"column":65,"nodeType":"643","messageId":"644","endLine":5,"endColumn":73},{"ruleId":"641","severity":1,"message":"656","line":11,"column":8,"nodeType":"643","messageId":"644","endLine":11,"endColumn":11},{"ruleId":"641","severity":1,"message":"789","line":92,"column":19,"nodeType":"643","messageId":"644","endLine":92,"endColumn":29},{"ruleId":"641","severity":1,"message":"722","line":538,"column":9,"nodeType":"643","messageId":"644","endLine":538,"endColumn":16},{"ruleId":"709","severity":1,"message":"710","line":558,"column":35,"nodeType":"711","messageId":"712","endLine":558,"endColumn":37},{"ruleId":"641","severity":1,"message":"722","line":567,"column":9,"nodeType":"643","messageId":"644","endLine":567,"endColumn":16},{"ruleId":"641","severity":1,"message":"759","line":568,"column":9,"nodeType":"643","messageId":"644","endLine":568,"endColumn":16},{"ruleId":"641","severity":1,"message":"759","line":624,"column":9,"nodeType":"643","messageId":"644","endLine":624,"endColumn":16},{"ruleId":"641","severity":1,"message":"696","line":712,"column":10,"nodeType":"643","messageId":"644","endLine":712,"endColumn":13},{"ruleId":"641","severity":1,"message":"790","line":712,"column":15,"nodeType":"643","messageId":"644","endLine":712,"endColumn":21},{"ruleId":"660","severity":1,"message":"697","line":795,"column":13,"nodeType":"698","endLine":821,"endColumn":4},{"ruleId":"660","severity":1,"message":"791","line":821,"column":6,"nodeType":"662","endLine":821,"endColumn":40,"suggestions":"792"},{"ruleId":"641","severity":1,"message":"793","line":877,"column":9,"nodeType":"643","messageId":"644","endLine":877,"endColumn":27},{"ruleId":"660","severity":1,"message":"697","line":956,"column":13,"nodeType":"698","endLine":963,"endColumn":4},{"ruleId":"709","severity":1,"message":"726","line":1005,"column":33,"nodeType":"711","messageId":"712","endLine":1005,"endColumn":35},{"ruleId":"709","severity":1,"message":"726","line":1005,"column":65,"nodeType":"711","messageId":"712","endLine":1005,"endColumn":67},{"ruleId":"660","severity":1,"message":"697","line":1028,"column":13,"nodeType":"698","endLine":1067,"endColumn":4},{"ruleId":"641","severity":1,"message":"646","line":3,"column":49,"nodeType":"643","messageId":"644","endLine":3,"endColumn":52},{"ruleId":"641","severity":1,"message":"649","line":3,"column":64,"nodeType":"643","messageId":"644","endLine":3,"endColumn":69},{"ruleId":"641","severity":1,"message":"788","line":3,"column":82,"nodeType":"643","messageId":"644","endLine":3,"endColumn":91},{"ruleId":"641","severity":1,"message":"794","line":3,"column":93,"nodeType":"643","messageId":"644","endLine":3,"endColumn":100},{"ruleId":"641","severity":1,"message":"795","line":3,"column":109,"nodeType":"643","messageId":"644","endLine":3,"endColumn":123},{"ruleId":"641","severity":1,"message":"750","line":3,"column":144,"nodeType":"643","messageId":"644","endLine":3,"endColumn":157},{"ruleId":"641","severity":1,"message":"679","line":4,"column":10,"nodeType":"643","messageId":"644","endLine":4,"endColumn":16},{"ruleId":"641","severity":1,"message":"651","line":4,"column":18,"nodeType":"643","messageId":"644","endLine":4,"endColumn":29},{"ruleId":"641","severity":1,"message":"652","line":4,"column":31,"nodeType":"643","messageId":"644","endLine":4,"endColumn":41},{"ruleId":"641","severity":1,"message":"653","line":4,"column":43,"nodeType":"643","messageId":"644","endLine":4,"endColumn":53},{"ruleId":"641","severity":1,"message":"680","line":5,"column":27,"nodeType":"643","messageId":"644","endLine":5,"endColumn":33},{"ruleId":"641","severity":1,"message":"681","line":5,"column":35,"nodeType":"643","messageId":"644","endLine":5,"endColumn":41},{"ruleId":"641","severity":1,"message":"682","line":5,"column":43,"nodeType":"643","messageId":"644","endLine":5,"endColumn":48},{"ruleId":"641","severity":1,"message":"683","line":5,"column":50,"nodeType":"643","messageId":"644","endLine":5,"endColumn":54},{"ruleId":"641","severity":1,"message":"654","line":5,"column":56,"nodeType":"643","messageId":"644","endLine":5,"endColumn":63},{"ruleId":"641","severity":1,"message":"684","line":5,"column":65,"nodeType":"643","messageId":"644","endLine":5,"endColumn":73},{"ruleId":"641","severity":1,"message":"796","line":12,"column":20,"nodeType":"643","messageId":"644","endLine":12,"endColumn":31},{"ruleId":"641","severity":1,"message":"713","line":15,"column":11,"nodeType":"643","messageId":"644","endLine":15,"endColumn":15},{"ruleId":"641","severity":1,"message":"721","line":15,"column":17,"nodeType":"643","messageId":"644","endLine":15,"endColumn":20},{"ruleId":"641","severity":1,"message":"714","line":15,"column":22,"nodeType":"643","messageId":"644","endLine":15,"endColumn":28},{"ruleId":"641","severity":1,"message":"713","line":54,"column":11,"nodeType":"643","messageId":"644","endLine":54,"endColumn":15},{"ruleId":"641","severity":1,"message":"721","line":54,"column":17,"nodeType":"643","messageId":"644","endLine":54,"endColumn":20},{"ruleId":"641","severity":1,"message":"714","line":54,"column":22,"nodeType":"643","messageId":"644","endLine":54,"endColumn":28},{"ruleId":"641","severity":1,"message":"789","line":153,"column":19,"nodeType":"643","messageId":"644","endLine":153,"endColumn":29},{"ruleId":"660","severity":1,"message":"697","line":155,"column":13,"nodeType":"698","endLine":164,"endColumn":4},{"ruleId":"660","severity":1,"message":"797","line":164,"column":6,"nodeType":"662","endLine":164,"endColumn":25,"suggestions":"798"},{"ruleId":"641","severity":1,"message":"790","line":332,"column":15,"nodeType":"643","messageId":"644","endLine":332,"endColumn":21},{"ruleId":"660","severity":1,"message":"697","line":339,"column":13,"nodeType":"698","endLine":348,"endColumn":4},{"ruleId":"641","severity":1,"message":"666","line":3,"column":17,"nodeType":"643","messageId":"644","endLine":3,"endColumn":21},{"ruleId":"641","severity":1,"message":"667","line":3,"column":23,"nodeType":"643","messageId":"644","endLine":3,"endColumn":34},{"ruleId":"641","severity":1,"message":"736","line":3,"column":36,"nodeType":"643","messageId":"644","endLine":3,"endColumn":42},{"ruleId":"641","severity":1,"message":"668","line":3,"column":44,"nodeType":"643","messageId":"644","endLine":3,"endColumn":55},{"ruleId":"641","severity":1,"message":"669","line":3,"column":57,"nodeType":"643","messageId":"644","endLine":3,"endColumn":60},{"ruleId":"641","severity":1,"message":"646","line":3,"column":62,"nodeType":"643","messageId":"644","endLine":3,"endColumn":65},{"ruleId":"641","severity":1,"message":"647","line":3,"column":67,"nodeType":"643","messageId":"644","endLine":3,"endColumn":70},{"ruleId":"641","severity":1,"message":"648","line":3,"column":72,"nodeType":"643","messageId":"644","endLine":3,"endColumn":75},{"ruleId":"641","severity":1,"message":"649","line":3,"column":77,"nodeType":"643","messageId":"644","endLine":3,"endColumn":82},{"ruleId":"641","severity":1,"message":"670","line":3,"column":93,"nodeType":"643","messageId":"644","endLine":3,"endColumn":103},{"ruleId":"641","severity":1,"message":"671","line":3,"column":105,"nodeType":"643","messageId":"644","endLine":3,"endColumn":113},{"ruleId":"641","severity":1,"message":"672","line":3,"column":115,"nodeType":"643","messageId":"644","endLine":3,"endColumn":129},{"ruleId":"641","severity":1,"message":"673","line":3,"column":142,"nodeType":"643","messageId":"644","endLine":3,"endColumn":147},{"ruleId":"641","severity":1,"message":"735","line":3,"column":149,"nodeType":"643","messageId":"644","endLine":3,"endColumn":153},{"ruleId":"641","severity":1,"message":"749","line":3,"column":155,"nodeType":"643","messageId":"644","endLine":3,"endColumn":164},{"ruleId":"641","severity":1,"message":"674","line":3,"column":166,"nodeType":"643","messageId":"644","endLine":3,"endColumn":174},{"ruleId":"641","severity":1,"message":"675","line":3,"column":176,"nodeType":"643","messageId":"644","endLine":3,"endColumn":181},{"ruleId":"641","severity":1,"message":"676","line":3,"column":183,"nodeType":"643","messageId":"644","endLine":3,"endColumn":187},{"ruleId":"641","severity":1,"message":"677","line":3,"column":189,"nodeType":"643","messageId":"644","endLine":3,"endColumn":198},{"ruleId":"641","severity":1,"message":"750","line":3,"column":200,"nodeType":"643","messageId":"644","endLine":3,"endColumn":213},{"ruleId":"641","severity":1,"message":"799","line":23,"column":9,"nodeType":"643","messageId":"644","endLine":23,"endColumn":13},"no-native-reassign",["800"],"no-negated-in-lhs",["801"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'Tab' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Table' is defined but never used.","'ListGroup' is defined but never used.","'NavDropdown' is defined but never used.","'Breadcrumb' is defined but never used.","'Pagination' is defined but never used.","'NavLink' is defined but never used.","'useLocation' is defined but never used.","'SVG' is defined but never used.","'NavigationBar' is defined but never used.","'constants' is defined but never used.","'CNavbar' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["802"],"'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'ButtonGroup' is defined but never used.","'Nav' is defined but never used.","'InputGroup' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'Image' is defined but never used.","'CardDeck' is defined but never used.","'Badge' is defined but never used.","'Tabs' is defined but never used.","'FormGroup' is defined but never used.","'Carousel' is defined but never used.","'Navbar' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'useParams' is defined but never used.","'useRouteMatch' is defined but never used.","'makePaginations' is defined but never used.","'timeStringConverter' is defined but never used.","'TopicCard' is defined but never used.","'PostCard' is defined but never used.","'NewPostForm' is defined but never used.","'PostList' is defined but never used.","'LoginForm' is defined but never used.","'posts' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'msg' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["803"],"React Hook useEffect has missing dependencies: 'id', 'region.region_id', and 'year'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setType' needs the current value of 'region.region_id'.",["804"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setType' needs the current value of 'data'.",["805"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setEnroll' needs the current value of 'data'.",["806"],"React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setRegionData' needs the current value of 'data'.",["807"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'path' is assigned a value but never used.","'params' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["808"],"'match' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'institute._id'. Either include it or remove the dependency array.",["809"],["810"],"'url' is assigned a value but never used.","'history' is assigned a value but never used.",["811"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'handleQuery'. Either include it or remove the dependency array.",["812"],"'location' is assigned a value but never used.","'setInstperpage' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'ToggleButton' is defined but never used.","'Accordion' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'useHistory' is defined but never used.","'axios' is defined but never used.",["800"],["801"],"'goBack' is assigned a value but never used.",["813"],"'App' is defined but never used.","CallExpression","'ExampleForm' is defined but never used.","'UserLink' is defined but never used.","'InstituteCard' is defined but never used.","'InstituteSelector' is defined but never used.","'CardGroup' is defined but never used.","'ListGroupItem' is defined but never used.",["814"],["815"],"'setId' is assigned a value but never used.","'TopicList' is defined but never used.","'UserListItem' is defined but never used.","'UserCard' is defined but never used.","'toggleFollowService' is defined but never used.","'serverUrl' is assigned a value but never used.","'loginAs' is assigned a value but never used.","'username' is assigned a value but never used.","'dateStringOptions' is assigned a value but never used.","'PostImage' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'showClosed' is assigned a value but never used.","'setShowClosed' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'setTags' is assigned a value but never used.","'default_avatar' is defined but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'handleContentRetrieve' is assigned a value but never used.","'setReplyTo' is assigned a value but never used.","'removedPostVisible' is assigned a value but never used.","'setRemovedPostVisible' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setValue' is assigned a value but never used.","'setRelatedInstitute' is assigned a value but never used.","'setRelatedTopic' is assigned a value but never used.","'setRegion' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.relatedInstitute' and 'props.relatedTopic'. Either include them or remove the dependency array.",["816"],"'Spinner' is defined but never used.","'ModalBody' is defined but never used.","'setLoginAs' is assigned a value but never used.","'setMsg' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isHomepage', 'loginAs', and 'props.limit'. Either include them or remove the dependency array.",["817"],"'handleAvatarSubmit' is assigned a value but never used.","'Popover' is defined but never used.","'OverlayTrigger' is defined but never used.","'MsgListItem' is defined but never used.","React Hook useEffect has a missing dependency: 'loginAs'. Either include it or remove the dependency array.",["818"],"'type' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"819","fix":"820"},{"desc":"821","fix":"822"},{"desc":"823","fix":"824"},{"desc":"825","fix":"826"},{"desc":"827","fix":"828"},{"desc":"829","fix":"830"},{"desc":"831","fix":"832"},{"desc":"833","fix":"834"},{"desc":"833","fix":"835"},{"desc":"831","fix":"836"},{"desc":"837","fix":"838"},{"desc":"839","fix":"840"},{"desc":"841","fix":"842"},{"desc":"837","fix":"843"},{"desc":"844","fix":"845"},{"desc":"846","fix":"847"},{"desc":"848","fix":"849"},"Update the dependencies array to be: [history]",{"range":"850","text":"851"},"Update the dependencies array to be: [user]",{"range":"852","text":"853"},"Update the dependencies array to be: [id, region.region_id, year]",{"range":"854","text":"855"},"Update the dependencies array to be: [year, region, data]",{"range":"856","text":"857"},"Update the dependencies array to be: [region, year, type, data]",{"range":"858","text":"859"},"Update the dependencies array to be: [data, region, type]",{"range":"860","text":"861"},"Update the dependencies array to be: [id]",{"range":"862","text":"863"},"Update the dependencies array to be: [institute._id]",{"range":"864","text":"865"},{"range":"866","text":"865"},{"range":"867","text":"863"},"Update the dependencies array to be: [handleQuery, queryTags]",{"range":"868","text":"869"},"Update the dependencies array to be: [history, location]",{"range":"870","text":"871"},"Update the dependencies array to be: [handleQuery, queryImmediately]",{"range":"872","text":"873"},{"range":"874","text":"869"},"Update the dependencies array to be: [id, props.relatedInstitute, props.relatedTopic]",{"range":"875","text":"876"},"Update the dependencies array to be: [isHomepage, loginAs, props.limit, props.user, props.users, refresh]",{"range":"877","text":"878"},"Update the dependencies array to be: [loginAs, props.instituteId]",{"range":"879","text":"880"},[1971,1973],"[history]",[2942,2944],"[user]",[5252,5254],"[id, region.region_id, year]",[5458,5472],"[year, region, data]",[5599,5619],"[region, year, type, data]",[5881,5895],"[data, region, type]",[14703,14705],"[id]",[18430,18432],"[institute._id]",[18748,18750],[23500,23516],[28501,28512],"[handleQuery, queryTags]",[1137,1147],"[history, location]",[4301,4319],"[handleQuery, queryImmediately]",[4371,4382],[22202,22206],"[id, props.relatedInstitute, props.relatedTopic]",[27581,27615],"[isHomepage, loginAs, props.limit, props.user, props.users, refresh]",[5450,5469],"[loginAs, props.instituteId]"]